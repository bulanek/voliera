                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim2
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM2_TimeBaseInit_PARM_2
                                     12 	.globl _assert_failed
                                     13 	.globl _TIM2_SelectOCxM_PARM_2
                                     14 	.globl _TIM2_CCxCmd_PARM_2
                                     15 	.globl _TIM2_PrescalerConfig_PARM_2
                                     16 	.globl _TIM2_ITConfig_PARM_2
                                     17 	.globl _TIM2_PWMIConfig_PARM_5
                                     18 	.globl _TIM2_PWMIConfig_PARM_4
                                     19 	.globl _TIM2_PWMIConfig_PARM_3
                                     20 	.globl _TIM2_PWMIConfig_PARM_2
                                     21 	.globl _TIM2_ICInit_PARM_5
                                     22 	.globl _TIM2_ICInit_PARM_4
                                     23 	.globl _TIM2_ICInit_PARM_3
                                     24 	.globl _TIM2_ICInit_PARM_2
                                     25 	.globl _TIM2_OC3Init_PARM_4
                                     26 	.globl _TIM2_OC3Init_PARM_3
                                     27 	.globl _TIM2_OC3Init_PARM_2
                                     28 	.globl _TIM2_OC2Init_PARM_4
                                     29 	.globl _TIM2_OC2Init_PARM_3
                                     30 	.globl _TIM2_OC2Init_PARM_2
                                     31 	.globl _TIM2_OC1Init_PARM_4
                                     32 	.globl _TIM2_OC1Init_PARM_3
                                     33 	.globl _TIM2_OC1Init_PARM_2
                                     34 	.globl _TIM2_DeInit
                                     35 	.globl _TIM2_TimeBaseInit
                                     36 	.globl _TIM2_OC1Init
                                     37 	.globl _TIM2_OC2Init
                                     38 	.globl _TIM2_OC3Init
                                     39 	.globl _TIM2_ICInit
                                     40 	.globl _TIM2_PWMIConfig
                                     41 	.globl _TIM2_Cmd
                                     42 	.globl _TIM2_ITConfig
                                     43 	.globl _TIM2_UpdateDisableConfig
                                     44 	.globl _TIM2_UpdateRequestConfig
                                     45 	.globl _TIM2_SelectOnePulseMode
                                     46 	.globl _TIM2_PrescalerConfig
                                     47 	.globl _TIM2_ForcedOC1Config
                                     48 	.globl _TIM2_ForcedOC2Config
                                     49 	.globl _TIM2_ForcedOC3Config
                                     50 	.globl _TIM2_ARRPreloadConfig
                                     51 	.globl _TIM2_OC1PreloadConfig
                                     52 	.globl _TIM2_OC2PreloadConfig
                                     53 	.globl _TIM2_OC3PreloadConfig
                                     54 	.globl _TIM2_GenerateEvent
                                     55 	.globl _TIM2_OC1PolarityConfig
                                     56 	.globl _TIM2_OC2PolarityConfig
                                     57 	.globl _TIM2_OC3PolarityConfig
                                     58 	.globl _TIM2_CCxCmd
                                     59 	.globl _TIM2_SelectOCxM
                                     60 	.globl _TIM2_SetCounter
                                     61 	.globl _TIM2_SetAutoreload
                                     62 	.globl _TIM2_SetCompare1
                                     63 	.globl _TIM2_SetCompare2
                                     64 	.globl _TIM2_SetCompare3
                                     65 	.globl _TIM2_SetIC1Prescaler
                                     66 	.globl _TIM2_SetIC2Prescaler
                                     67 	.globl _TIM2_SetIC3Prescaler
                                     68 	.globl _TIM2_GetCapture1
                                     69 	.globl _TIM2_GetCapture2
                                     70 	.globl _TIM2_GetCapture3
                                     71 	.globl _TIM2_GetCounter
                                     72 	.globl _TIM2_GetPrescaler
                                     73 	.globl _TIM2_GetFlagStatus
                                     74 	.globl _TIM2_ClearFlag
                                     75 	.globl _TIM2_GetITStatus
                                     76 	.globl _TIM2_ClearITPendingBit
                                     77 ;--------------------------------------------------------
                                     78 ; special function registers
                                     79 ;--------------------------------------------------------
                                     80 	.area RSEG    (ABS,DATA)
      000000                         81 	.org 0x0000
                                     82 ;--------------------------------------------------------
                                     83 ; special function bits
                                     84 ;--------------------------------------------------------
                                     85 	.area RSEG    (ABS,DATA)
      000000                         86 	.org 0x0000
                                     87 ;--------------------------------------------------------
                                     88 ; overlayable register banks
                                     89 ;--------------------------------------------------------
                                     90 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         91 	.ds 8
                                     92 ;--------------------------------------------------------
                                     93 ; internal ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area DSEG    (DATA)
      000000                         96 _TIM2_OC1Init_PARM_2:
      000000                         97 	.ds 1
      000001                         98 _TIM2_OC1Init_PARM_3:
      000001                         99 	.ds 2
      000003                        100 _TIM2_OC1Init_PARM_4:
      000003                        101 	.ds 1
      000004                        102 _TIM2_OC2Init_PARM_2:
      000004                        103 	.ds 1
      000005                        104 _TIM2_OC2Init_PARM_3:
      000005                        105 	.ds 2
      000007                        106 _TIM2_OC2Init_PARM_4:
      000007                        107 	.ds 1
      000008                        108 _TIM2_OC3Init_PARM_2:
      000008                        109 	.ds 1
      000009                        110 _TIM2_OC3Init_PARM_3:
      000009                        111 	.ds 2
      00000B                        112 _TIM2_OC3Init_PARM_4:
      00000B                        113 	.ds 1
      00000C                        114 _TIM2_ICInit_PARM_2:
      00000C                        115 	.ds 1
      00000D                        116 _TIM2_ICInit_PARM_3:
      00000D                        117 	.ds 1
      00000E                        118 _TIM2_ICInit_PARM_4:
      00000E                        119 	.ds 1
      00000F                        120 _TIM2_ICInit_PARM_5:
      00000F                        121 	.ds 1
      000010                        122 _TIM2_PWMIConfig_PARM_2:
      000010                        123 	.ds 1
      000011                        124 _TIM2_PWMIConfig_PARM_3:
      000011                        125 	.ds 1
      000012                        126 _TIM2_PWMIConfig_PARM_4:
      000012                        127 	.ds 1
      000013                        128 _TIM2_PWMIConfig_PARM_5:
      000013                        129 	.ds 1
      000014                        130 _TIM2_ITConfig_PARM_2:
      000014                        131 	.ds 1
      000015                        132 _TIM2_PrescalerConfig_PARM_2:
      000015                        133 	.ds 1
      000016                        134 _TIM2_CCxCmd_PARM_2:
      000016                        135 	.ds 1
      000017                        136 _TIM2_SelectOCxM_PARM_2:
      000017                        137 	.ds 1
                                    138 ;--------------------------------------------------------
                                    139 ; overlayable items in internal ram 
                                    140 ;--------------------------------------------------------
                                    141 	.area	OSEG    (OVR,DATA)
      000000                        142 _TIM2_TimeBaseInit_PARM_2:
      000000                        143 	.ds 2
                                    144 	.area	OSEG    (OVR,DATA)
                                    145 	.area	OSEG    (OVR,DATA)
                                    146 	.area	OSEG    (OVR,DATA)
                                    147 	.area	OSEG    (OVR,DATA)
                                    148 	.area	OSEG    (OVR,DATA)
                                    149 	.area	OSEG    (OVR,DATA)
                                    150 	.area	OSEG    (OVR,DATA)
                                    151 	.area	OSEG    (OVR,DATA)
                                    152 	.area	OSEG    (OVR,DATA)
                                    153 	.area	OSEG    (OVR,DATA)
      000000                        154 _TI1_Config_PARM_2:
      000000                        155 	.ds 1
      000001                        156 _TI1_Config_PARM_3:
      000001                        157 	.ds 1
                                    158 	.area	OSEG    (OVR,DATA)
      000000                        159 _TI2_Config_PARM_2:
      000000                        160 	.ds 1
      000001                        161 _TI2_Config_PARM_3:
      000001                        162 	.ds 1
                                    163 	.area	OSEG    (OVR,DATA)
      000000                        164 _TI3_Config_PARM_2:
      000000                        165 	.ds 1
      000001                        166 _TI3_Config_PARM_3:
      000001                        167 	.ds 1
                                    168 ;--------------------------------------------------------
                                    169 ; indirectly addressable internal ram data
                                    170 ;--------------------------------------------------------
                                    171 	.area ISEG    (DATA)
                                    172 ;--------------------------------------------------------
                                    173 ; absolute internal ram data
                                    174 ;--------------------------------------------------------
                                    175 	.area IABS    (ABS,DATA)
                                    176 	.area IABS    (ABS,DATA)
                                    177 ;--------------------------------------------------------
                                    178 ; bit data
                                    179 ;--------------------------------------------------------
                                    180 	.area BSEG    (BIT)
      000000                        181 _TIM2_ICInit_sloc0_1_0:
      000000                        182 	.ds 1
      000001                        183 _TIM2_ITConfig_sloc0_1_0:
      000001                        184 	.ds 1
      000002                        185 _TIM2_ClearITPendingBit_sloc0_1_0:
      000002                        186 	.ds 1
                                    187 ;--------------------------------------------------------
                                    188 ; paged external ram data
                                    189 ;--------------------------------------------------------
                                    190 	.area PSEG    (PAG,XDATA)
                                    191 ;--------------------------------------------------------
                                    192 ; external ram data
                                    193 ;--------------------------------------------------------
                                    194 	.area XSEG    (XDATA)
                                    195 ;--------------------------------------------------------
                                    196 ; absolute external ram data
                                    197 ;--------------------------------------------------------
                                    198 	.area XABS    (ABS,XDATA)
                                    199 ;--------------------------------------------------------
                                    200 ; external initialized ram data
                                    201 ;--------------------------------------------------------
                                    202 	.area XISEG   (XDATA)
                                    203 	.area HOME    (CODE)
                                    204 	.area GSINIT0 (CODE)
                                    205 	.area GSINIT1 (CODE)
                                    206 	.area GSINIT2 (CODE)
                                    207 	.area GSINIT3 (CODE)
                                    208 	.area GSINIT4 (CODE)
                                    209 	.area GSINIT5 (CODE)
                                    210 	.area GSINIT  (CODE)
                                    211 	.area GSFINAL (CODE)
                                    212 	.area CSEG    (CODE)
                                    213 ;--------------------------------------------------------
                                    214 ; global & static initialisations
                                    215 ;--------------------------------------------------------
                                    216 	.area HOME    (CODE)
                                    217 	.area GSINIT  (CODE)
                                    218 	.area GSFINAL (CODE)
                                    219 	.area GSINIT  (CODE)
                                    220 ;--------------------------------------------------------
                                    221 ; Home
                                    222 ;--------------------------------------------------------
                                    223 	.area HOME    (CODE)
                                    224 	.area HOME    (CODE)
                                    225 ;--------------------------------------------------------
                                    226 ; code
                                    227 ;--------------------------------------------------------
                                    228 	.area CSEG    (CODE)
                                    229 ;------------------------------------------------------------
                                    230 ;Allocation info for local variables in function 'TIM2_DeInit'
                                    231 ;------------------------------------------------------------
                                    232 ;	../../src/stm8s_tim2.c:52: void TIM2_DeInit(void)
                                    233 ;	-----------------------------------------
                                    234 ;	 function TIM2_DeInit
                                    235 ;	-----------------------------------------
      000000                        236 _TIM2_DeInit:
                           000007   237 	ar7 = 0x07
                           000006   238 	ar6 = 0x06
                           000005   239 	ar5 = 0x05
                           000004   240 	ar4 = 0x04
                           000003   241 	ar3 = 0x03
                           000002   242 	ar2 = 0x02
                           000001   243 	ar1 = 0x01
                           000000   244 	ar0 = 0x00
                                    245 ;	../../src/stm8s_tim2.c:54: TIM2->CR1 = (uint8_t)TIM2_CR1_RESET_VALUE;
      000000 90 53 00         [24]  246 	mov	dptr,#0x5300
      000003 E4               [12]  247 	clr	a
      000004 F5 F0            [12]  248 	mov	b,a
      000006 12r00r00         [24]  249 	lcall	__gptrput
                                    250 ;	../../src/stm8s_tim2.c:55: TIM2->IER = (uint8_t)TIM2_IER_RESET_VALUE;
      000009 90 53 03         [24]  251 	mov	dptr,#0x5303
      00000C 75 F0 00         [24]  252 	mov	b,#0x00
      00000F 12r00r00         [24]  253 	lcall	__gptrput
                                    254 ;	../../src/stm8s_tim2.c:56: TIM2->SR2 = (uint8_t)TIM2_SR2_RESET_VALUE;
      000012 90 53 05         [24]  255 	mov	dptr,#0x5305
      000015 75 F0 00         [24]  256 	mov	b,#0x00
      000018 12r00r00         [24]  257 	lcall	__gptrput
                                    258 ;	../../src/stm8s_tim2.c:59: TIM2->CCER1 = (uint8_t)TIM2_CCER1_RESET_VALUE;
      00001B 90 53 0A         [24]  259 	mov	dptr,#0x530a
      00001E 75 F0 00         [24]  260 	mov	b,#0x00
      000021 12r00r00         [24]  261 	lcall	__gptrput
                                    262 ;	../../src/stm8s_tim2.c:60: TIM2->CCER2 = (uint8_t)TIM2_CCER2_RESET_VALUE;
      000024 90 53 0B         [24]  263 	mov	dptr,#0x530b
      000027 75 F0 00         [24]  264 	mov	b,#0x00
      00002A 12r00r00         [24]  265 	lcall	__gptrput
                                    266 ;	../../src/stm8s_tim2.c:64: TIM2->CCER1 = (uint8_t)TIM2_CCER1_RESET_VALUE;
      00002D 90 53 0A         [24]  267 	mov	dptr,#0x530a
      000030 75 F0 00         [24]  268 	mov	b,#0x00
      000033 12r00r00         [24]  269 	lcall	__gptrput
                                    270 ;	../../src/stm8s_tim2.c:65: TIM2->CCER2 = (uint8_t)TIM2_CCER2_RESET_VALUE;
      000036 90 53 0B         [24]  271 	mov	dptr,#0x530b
      000039 75 F0 00         [24]  272 	mov	b,#0x00
      00003C 12r00r00         [24]  273 	lcall	__gptrput
                                    274 ;	../../src/stm8s_tim2.c:66: TIM2->CCMR1 = (uint8_t)TIM2_CCMR1_RESET_VALUE;
      00003F 90 53 07         [24]  275 	mov	dptr,#0x5307
      000042 75 F0 00         [24]  276 	mov	b,#0x00
      000045 12r00r00         [24]  277 	lcall	__gptrput
                                    278 ;	../../src/stm8s_tim2.c:67: TIM2->CCMR2 = (uint8_t)TIM2_CCMR2_RESET_VALUE;
      000048 90 53 08         [24]  279 	mov	dptr,#0x5308
      00004B 75 F0 00         [24]  280 	mov	b,#0x00
      00004E 12r00r00         [24]  281 	lcall	__gptrput
                                    282 ;	../../src/stm8s_tim2.c:68: TIM2->CCMR3 = (uint8_t)TIM2_CCMR3_RESET_VALUE;
      000051 90 53 09         [24]  283 	mov	dptr,#0x5309
      000054 75 F0 00         [24]  284 	mov	b,#0x00
      000057 12r00r00         [24]  285 	lcall	__gptrput
                                    286 ;	../../src/stm8s_tim2.c:69: TIM2->CNTRH = (uint8_t)TIM2_CNTRH_RESET_VALUE;
      00005A 90 53 0C         [24]  287 	mov	dptr,#0x530c
      00005D 75 F0 00         [24]  288 	mov	b,#0x00
      000060 12r00r00         [24]  289 	lcall	__gptrput
                                    290 ;	../../src/stm8s_tim2.c:70: TIM2->CNTRL = (uint8_t)TIM2_CNTRL_RESET_VALUE;
      000063 90 53 0D         [24]  291 	mov	dptr,#0x530d
      000066 75 F0 00         [24]  292 	mov	b,#0x00
      000069 12r00r00         [24]  293 	lcall	__gptrput
                                    294 ;	../../src/stm8s_tim2.c:71: TIM2->PSCR = (uint8_t)TIM2_PSCR_RESET_VALUE;
      00006C 90 53 0E         [24]  295 	mov	dptr,#0x530e
      00006F 75 F0 00         [24]  296 	mov	b,#0x00
      000072 12r00r00         [24]  297 	lcall	__gptrput
                                    298 ;	../../src/stm8s_tim2.c:72: TIM2->ARRH  = (uint8_t)TIM2_ARRH_RESET_VALUE;
      000075 90 53 0F         [24]  299 	mov	dptr,#0x530f
      000078 75 F0 00         [24]  300 	mov	b,#0x00
      00007B 14               [12]  301 	dec	a
      00007C 12r00r00         [24]  302 	lcall	__gptrput
                                    303 ;	../../src/stm8s_tim2.c:73: TIM2->ARRL  = (uint8_t)TIM2_ARRL_RESET_VALUE;
      00007F 90 53 10         [24]  304 	mov	dptr,#0x5310
      000082 75 F0 00         [24]  305 	mov	b,#0x00
      000085 12r00r00         [24]  306 	lcall	__gptrput
                                    307 ;	../../src/stm8s_tim2.c:74: TIM2->CCR1H = (uint8_t)TIM2_CCR1H_RESET_VALUE;
      000088 90 53 11         [24]  308 	mov	dptr,#0x5311
      00008B E4               [12]  309 	clr	a
      00008C F5 F0            [12]  310 	mov	b,a
      00008E 12r00r00         [24]  311 	lcall	__gptrput
                                    312 ;	../../src/stm8s_tim2.c:75: TIM2->CCR1L = (uint8_t)TIM2_CCR1L_RESET_VALUE;
      000091 90 53 12         [24]  313 	mov	dptr,#0x5312
      000094 75 F0 00         [24]  314 	mov	b,#0x00
      000097 12r00r00         [24]  315 	lcall	__gptrput
                                    316 ;	../../src/stm8s_tim2.c:76: TIM2->CCR2H = (uint8_t)TIM2_CCR2H_RESET_VALUE;
      00009A 90 53 13         [24]  317 	mov	dptr,#0x5313
      00009D 75 F0 00         [24]  318 	mov	b,#0x00
      0000A0 12r00r00         [24]  319 	lcall	__gptrput
                                    320 ;	../../src/stm8s_tim2.c:77: TIM2->CCR2L = (uint8_t)TIM2_CCR2L_RESET_VALUE;
      0000A3 90 53 14         [24]  321 	mov	dptr,#0x5314
      0000A6 75 F0 00         [24]  322 	mov	b,#0x00
      0000A9 12r00r00         [24]  323 	lcall	__gptrput
                                    324 ;	../../src/stm8s_tim2.c:78: TIM2->CCR3H = (uint8_t)TIM2_CCR3H_RESET_VALUE;
      0000AC 90 53 15         [24]  325 	mov	dptr,#0x5315
      0000AF 75 F0 00         [24]  326 	mov	b,#0x00
      0000B2 12r00r00         [24]  327 	lcall	__gptrput
                                    328 ;	../../src/stm8s_tim2.c:79: TIM2->CCR3L = (uint8_t)TIM2_CCR3L_RESET_VALUE;
      0000B5 90 53 16         [24]  329 	mov	dptr,#0x5316
      0000B8 75 F0 00         [24]  330 	mov	b,#0x00
      0000BB 12r00r00         [24]  331 	lcall	__gptrput
                                    332 ;	../../src/stm8s_tim2.c:80: TIM2->SR1 = (uint8_t)TIM2_SR1_RESET_VALUE;
      0000BE 90 53 04         [24]  333 	mov	dptr,#0x5304
      0000C1 75 F0 00         [24]  334 	mov	b,#0x00
      0000C4 02r00r00         [24]  335 	ljmp	__gptrput
                                    336 ;------------------------------------------------------------
                                    337 ;Allocation info for local variables in function 'TIM2_TimeBaseInit'
                                    338 ;------------------------------------------------------------
                                    339 ;TIM2_Period               Allocated with name '_TIM2_TimeBaseInit_PARM_2'
                                    340 ;TIM2_Prescaler            Allocated to registers r7 
                                    341 ;------------------------------------------------------------
                                    342 ;	../../src/stm8s_tim2.c:89: void TIM2_TimeBaseInit( TIM2_Prescaler_TypeDef TIM2_Prescaler,
                                    343 ;	-----------------------------------------
                                    344 ;	 function TIM2_TimeBaseInit
                                    345 ;	-----------------------------------------
      0000C7                        346 _TIM2_TimeBaseInit:
      0000C7 AF 82            [24]  347 	mov	r7,dpl
                                    348 ;	../../src/stm8s_tim2.c:93: TIM2->PSCR = (uint8_t)(TIM2_Prescaler);
      0000C9 90 53 0E         [24]  349 	mov	dptr,#0x530e
      0000CC 75 F0 00         [24]  350 	mov	b,#0x00
      0000CF EF               [12]  351 	mov	a,r7
      0000D0 12r00r00         [24]  352 	lcall	__gptrput
                                    353 ;	../../src/stm8s_tim2.c:95: TIM2->ARRH = (uint8_t)(TIM2_Period >> 8);
      0000D3 AF*01            [24]  354 	mov	r7,(_TIM2_TimeBaseInit_PARM_2 + 1)
      0000D5 90 53 0F         [24]  355 	mov	dptr,#0x530f
      0000D8 75 F0 00         [24]  356 	mov	b,#0x00
      0000DB EF               [12]  357 	mov	a,r7
      0000DC 12r00r00         [24]  358 	lcall	__gptrput
                                    359 ;	../../src/stm8s_tim2.c:96: TIM2->ARRL = (uint8_t)(TIM2_Period);
      0000DF AF*00            [24]  360 	mov	r7,_TIM2_TimeBaseInit_PARM_2
      0000E1 90 53 10         [24]  361 	mov	dptr,#0x5310
      0000E4 75 F0 00         [24]  362 	mov	b,#0x00
      0000E7 EF               [12]  363 	mov	a,r7
      0000E8 02r00r00         [24]  364 	ljmp	__gptrput
                                    365 ;------------------------------------------------------------
                                    366 ;Allocation info for local variables in function 'TIM2_OC1Init'
                                    367 ;------------------------------------------------------------
                                    368 ;TIM2_OutputState          Allocated with name '_TIM2_OC1Init_PARM_2'
                                    369 ;TIM2_Pulse                Allocated with name '_TIM2_OC1Init_PARM_3'
                                    370 ;TIM2_OCPolarity           Allocated with name '_TIM2_OC1Init_PARM_4'
                                    371 ;TIM2_OCMode               Allocated to registers r7 
                                    372 ;------------------------------------------------------------
                                    373 ;	../../src/stm8s_tim2.c:108: void TIM2_OC1Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    374 ;	-----------------------------------------
                                    375 ;	 function TIM2_OC1Init
                                    376 ;	-----------------------------------------
      0000EB                        377 _TIM2_OC1Init:
                                    378 ;	../../src/stm8s_tim2.c:114: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      0000EB E5 82            [12]  379 	mov	a,dpl
      0000ED FF               [12]  380 	mov	r7,a
      0000EE 60 30            [24]  381 	jz	00104$
      0000F0 BF 10 02         [24]  382 	cjne	r7,#0x10,00161$
      0000F3 80 2B            [24]  383 	sjmp	00104$
      0000F5                        384 00161$:
      0000F5 BF 20 02         [24]  385 	cjne	r7,#0x20,00162$
      0000F8 80 26            [24]  386 	sjmp	00104$
      0000FA                        387 00162$:
      0000FA BF 30 02         [24]  388 	cjne	r7,#0x30,00163$
      0000FD 80 21            [24]  389 	sjmp	00104$
      0000FF                        390 00163$:
      0000FF BF 60 02         [24]  391 	cjne	r7,#0x60,00164$
      000102 80 1C            [24]  392 	sjmp	00104$
      000104                        393 00164$:
      000104 BF 70 02         [24]  394 	cjne	r7,#0x70,00165$
      000107 80 17            [24]  395 	sjmp	00104$
      000109                        396 00165$:
      000109 75*00 72         [24]  397 	mov	_assert_failed_PARM_2,#0x72
      00010C E4               [12]  398 	clr	a
      00010D F5*01            [12]  399 	mov	(_assert_failed_PARM_2 + 1),a
      00010F F5*02            [12]  400 	mov	(_assert_failed_PARM_2 + 2),a
      000111 F5*03            [12]  401 	mov	(_assert_failed_PARM_2 + 3),a
      000113 90r00r00         [24]  402 	mov	dptr,#___str_0
      000116 75 F0 80         [24]  403 	mov	b,#0x80
      000119 C0 07            [24]  404 	push	ar7
      00011B 12r00r00         [24]  405 	lcall	_assert_failed
      00011E D0 07            [24]  406 	pop	ar7
      000120                        407 00104$:
                                    408 ;	../../src/stm8s_tim2.c:115: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      000120 E5*00            [12]  409 	mov	a,_TIM2_OC1Init_PARM_2
      000122 60 1E            [24]  410 	jz	00121$
      000124 74 11            [12]  411 	mov	a,#0x11
      000126 B5*00 02         [24]  412 	cjne	a,_TIM2_OC1Init_PARM_2,00167$
      000129 80 17            [24]  413 	sjmp	00121$
      00012B                        414 00167$:
      00012B 75*00 73         [24]  415 	mov	_assert_failed_PARM_2,#0x73
      00012E E4               [12]  416 	clr	a
      00012F F5*01            [12]  417 	mov	(_assert_failed_PARM_2 + 1),a
      000131 F5*02            [12]  418 	mov	(_assert_failed_PARM_2 + 2),a
      000133 F5*03            [12]  419 	mov	(_assert_failed_PARM_2 + 3),a
      000135 90r00r00         [24]  420 	mov	dptr,#___str_0
      000138 75 F0 80         [24]  421 	mov	b,#0x80
      00013B C0 07            [24]  422 	push	ar7
      00013D 12r00r00         [24]  423 	lcall	_assert_failed
      000140 D0 07            [24]  424 	pop	ar7
      000142                        425 00121$:
                                    426 ;	../../src/stm8s_tim2.c:116: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000142 E5*03            [12]  427 	mov	a,_TIM2_OC1Init_PARM_4
      000144 60 1E            [24]  428 	jz	00126$
      000146 74 22            [12]  429 	mov	a,#0x22
      000148 B5*03 02         [24]  430 	cjne	a,_TIM2_OC1Init_PARM_4,00169$
      00014B 80 17            [24]  431 	sjmp	00126$
      00014D                        432 00169$:
      00014D 75*00 74         [24]  433 	mov	_assert_failed_PARM_2,#0x74
      000150 E4               [12]  434 	clr	a
      000151 F5*01            [12]  435 	mov	(_assert_failed_PARM_2 + 1),a
      000153 F5*02            [12]  436 	mov	(_assert_failed_PARM_2 + 2),a
      000155 F5*03            [12]  437 	mov	(_assert_failed_PARM_2 + 3),a
      000157 90r00r00         [24]  438 	mov	dptr,#___str_0
      00015A 75 F0 80         [24]  439 	mov	b,#0x80
      00015D C0 07            [24]  440 	push	ar7
      00015F 12r00r00         [24]  441 	lcall	_assert_failed
      000162 D0 07            [24]  442 	pop	ar7
      000164                        443 00126$:
                                    444 ;	../../src/stm8s_tim2.c:119: TIM2->CCER1 &= (uint8_t)(~( TIM2_CCER1_CC1E | TIM2_CCER1_CC1P));
      000164 90 53 0A         [24]  445 	mov	dptr,#0x530a
      000167 75 F0 00         [24]  446 	mov	b,#0x00
      00016A 12r00r00         [24]  447 	lcall	__gptrget
      00016D FE               [12]  448 	mov	r6,a
      00016E 53 06 FC         [24]  449 	anl	ar6,#0xfc
      000171 90 53 0A         [24]  450 	mov	dptr,#0x530a
      000174 75 F0 00         [24]  451 	mov	b,#0x00
      000177 EE               [12]  452 	mov	a,r6
      000178 12r00r00         [24]  453 	lcall	__gptrput
                                    454 ;	../../src/stm8s_tim2.c:121: TIM2->CCER1 |= (uint8_t)((uint8_t)(TIM2_OutputState & TIM2_CCER1_CC1E ) |
      00017B 90 53 0A         [24]  455 	mov	dptr,#0x530a
      00017E 75 F0 00         [24]  456 	mov	b,#0x00
      000181 12r00r00         [24]  457 	lcall	__gptrget
      000184 FE               [12]  458 	mov	r6,a
      000185 74 01            [12]  459 	mov	a,#0x01
      000187 55*00            [12]  460 	anl	a,_TIM2_OC1Init_PARM_2
      000189 FD               [12]  461 	mov	r5,a
                                    462 ;	../../src/stm8s_tim2.c:122: (uint8_t)(TIM2_OCPolarity & TIM2_CCER1_CC1P));
      00018A 74 02            [12]  463 	mov	a,#0x02
      00018C 55*03            [12]  464 	anl	a,_TIM2_OC1Init_PARM_4
      00018E 4D               [12]  465 	orl	a,r5
      00018F 42 06            [12]  466 	orl	ar6,a
      000191 90 53 0A         [24]  467 	mov	dptr,#0x530a
      000194 75 F0 00         [24]  468 	mov	b,#0x00
      000197 EE               [12]  469 	mov	a,r6
      000198 12r00r00         [24]  470 	lcall	__gptrput
                                    471 ;	../../src/stm8s_tim2.c:125: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM)) |
      00019B 90 53 07         [24]  472 	mov	dptr,#0x5307
      00019E 75 F0 00         [24]  473 	mov	b,#0x00
      0001A1 12r00r00         [24]  474 	lcall	__gptrget
      0001A4 FE               [12]  475 	mov	r6,a
      0001A5 74 8F            [12]  476 	mov	a,#0x8f
      0001A7 5E               [12]  477 	anl	a,r6
      0001A8 42 07            [12]  478 	orl	ar7,a
      0001AA 90 53 07         [24]  479 	mov	dptr,#0x5307
      0001AD 75 F0 00         [24]  480 	mov	b,#0x00
      0001B0 EF               [12]  481 	mov	a,r7
      0001B1 12r00r00         [24]  482 	lcall	__gptrput
                                    483 ;	../../src/stm8s_tim2.c:129: TIM2->CCR1H = (uint8_t)(TIM2_Pulse >> 8);
      0001B4 AF*02            [24]  484 	mov	r7,(_TIM2_OC1Init_PARM_3 + 1)
      0001B6 90 53 11         [24]  485 	mov	dptr,#0x5311
      0001B9 75 F0 00         [24]  486 	mov	b,#0x00
      0001BC EF               [12]  487 	mov	a,r7
      0001BD 12r00r00         [24]  488 	lcall	__gptrput
                                    489 ;	../../src/stm8s_tim2.c:130: TIM2->CCR1L = (uint8_t)(TIM2_Pulse);
      0001C0 AF*01            [24]  490 	mov	r7,_TIM2_OC1Init_PARM_3
      0001C2 90 53 12         [24]  491 	mov	dptr,#0x5312
      0001C5 75 F0 00         [24]  492 	mov	b,#0x00
      0001C8 EF               [12]  493 	mov	a,r7
      0001C9 02r00r00         [24]  494 	ljmp	__gptrput
                                    495 ;------------------------------------------------------------
                                    496 ;Allocation info for local variables in function 'TIM2_OC2Init'
                                    497 ;------------------------------------------------------------
                                    498 ;TIM2_OutputState          Allocated with name '_TIM2_OC2Init_PARM_2'
                                    499 ;TIM2_Pulse                Allocated with name '_TIM2_OC2Init_PARM_3'
                                    500 ;TIM2_OCPolarity           Allocated with name '_TIM2_OC2Init_PARM_4'
                                    501 ;TIM2_OCMode               Allocated to registers r7 
                                    502 ;------------------------------------------------------------
                                    503 ;	../../src/stm8s_tim2.c:142: void TIM2_OC2Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    504 ;	-----------------------------------------
                                    505 ;	 function TIM2_OC2Init
                                    506 ;	-----------------------------------------
      0001CC                        507 _TIM2_OC2Init:
                                    508 ;	../../src/stm8s_tim2.c:148: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      0001CC E5 82            [12]  509 	mov	a,dpl
      0001CE FF               [12]  510 	mov	r7,a
      0001CF 60 30            [24]  511 	jz	00104$
      0001D1 BF 10 02         [24]  512 	cjne	r7,#0x10,00161$
      0001D4 80 2B            [24]  513 	sjmp	00104$
      0001D6                        514 00161$:
      0001D6 BF 20 02         [24]  515 	cjne	r7,#0x20,00162$
      0001D9 80 26            [24]  516 	sjmp	00104$
      0001DB                        517 00162$:
      0001DB BF 30 02         [24]  518 	cjne	r7,#0x30,00163$
      0001DE 80 21            [24]  519 	sjmp	00104$
      0001E0                        520 00163$:
      0001E0 BF 60 02         [24]  521 	cjne	r7,#0x60,00164$
      0001E3 80 1C            [24]  522 	sjmp	00104$
      0001E5                        523 00164$:
      0001E5 BF 70 02         [24]  524 	cjne	r7,#0x70,00165$
      0001E8 80 17            [24]  525 	sjmp	00104$
      0001EA                        526 00165$:
      0001EA 75*00 94         [24]  527 	mov	_assert_failed_PARM_2,#0x94
      0001ED E4               [12]  528 	clr	a
      0001EE F5*01            [12]  529 	mov	(_assert_failed_PARM_2 + 1),a
      0001F0 F5*02            [12]  530 	mov	(_assert_failed_PARM_2 + 2),a
      0001F2 F5*03            [12]  531 	mov	(_assert_failed_PARM_2 + 3),a
      0001F4 90r00r00         [24]  532 	mov	dptr,#___str_0
      0001F7 75 F0 80         [24]  533 	mov	b,#0x80
      0001FA C0 07            [24]  534 	push	ar7
      0001FC 12r00r00         [24]  535 	lcall	_assert_failed
      0001FF D0 07            [24]  536 	pop	ar7
      000201                        537 00104$:
                                    538 ;	../../src/stm8s_tim2.c:149: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      000201 E5*04            [12]  539 	mov	a,_TIM2_OC2Init_PARM_2
      000203 60 1E            [24]  540 	jz	00121$
      000205 74 11            [12]  541 	mov	a,#0x11
      000207 B5*04 02         [24]  542 	cjne	a,_TIM2_OC2Init_PARM_2,00167$
      00020A 80 17            [24]  543 	sjmp	00121$
      00020C                        544 00167$:
      00020C 75*00 95         [24]  545 	mov	_assert_failed_PARM_2,#0x95
      00020F E4               [12]  546 	clr	a
      000210 F5*01            [12]  547 	mov	(_assert_failed_PARM_2 + 1),a
      000212 F5*02            [12]  548 	mov	(_assert_failed_PARM_2 + 2),a
      000214 F5*03            [12]  549 	mov	(_assert_failed_PARM_2 + 3),a
      000216 90r00r00         [24]  550 	mov	dptr,#___str_0
      000219 75 F0 80         [24]  551 	mov	b,#0x80
      00021C C0 07            [24]  552 	push	ar7
      00021E 12r00r00         [24]  553 	lcall	_assert_failed
      000221 D0 07            [24]  554 	pop	ar7
      000223                        555 00121$:
                                    556 ;	../../src/stm8s_tim2.c:150: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000223 E5*07            [12]  557 	mov	a,_TIM2_OC2Init_PARM_4
      000225 60 1E            [24]  558 	jz	00126$
      000227 74 22            [12]  559 	mov	a,#0x22
      000229 B5*07 02         [24]  560 	cjne	a,_TIM2_OC2Init_PARM_4,00169$
      00022C 80 17            [24]  561 	sjmp	00126$
      00022E                        562 00169$:
      00022E 75*00 96         [24]  563 	mov	_assert_failed_PARM_2,#0x96
      000231 E4               [12]  564 	clr	a
      000232 F5*01            [12]  565 	mov	(_assert_failed_PARM_2 + 1),a
      000234 F5*02            [12]  566 	mov	(_assert_failed_PARM_2 + 2),a
      000236 F5*03            [12]  567 	mov	(_assert_failed_PARM_2 + 3),a
      000238 90r00r00         [24]  568 	mov	dptr,#___str_0
      00023B 75 F0 80         [24]  569 	mov	b,#0x80
      00023E C0 07            [24]  570 	push	ar7
      000240 12r00r00         [24]  571 	lcall	_assert_failed
      000243 D0 07            [24]  572 	pop	ar7
      000245                        573 00126$:
                                    574 ;	../../src/stm8s_tim2.c:154: TIM2->CCER1 &= (uint8_t)(~( TIM2_CCER1_CC2E |  TIM2_CCER1_CC2P ));
      000245 90 53 0A         [24]  575 	mov	dptr,#0x530a
      000248 75 F0 00         [24]  576 	mov	b,#0x00
      00024B 12r00r00         [24]  577 	lcall	__gptrget
      00024E FE               [12]  578 	mov	r6,a
      00024F 53 06 CF         [24]  579 	anl	ar6,#0xcf
      000252 90 53 0A         [24]  580 	mov	dptr,#0x530a
      000255 75 F0 00         [24]  581 	mov	b,#0x00
      000258 EE               [12]  582 	mov	a,r6
      000259 12r00r00         [24]  583 	lcall	__gptrput
                                    584 ;	../../src/stm8s_tim2.c:156: TIM2->CCER1 |= (uint8_t)((uint8_t)(TIM2_OutputState  & TIM2_CCER1_CC2E ) |
      00025C 90 53 0A         [24]  585 	mov	dptr,#0x530a
      00025F 75 F0 00         [24]  586 	mov	b,#0x00
      000262 12r00r00         [24]  587 	lcall	__gptrget
      000265 FE               [12]  588 	mov	r6,a
      000266 74 10            [12]  589 	mov	a,#0x10
      000268 55*04            [12]  590 	anl	a,_TIM2_OC2Init_PARM_2
      00026A FD               [12]  591 	mov	r5,a
                                    592 ;	../../src/stm8s_tim2.c:157: (uint8_t)(TIM2_OCPolarity & TIM2_CCER1_CC2P));
      00026B 74 20            [12]  593 	mov	a,#0x20
      00026D 55*07            [12]  594 	anl	a,_TIM2_OC2Init_PARM_4
      00026F 4D               [12]  595 	orl	a,r5
      000270 42 06            [12]  596 	orl	ar6,a
      000272 90 53 0A         [24]  597 	mov	dptr,#0x530a
      000275 75 F0 00         [24]  598 	mov	b,#0x00
      000278 EE               [12]  599 	mov	a,r6
      000279 12r00r00         [24]  600 	lcall	__gptrput
                                    601 ;	../../src/stm8s_tim2.c:161: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM)) |
      00027C 90 53 08         [24]  602 	mov	dptr,#0x5308
      00027F 75 F0 00         [24]  603 	mov	b,#0x00
      000282 12r00r00         [24]  604 	lcall	__gptrget
      000285 FE               [12]  605 	mov	r6,a
      000286 74 8F            [12]  606 	mov	a,#0x8f
      000288 5E               [12]  607 	anl	a,r6
      000289 42 07            [12]  608 	orl	ar7,a
      00028B 90 53 08         [24]  609 	mov	dptr,#0x5308
      00028E 75 F0 00         [24]  610 	mov	b,#0x00
      000291 EF               [12]  611 	mov	a,r7
      000292 12r00r00         [24]  612 	lcall	__gptrput
                                    613 ;	../../src/stm8s_tim2.c:166: TIM2->CCR2H = (uint8_t)(TIM2_Pulse >> 8);
      000295 AF*06            [24]  614 	mov	r7,(_TIM2_OC2Init_PARM_3 + 1)
      000297 90 53 13         [24]  615 	mov	dptr,#0x5313
      00029A 75 F0 00         [24]  616 	mov	b,#0x00
      00029D EF               [12]  617 	mov	a,r7
      00029E 12r00r00         [24]  618 	lcall	__gptrput
                                    619 ;	../../src/stm8s_tim2.c:167: TIM2->CCR2L = (uint8_t)(TIM2_Pulse);
      0002A1 AF*05            [24]  620 	mov	r7,_TIM2_OC2Init_PARM_3
      0002A3 90 53 14         [24]  621 	mov	dptr,#0x5314
      0002A6 75 F0 00         [24]  622 	mov	b,#0x00
      0002A9 EF               [12]  623 	mov	a,r7
      0002AA 02r00r00         [24]  624 	ljmp	__gptrput
                                    625 ;------------------------------------------------------------
                                    626 ;Allocation info for local variables in function 'TIM2_OC3Init'
                                    627 ;------------------------------------------------------------
                                    628 ;TIM2_OutputState          Allocated with name '_TIM2_OC3Init_PARM_2'
                                    629 ;TIM2_Pulse                Allocated with name '_TIM2_OC3Init_PARM_3'
                                    630 ;TIM2_OCPolarity           Allocated with name '_TIM2_OC3Init_PARM_4'
                                    631 ;TIM2_OCMode               Allocated to registers r7 
                                    632 ;------------------------------------------------------------
                                    633 ;	../../src/stm8s_tim2.c:179: void TIM2_OC3Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    634 ;	-----------------------------------------
                                    635 ;	 function TIM2_OC3Init
                                    636 ;	-----------------------------------------
      0002AD                        637 _TIM2_OC3Init:
                                    638 ;	../../src/stm8s_tim2.c:185: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      0002AD E5 82            [12]  639 	mov	a,dpl
      0002AF FF               [12]  640 	mov	r7,a
      0002B0 60 30            [24]  641 	jz	00104$
      0002B2 BF 10 02         [24]  642 	cjne	r7,#0x10,00161$
      0002B5 80 2B            [24]  643 	sjmp	00104$
      0002B7                        644 00161$:
      0002B7 BF 20 02         [24]  645 	cjne	r7,#0x20,00162$
      0002BA 80 26            [24]  646 	sjmp	00104$
      0002BC                        647 00162$:
      0002BC BF 30 02         [24]  648 	cjne	r7,#0x30,00163$
      0002BF 80 21            [24]  649 	sjmp	00104$
      0002C1                        650 00163$:
      0002C1 BF 60 02         [24]  651 	cjne	r7,#0x60,00164$
      0002C4 80 1C            [24]  652 	sjmp	00104$
      0002C6                        653 00164$:
      0002C6 BF 70 02         [24]  654 	cjne	r7,#0x70,00165$
      0002C9 80 17            [24]  655 	sjmp	00104$
      0002CB                        656 00165$:
      0002CB 75*00 B9         [24]  657 	mov	_assert_failed_PARM_2,#0xb9
      0002CE E4               [12]  658 	clr	a
      0002CF F5*01            [12]  659 	mov	(_assert_failed_PARM_2 + 1),a
      0002D1 F5*02            [12]  660 	mov	(_assert_failed_PARM_2 + 2),a
      0002D3 F5*03            [12]  661 	mov	(_assert_failed_PARM_2 + 3),a
      0002D5 90r00r00         [24]  662 	mov	dptr,#___str_0
      0002D8 75 F0 80         [24]  663 	mov	b,#0x80
      0002DB C0 07            [24]  664 	push	ar7
      0002DD 12r00r00         [24]  665 	lcall	_assert_failed
      0002E0 D0 07            [24]  666 	pop	ar7
      0002E2                        667 00104$:
                                    668 ;	../../src/stm8s_tim2.c:186: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      0002E2 E5*08            [12]  669 	mov	a,_TIM2_OC3Init_PARM_2
      0002E4 60 1E            [24]  670 	jz	00121$
      0002E6 74 11            [12]  671 	mov	a,#0x11
      0002E8 B5*08 02         [24]  672 	cjne	a,_TIM2_OC3Init_PARM_2,00167$
      0002EB 80 17            [24]  673 	sjmp	00121$
      0002ED                        674 00167$:
      0002ED 75*00 BA         [24]  675 	mov	_assert_failed_PARM_2,#0xba
      0002F0 E4               [12]  676 	clr	a
      0002F1 F5*01            [12]  677 	mov	(_assert_failed_PARM_2 + 1),a
      0002F3 F5*02            [12]  678 	mov	(_assert_failed_PARM_2 + 2),a
      0002F5 F5*03            [12]  679 	mov	(_assert_failed_PARM_2 + 3),a
      0002F7 90r00r00         [24]  680 	mov	dptr,#___str_0
      0002FA 75 F0 80         [24]  681 	mov	b,#0x80
      0002FD C0 07            [24]  682 	push	ar7
      0002FF 12r00r00         [24]  683 	lcall	_assert_failed
      000302 D0 07            [24]  684 	pop	ar7
      000304                        685 00121$:
                                    686 ;	../../src/stm8s_tim2.c:187: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000304 E5*0B            [12]  687 	mov	a,_TIM2_OC3Init_PARM_4
      000306 60 1E            [24]  688 	jz	00126$
      000308 74 22            [12]  689 	mov	a,#0x22
      00030A B5*0B 02         [24]  690 	cjne	a,_TIM2_OC3Init_PARM_4,00169$
      00030D 80 17            [24]  691 	sjmp	00126$
      00030F                        692 00169$:
      00030F 75*00 BB         [24]  693 	mov	_assert_failed_PARM_2,#0xbb
      000312 E4               [12]  694 	clr	a
      000313 F5*01            [12]  695 	mov	(_assert_failed_PARM_2 + 1),a
      000315 F5*02            [12]  696 	mov	(_assert_failed_PARM_2 + 2),a
      000317 F5*03            [12]  697 	mov	(_assert_failed_PARM_2 + 3),a
      000319 90r00r00         [24]  698 	mov	dptr,#___str_0
      00031C 75 F0 80         [24]  699 	mov	b,#0x80
      00031F C0 07            [24]  700 	push	ar7
      000321 12r00r00         [24]  701 	lcall	_assert_failed
      000324 D0 07            [24]  702 	pop	ar7
      000326                        703 00126$:
                                    704 ;	../../src/stm8s_tim2.c:189: TIM2->CCER2 &= (uint8_t)(~( TIM2_CCER2_CC3E  | TIM2_CCER2_CC3P));
      000326 90 53 0B         [24]  705 	mov	dptr,#0x530b
      000329 75 F0 00         [24]  706 	mov	b,#0x00
      00032C 12r00r00         [24]  707 	lcall	__gptrget
      00032F FE               [12]  708 	mov	r6,a
      000330 53 06 FC         [24]  709 	anl	ar6,#0xfc
      000333 90 53 0B         [24]  710 	mov	dptr,#0x530b
      000336 75 F0 00         [24]  711 	mov	b,#0x00
      000339 EE               [12]  712 	mov	a,r6
      00033A 12r00r00         [24]  713 	lcall	__gptrput
                                    714 ;	../../src/stm8s_tim2.c:191: TIM2->CCER2 |= (uint8_t)((uint8_t)(TIM2_OutputState & TIM2_CCER2_CC3E) |
      00033D 90 53 0B         [24]  715 	mov	dptr,#0x530b
      000340 75 F0 00         [24]  716 	mov	b,#0x00
      000343 12r00r00         [24]  717 	lcall	__gptrget
      000346 FE               [12]  718 	mov	r6,a
      000347 74 01            [12]  719 	mov	a,#0x01
      000349 55*08            [12]  720 	anl	a,_TIM2_OC3Init_PARM_2
      00034B FD               [12]  721 	mov	r5,a
                                    722 ;	../../src/stm8s_tim2.c:192: (uint8_t)(TIM2_OCPolarity & TIM2_CCER2_CC3P));
      00034C 74 02            [12]  723 	mov	a,#0x02
      00034E 55*0B            [12]  724 	anl	a,_TIM2_OC3Init_PARM_4
      000350 4D               [12]  725 	orl	a,r5
      000351 42 06            [12]  726 	orl	ar6,a
      000353 90 53 0B         [24]  727 	mov	dptr,#0x530b
      000356 75 F0 00         [24]  728 	mov	b,#0x00
      000359 EE               [12]  729 	mov	a,r6
      00035A 12r00r00         [24]  730 	lcall	__gptrput
                                    731 ;	../../src/stm8s_tim2.c:195: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM)) |
      00035D 90 53 09         [24]  732 	mov	dptr,#0x5309
      000360 75 F0 00         [24]  733 	mov	b,#0x00
      000363 12r00r00         [24]  734 	lcall	__gptrget
      000366 FE               [12]  735 	mov	r6,a
      000367 74 8F            [12]  736 	mov	a,#0x8f
      000369 5E               [12]  737 	anl	a,r6
      00036A 42 07            [12]  738 	orl	ar7,a
      00036C 90 53 09         [24]  739 	mov	dptr,#0x5309
      00036F 75 F0 00         [24]  740 	mov	b,#0x00
      000372 EF               [12]  741 	mov	a,r7
      000373 12r00r00         [24]  742 	lcall	__gptrput
                                    743 ;	../../src/stm8s_tim2.c:199: TIM2->CCR3H = (uint8_t)(TIM2_Pulse >> 8);
      000376 AF*0A            [24]  744 	mov	r7,(_TIM2_OC3Init_PARM_3 + 1)
      000378 90 53 15         [24]  745 	mov	dptr,#0x5315
      00037B 75 F0 00         [24]  746 	mov	b,#0x00
      00037E EF               [12]  747 	mov	a,r7
      00037F 12r00r00         [24]  748 	lcall	__gptrput
                                    749 ;	../../src/stm8s_tim2.c:200: TIM2->CCR3L = (uint8_t)(TIM2_Pulse);
      000382 AF*09            [24]  750 	mov	r7,_TIM2_OC3Init_PARM_3
      000384 90 53 16         [24]  751 	mov	dptr,#0x5316
      000387 75 F0 00         [24]  752 	mov	b,#0x00
      00038A EF               [12]  753 	mov	a,r7
      00038B 02r00r00         [24]  754 	ljmp	__gptrput
                                    755 ;------------------------------------------------------------
                                    756 ;Allocation info for local variables in function 'TIM2_ICInit'
                                    757 ;------------------------------------------------------------
                                    758 ;TIM2_ICPolarity           Allocated with name '_TIM2_ICInit_PARM_2'
                                    759 ;TIM2_ICSelection          Allocated with name '_TIM2_ICInit_PARM_3'
                                    760 ;TIM2_ICPrescaler          Allocated with name '_TIM2_ICInit_PARM_4'
                                    761 ;TIM2_ICFilter             Allocated with name '_TIM2_ICInit_PARM_5'
                                    762 ;TIM2_Channel              Allocated to registers r7 
                                    763 ;------------------------------------------------------------
                                    764 ;	../../src/stm8s_tim2.c:212: void TIM2_ICInit(TIM2_Channel_TypeDef TIM2_Channel,
                                    765 ;	-----------------------------------------
                                    766 ;	 function TIM2_ICInit
                                    767 ;	-----------------------------------------
      00038E                        768 _TIM2_ICInit:
                                    769 ;	../../src/stm8s_tim2.c:219: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      00038E E5 82            [12]  770 	mov	a,dpl
      000390 FF               [12]  771 	mov	r7,a
      000391 60 21            [24]  772 	jz	00110$
      000393 BF 01 02         [24]  773 	cjne	r7,#0x01,00189$
      000396 80 1C            [24]  774 	sjmp	00110$
      000398                        775 00189$:
      000398 BF 02 02         [24]  776 	cjne	r7,#0x02,00190$
      00039B 80 17            [24]  777 	sjmp	00110$
      00039D                        778 00190$:
      00039D 75*00 DB         [24]  779 	mov	_assert_failed_PARM_2,#0xdb
      0003A0 E4               [12]  780 	clr	a
      0003A1 F5*01            [12]  781 	mov	(_assert_failed_PARM_2 + 1),a
      0003A3 F5*02            [12]  782 	mov	(_assert_failed_PARM_2 + 2),a
      0003A5 F5*03            [12]  783 	mov	(_assert_failed_PARM_2 + 3),a
      0003A7 90r00r00         [24]  784 	mov	dptr,#___str_0
      0003AA 75 F0 80         [24]  785 	mov	b,#0x80
      0003AD C0 07            [24]  786 	push	ar7
      0003AF 12r00r00         [24]  787 	lcall	_assert_failed
      0003B2 D0 07            [24]  788 	pop	ar7
      0003B4                        789 00110$:
                                    790 ;	../../src/stm8s_tim2.c:220: assert_param(IS_TIM2_IC_POLARITY_OK(TIM2_ICPolarity));
      0003B4 E5*0C            [12]  791 	mov	a,_TIM2_ICInit_PARM_2
      0003B6 60 1E            [24]  792 	jz	00118$
      0003B8 74 44            [12]  793 	mov	a,#0x44
      0003BA B5*0C 02         [24]  794 	cjne	a,_TIM2_ICInit_PARM_2,00192$
      0003BD 80 17            [24]  795 	sjmp	00118$
      0003BF                        796 00192$:
      0003BF 75*00 DC         [24]  797 	mov	_assert_failed_PARM_2,#0xdc
      0003C2 E4               [12]  798 	clr	a
      0003C3 F5*01            [12]  799 	mov	(_assert_failed_PARM_2 + 1),a
      0003C5 F5*02            [12]  800 	mov	(_assert_failed_PARM_2 + 2),a
      0003C7 F5*03            [12]  801 	mov	(_assert_failed_PARM_2 + 3),a
      0003C9 90r00r00         [24]  802 	mov	dptr,#___str_0
      0003CC 75 F0 80         [24]  803 	mov	b,#0x80
      0003CF C0 07            [24]  804 	push	ar7
      0003D1 12r00r00         [24]  805 	lcall	_assert_failed
      0003D4 D0 07            [24]  806 	pop	ar7
      0003D6                        807 00118$:
                                    808 ;	../../src/stm8s_tim2.c:221: assert_param(IS_TIM2_IC_SELECTION_OK(TIM2_ICSelection));
      0003D6 74 01            [12]  809 	mov	a,#0x01
      0003D8 B5*0D 02         [24]  810 	cjne	a,_TIM2_ICInit_PARM_3,00193$
      0003DB 80 25            [24]  811 	sjmp	00123$
      0003DD                        812 00193$:
      0003DD 74 02            [12]  813 	mov	a,#0x02
      0003DF B5*0D 02         [24]  814 	cjne	a,_TIM2_ICInit_PARM_3,00194$
      0003E2 80 1E            [24]  815 	sjmp	00123$
      0003E4                        816 00194$:
      0003E4 74 03            [12]  817 	mov	a,#0x03
      0003E6 B5*0D 02         [24]  818 	cjne	a,_TIM2_ICInit_PARM_3,00195$
      0003E9 80 17            [24]  819 	sjmp	00123$
      0003EB                        820 00195$:
      0003EB 75*00 DD         [24]  821 	mov	_assert_failed_PARM_2,#0xdd
      0003EE E4               [12]  822 	clr	a
      0003EF F5*01            [12]  823 	mov	(_assert_failed_PARM_2 + 1),a
      0003F1 F5*02            [12]  824 	mov	(_assert_failed_PARM_2 + 2),a
      0003F3 F5*03            [12]  825 	mov	(_assert_failed_PARM_2 + 3),a
      0003F5 90r00r00         [24]  826 	mov	dptr,#___str_0
      0003F8 75 F0 80         [24]  827 	mov	b,#0x80
      0003FB C0 07            [24]  828 	push	ar7
      0003FD 12r00r00         [24]  829 	lcall	_assert_failed
      000400 D0 07            [24]  830 	pop	ar7
      000402                        831 00123$:
                                    832 ;	../../src/stm8s_tim2.c:222: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_ICPrescaler));
      000402 E5*0E            [12]  833 	mov	a,_TIM2_ICInit_PARM_4
      000404 60 2C            [24]  834 	jz	00131$
      000406 74 04            [12]  835 	mov	a,#0x04
      000408 B5*0E 02         [24]  836 	cjne	a,_TIM2_ICInit_PARM_4,00197$
      00040B 80 25            [24]  837 	sjmp	00131$
      00040D                        838 00197$:
      00040D 74 08            [12]  839 	mov	a,#0x08
      00040F B5*0E 02         [24]  840 	cjne	a,_TIM2_ICInit_PARM_4,00198$
      000412 80 1E            [24]  841 	sjmp	00131$
      000414                        842 00198$:
      000414 74 0C            [12]  843 	mov	a,#0x0c
      000416 B5*0E 02         [24]  844 	cjne	a,_TIM2_ICInit_PARM_4,00199$
      000419 80 17            [24]  845 	sjmp	00131$
      00041B                        846 00199$:
      00041B 75*00 DE         [24]  847 	mov	_assert_failed_PARM_2,#0xde
      00041E E4               [12]  848 	clr	a
      00041F F5*01            [12]  849 	mov	(_assert_failed_PARM_2 + 1),a
      000421 F5*02            [12]  850 	mov	(_assert_failed_PARM_2 + 2),a
      000423 F5*03            [12]  851 	mov	(_assert_failed_PARM_2 + 3),a
      000425 90r00r00         [24]  852 	mov	dptr,#___str_0
      000428 75 F0 80         [24]  853 	mov	b,#0x80
      00042B C0 07            [24]  854 	push	ar7
      00042D 12r00r00         [24]  855 	lcall	_assert_failed
      000430 D0 07            [24]  856 	pop	ar7
      000432                        857 00131$:
                                    858 ;	../../src/stm8s_tim2.c:223: assert_param(IS_TIM2_IC_FILTER_OK(TIM2_ICFilter));
      000432 E5*0F            [12]  859 	mov	a,_TIM2_ICInit_PARM_5
      000434 24 F0            [12]  860 	add	a,#0xff - 0x0f
      000436 92*00            [24]  861 	mov	_TIM2_ICInit_sloc0_1_0,c
      000438 50 17            [24]  862 	jnc	00142$
      00043A 75*00 DF         [24]  863 	mov	_assert_failed_PARM_2,#0xdf
      00043D E4               [12]  864 	clr	a
      00043E F5*01            [12]  865 	mov	(_assert_failed_PARM_2 + 1),a
      000440 F5*02            [12]  866 	mov	(_assert_failed_PARM_2 + 2),a
      000442 F5*03            [12]  867 	mov	(_assert_failed_PARM_2 + 3),a
      000444 90r00r00         [24]  868 	mov	dptr,#___str_0
      000447 75 F0 80         [24]  869 	mov	b,#0x80
      00044A C0 07            [24]  870 	push	ar7
      00044C 12r00r00         [24]  871 	lcall	_assert_failed
      00044F D0 07            [24]  872 	pop	ar7
      000451                        873 00142$:
                                    874 ;	../../src/stm8s_tim2.c:225: if (TIM2_Channel == TIM2_CHANNEL_1)
      000451 EF               [12]  875 	mov	a,r7
      000452 70 12            [24]  876 	jnz	00105$
                                    877 ;	../../src/stm8s_tim2.c:230: (uint8_t)TIM2_ICFilter);
      000454 85*0D*00         [24]  878 	mov	_TI1_Config_PARM_2,_TIM2_ICInit_PARM_3
      000457 85*0F*01         [24]  879 	mov	_TI1_Config_PARM_3,_TIM2_ICInit_PARM_5
      00045A 85*0C 82         [24]  880 	mov	dpl,_TIM2_ICInit_PARM_2
      00045D 12r10r54         [24]  881 	lcall	_TI1_Config
                                    882 ;	../../src/stm8s_tim2.c:233: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      000460 85*0E 82         [24]  883 	mov	dpl,_TIM2_ICInit_PARM_4
      000463 02r0Dr9C         [24]  884 	ljmp	_TIM2_SetIC1Prescaler
      000466                        885 00105$:
                                    886 ;	../../src/stm8s_tim2.c:235: else if (TIM2_Channel == TIM2_CHANNEL_2)
      000466 BF 01 12         [24]  887 	cjne	r7,#0x01,00102$
                                    888 ;	../../src/stm8s_tim2.c:240: (uint8_t)TIM2_ICFilter);
      000469 85*0D*00         [24]  889 	mov	_TI2_Config_PARM_2,_TIM2_ICInit_PARM_3
      00046C 85*0F*01         [24]  890 	mov	_TI2_Config_PARM_3,_TIM2_ICInit_PARM_5
      00046F 85*0C 82         [24]  891 	mov	dpl,_TIM2_ICInit_PARM_2
      000472 12r10rD8         [24]  892 	lcall	_TI2_Config
                                    893 ;	../../src/stm8s_tim2.c:243: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      000475 85*0E 82         [24]  894 	mov	dpl,_TIM2_ICInit_PARM_4
      000478 02r0DrE1         [24]  895 	ljmp	_TIM2_SetIC2Prescaler
      00047B                        896 00102$:
                                    897 ;	../../src/stm8s_tim2.c:250: (uint8_t)TIM2_ICFilter);
      00047B 85*0D*00         [24]  898 	mov	_TI3_Config_PARM_2,_TIM2_ICInit_PARM_3
      00047E 85*0F*01         [24]  899 	mov	_TI3_Config_PARM_3,_TIM2_ICInit_PARM_5
      000481 85*0C 82         [24]  900 	mov	dpl,_TIM2_ICInit_PARM_2
      000484 12r11r5C         [24]  901 	lcall	_TI3_Config
                                    902 ;	../../src/stm8s_tim2.c:253: TIM2_SetIC3Prescaler(TIM2_ICPrescaler);
      000487 85*0E 82         [24]  903 	mov	dpl,_TIM2_ICInit_PARM_4
      00048A 02r0Er26         [24]  904 	ljmp	_TIM2_SetIC3Prescaler
                                    905 ;------------------------------------------------------------
                                    906 ;Allocation info for local variables in function 'TIM2_PWMIConfig'
                                    907 ;------------------------------------------------------------
                                    908 ;TIM2_ICPolarity           Allocated with name '_TIM2_PWMIConfig_PARM_2'
                                    909 ;TIM2_ICSelection          Allocated with name '_TIM2_PWMIConfig_PARM_3'
                                    910 ;TIM2_ICPrescaler          Allocated with name '_TIM2_PWMIConfig_PARM_4'
                                    911 ;TIM2_ICFilter             Allocated with name '_TIM2_PWMIConfig_PARM_5'
                                    912 ;TIM2_Channel              Allocated to registers r7 
                                    913 ;icpolarity                Allocated to registers r6 
                                    914 ;icselection               Allocated to registers r5 
                                    915 ;------------------------------------------------------------
                                    916 ;	../../src/stm8s_tim2.c:266: void TIM2_PWMIConfig(TIM2_Channel_TypeDef TIM2_Channel,
                                    917 ;	-----------------------------------------
                                    918 ;	 function TIM2_PWMIConfig
                                    919 ;	-----------------------------------------
      00048D                        920 _TIM2_PWMIConfig:
                                    921 ;	../../src/stm8s_tim2.c:276: assert_param(IS_TIM2_PWMI_CHANNEL_OK(TIM2_Channel));
      00048D E5 82            [12]  922 	mov	a,dpl
      00048F FF               [12]  923 	mov	r7,a
      000490 60 1D            [24]  924 	jz	00113$
      000492 BF 01 02         [24]  925 	cjne	r7,#0x01,00184$
      000495 80 18            [24]  926 	sjmp	00113$
      000497                        927 00184$:
      000497 75*00 14         [24]  928 	mov	_assert_failed_PARM_2,#0x14
      00049A 75*01 01         [24]  929 	mov	(_assert_failed_PARM_2 + 1),#0x01
      00049D E4               [12]  930 	clr	a
      00049E F5*02            [12]  931 	mov	(_assert_failed_PARM_2 + 2),a
      0004A0 F5*03            [12]  932 	mov	(_assert_failed_PARM_2 + 3),a
      0004A2 90r00r00         [24]  933 	mov	dptr,#___str_0
      0004A5 75 F0 80         [24]  934 	mov	b,#0x80
      0004A8 C0 07            [24]  935 	push	ar7
      0004AA 12r00r00         [24]  936 	lcall	_assert_failed
      0004AD D0 07            [24]  937 	pop	ar7
      0004AF                        938 00113$:
                                    939 ;	../../src/stm8s_tim2.c:277: assert_param(IS_TIM2_IC_POLARITY_OK(TIM2_ICPolarity));
      0004AF E5*10            [12]  940 	mov	a,_TIM2_PWMIConfig_PARM_2
      0004B1 60 1F            [24]  941 	jz	00118$
      0004B3 74 44            [12]  942 	mov	a,#0x44
      0004B5 B5*10 02         [24]  943 	cjne	a,_TIM2_PWMIConfig_PARM_2,00186$
      0004B8 80 18            [24]  944 	sjmp	00118$
      0004BA                        945 00186$:
      0004BA 75*00 15         [24]  946 	mov	_assert_failed_PARM_2,#0x15
      0004BD 75*01 01         [24]  947 	mov	(_assert_failed_PARM_2 + 1),#0x01
      0004C0 E4               [12]  948 	clr	a
      0004C1 F5*02            [12]  949 	mov	(_assert_failed_PARM_2 + 2),a
      0004C3 F5*03            [12]  950 	mov	(_assert_failed_PARM_2 + 3),a
      0004C5 90r00r00         [24]  951 	mov	dptr,#___str_0
      0004C8 75 F0 80         [24]  952 	mov	b,#0x80
      0004CB C0 07            [24]  953 	push	ar7
      0004CD 12r00r00         [24]  954 	lcall	_assert_failed
      0004D0 D0 07            [24]  955 	pop	ar7
      0004D2                        956 00118$:
                                    957 ;	../../src/stm8s_tim2.c:278: assert_param(IS_TIM2_IC_SELECTION_OK(TIM2_ICSelection));
      0004D2 74 01            [12]  958 	mov	a,#0x01
      0004D4 B5*11 02         [24]  959 	cjne	a,_TIM2_PWMIConfig_PARM_3,00187$
      0004D7 80 26            [24]  960 	sjmp	00123$
      0004D9                        961 00187$:
      0004D9 74 02            [12]  962 	mov	a,#0x02
      0004DB B5*11 02         [24]  963 	cjne	a,_TIM2_PWMIConfig_PARM_3,00188$
      0004DE 80 1F            [24]  964 	sjmp	00123$
      0004E0                        965 00188$:
      0004E0 74 03            [12]  966 	mov	a,#0x03
      0004E2 B5*11 02         [24]  967 	cjne	a,_TIM2_PWMIConfig_PARM_3,00189$
      0004E5 80 18            [24]  968 	sjmp	00123$
      0004E7                        969 00189$:
      0004E7 75*00 16         [24]  970 	mov	_assert_failed_PARM_2,#0x16
      0004EA 75*01 01         [24]  971 	mov	(_assert_failed_PARM_2 + 1),#0x01
      0004ED E4               [12]  972 	clr	a
      0004EE F5*02            [12]  973 	mov	(_assert_failed_PARM_2 + 2),a
      0004F0 F5*03            [12]  974 	mov	(_assert_failed_PARM_2 + 3),a
      0004F2 90r00r00         [24]  975 	mov	dptr,#___str_0
      0004F5 75 F0 80         [24]  976 	mov	b,#0x80
      0004F8 C0 07            [24]  977 	push	ar7
      0004FA 12r00r00         [24]  978 	lcall	_assert_failed
      0004FD D0 07            [24]  979 	pop	ar7
      0004FF                        980 00123$:
                                    981 ;	../../src/stm8s_tim2.c:279: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_ICPrescaler));
      0004FF E5*12            [12]  982 	mov	a,_TIM2_PWMIConfig_PARM_4
      000501 60 2D            [24]  983 	jz	00131$
      000503 74 04            [12]  984 	mov	a,#0x04
      000505 B5*12 02         [24]  985 	cjne	a,_TIM2_PWMIConfig_PARM_4,00191$
      000508 80 26            [24]  986 	sjmp	00131$
      00050A                        987 00191$:
      00050A 74 08            [12]  988 	mov	a,#0x08
      00050C B5*12 02         [24]  989 	cjne	a,_TIM2_PWMIConfig_PARM_4,00192$
      00050F 80 1F            [24]  990 	sjmp	00131$
      000511                        991 00192$:
      000511 74 0C            [12]  992 	mov	a,#0x0c
      000513 B5*12 02         [24]  993 	cjne	a,_TIM2_PWMIConfig_PARM_4,00193$
      000516 80 18            [24]  994 	sjmp	00131$
      000518                        995 00193$:
      000518 75*00 17         [24]  996 	mov	_assert_failed_PARM_2,#0x17
      00051B 75*01 01         [24]  997 	mov	(_assert_failed_PARM_2 + 1),#0x01
      00051E E4               [12]  998 	clr	a
      00051F F5*02            [12]  999 	mov	(_assert_failed_PARM_2 + 2),a
      000521 F5*03            [12] 1000 	mov	(_assert_failed_PARM_2 + 3),a
      000523 90r00r00         [24] 1001 	mov	dptr,#___str_0
      000526 75 F0 80         [24] 1002 	mov	b,#0x80
      000529 C0 07            [24] 1003 	push	ar7
      00052B 12r00r00         [24] 1004 	lcall	_assert_failed
      00052E D0 07            [24] 1005 	pop	ar7
      000530                       1006 00131$:
                                   1007 ;	../../src/stm8s_tim2.c:282: if (TIM2_ICPolarity != TIM2_ICPOLARITY_FALLING)
      000530 74 44            [12] 1008 	mov	a,#0x44
      000532 B5*10 02         [24] 1009 	cjne	a,_TIM2_PWMIConfig_PARM_2,00194$
      000535 80 04            [24] 1010 	sjmp	00102$
      000537                       1011 00194$:
                                   1012 ;	../../src/stm8s_tim2.c:284: icpolarity = (uint8_t)TIM2_ICPOLARITY_FALLING;
      000537 7E 44            [12] 1013 	mov	r6,#0x44
      000539 80 02            [24] 1014 	sjmp	00103$
      00053B                       1015 00102$:
                                   1016 ;	../../src/stm8s_tim2.c:288: icpolarity = (uint8_t)TIM2_ICPOLARITY_RISING;
      00053B 7E 00            [12] 1017 	mov	r6,#0x00
      00053D                       1018 00103$:
                                   1019 ;	../../src/stm8s_tim2.c:292: if (TIM2_ICSelection == TIM2_ICSELECTION_DIRECTTI)
      00053D 74 01            [12] 1020 	mov	a,#0x01
      00053F B5*11 04         [24] 1021 	cjne	a,_TIM2_PWMIConfig_PARM_3,00105$
                                   1022 ;	../../src/stm8s_tim2.c:294: icselection = (uint8_t)TIM2_ICSELECTION_INDIRECTTI;
      000542 7D 02            [12] 1023 	mov	r5,#0x02
      000544 80 02            [24] 1024 	sjmp	00106$
      000546                       1025 00105$:
                                   1026 ;	../../src/stm8s_tim2.c:298: icselection = (uint8_t)TIM2_ICSELECTION_DIRECTTI;
      000546 7D 01            [12] 1027 	mov	r5,#0x01
      000548                       1028 00106$:
                                   1029 ;	../../src/stm8s_tim2.c:301: if (TIM2_Channel == TIM2_CHANNEL_1)
      000548 EF               [12] 1030 	mov	a,r7
      000549 70 2A            [24] 1031 	jnz	00108$
                                   1032 ;	../../src/stm8s_tim2.c:305: (uint8_t)TIM2_ICFilter);
      00054B 85*11*00         [24] 1033 	mov	_TI1_Config_PARM_2,_TIM2_PWMIConfig_PARM_3
      00054E 85*13*01         [24] 1034 	mov	_TI1_Config_PARM_3,_TIM2_PWMIConfig_PARM_5
      000551 85*10 82         [24] 1035 	mov	dpl,_TIM2_PWMIConfig_PARM_2
      000554 C0 06            [24] 1036 	push	ar6
      000556 C0 05            [24] 1037 	push	ar5
      000558 12r10r54         [24] 1038 	lcall	_TI1_Config
                                   1039 ;	../../src/stm8s_tim2.c:308: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      00055B 85*12 82         [24] 1040 	mov	dpl,_TIM2_PWMIConfig_PARM_4
      00055E 12r0Dr9C         [24] 1041 	lcall	_TIM2_SetIC1Prescaler
      000561 D0 05            [24] 1042 	pop	ar5
      000563 D0 06            [24] 1043 	pop	ar6
                                   1044 ;	../../src/stm8s_tim2.c:311: TI2_Config(icpolarity, icselection, TIM2_ICFilter);
      000565 8D*00            [24] 1045 	mov	_TI2_Config_PARM_2,r5
      000567 85*13*01         [24] 1046 	mov	_TI2_Config_PARM_3,_TIM2_PWMIConfig_PARM_5
      00056A 8E 82            [24] 1047 	mov	dpl,r6
      00056C 12r10rD8         [24] 1048 	lcall	_TI2_Config
                                   1049 ;	../../src/stm8s_tim2.c:314: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      00056F 85*12 82         [24] 1050 	mov	dpl,_TIM2_PWMIConfig_PARM_4
      000572 02r0DrE1         [24] 1051 	ljmp	_TIM2_SetIC2Prescaler
      000575                       1052 00108$:
                                   1053 ;	../../src/stm8s_tim2.c:320: (uint8_t)TIM2_ICFilter);
      000575 85*11*00         [24] 1054 	mov	_TI2_Config_PARM_2,_TIM2_PWMIConfig_PARM_3
      000578 85*13*01         [24] 1055 	mov	_TI2_Config_PARM_3,_TIM2_PWMIConfig_PARM_5
      00057B 85*10 82         [24] 1056 	mov	dpl,_TIM2_PWMIConfig_PARM_2
      00057E C0 06            [24] 1057 	push	ar6
      000580 C0 05            [24] 1058 	push	ar5
      000582 12r10rD8         [24] 1059 	lcall	_TI2_Config
                                   1060 ;	../../src/stm8s_tim2.c:323: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      000585 85*12 82         [24] 1061 	mov	dpl,_TIM2_PWMIConfig_PARM_4
      000588 12r0DrE1         [24] 1062 	lcall	_TIM2_SetIC2Prescaler
      00058B D0 05            [24] 1063 	pop	ar5
      00058D D0 06            [24] 1064 	pop	ar6
                                   1065 ;	../../src/stm8s_tim2.c:326: TI1_Config((uint8_t)icpolarity, icselection, (uint8_t)TIM2_ICFilter);
      00058F 8D*00            [24] 1066 	mov	_TI1_Config_PARM_2,r5
      000591 85*13*01         [24] 1067 	mov	_TI1_Config_PARM_3,_TIM2_PWMIConfig_PARM_5
      000594 8E 82            [24] 1068 	mov	dpl,r6
      000596 12r10r54         [24] 1069 	lcall	_TI1_Config
                                   1070 ;	../../src/stm8s_tim2.c:329: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      000599 85*12 82         [24] 1071 	mov	dpl,_TIM2_PWMIConfig_PARM_4
      00059C 02r0Dr9C         [24] 1072 	ljmp	_TIM2_SetIC1Prescaler
                                   1073 ;------------------------------------------------------------
                                   1074 ;Allocation info for local variables in function 'TIM2_Cmd'
                                   1075 ;------------------------------------------------------------
                                   1076 ;NewState                  Allocated to registers r7 
                                   1077 ;------------------------------------------------------------
                                   1078 ;	../../src/stm8s_tim2.c:339: void TIM2_Cmd(FunctionalState NewState)
                                   1079 ;	-----------------------------------------
                                   1080 ;	 function TIM2_Cmd
                                   1081 ;	-----------------------------------------
      00059F                       1082 _TIM2_Cmd:
                                   1083 ;	../../src/stm8s_tim2.c:342: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00059F E5 82            [12] 1084 	mov	a,dpl
      0005A1 FF               [12] 1085 	mov	r7,a
      0005A2 60 1D            [24] 1086 	jz	00107$
      0005A4 BF 01 02         [24] 1087 	cjne	r7,#0x01,00121$
      0005A7 80 18            [24] 1088 	sjmp	00107$
      0005A9                       1089 00121$:
      0005A9 75*00 56         [24] 1090 	mov	_assert_failed_PARM_2,#0x56
      0005AC 75*01 01         [24] 1091 	mov	(_assert_failed_PARM_2 + 1),#0x01
      0005AF E4               [12] 1092 	clr	a
      0005B0 F5*02            [12] 1093 	mov	(_assert_failed_PARM_2 + 2),a
      0005B2 F5*03            [12] 1094 	mov	(_assert_failed_PARM_2 + 3),a
      0005B4 90r00r00         [24] 1095 	mov	dptr,#___str_0
      0005B7 75 F0 80         [24] 1096 	mov	b,#0x80
      0005BA C0 07            [24] 1097 	push	ar7
      0005BC 12r00r00         [24] 1098 	lcall	_assert_failed
      0005BF D0 07            [24] 1099 	pop	ar7
      0005C1                       1100 00107$:
                                   1101 ;	../../src/stm8s_tim2.c:345: if (NewState != DISABLE)
      0005C1 EF               [12] 1102 	mov	a,r7
      0005C2 60 17            [24] 1103 	jz	00102$
                                   1104 ;	../../src/stm8s_tim2.c:347: TIM2->CR1 |= (uint8_t)TIM2_CR1_CEN;
      0005C4 90 53 00         [24] 1105 	mov	dptr,#0x5300
      0005C7 75 F0 00         [24] 1106 	mov	b,#0x00
      0005CA 12r00r00         [24] 1107 	lcall	__gptrget
      0005CD FF               [12] 1108 	mov	r7,a
      0005CE 43 07 01         [24] 1109 	orl	ar7,#0x01
      0005D1 90 53 00         [24] 1110 	mov	dptr,#0x5300
      0005D4 75 F0 00         [24] 1111 	mov	b,#0x00
      0005D7 EF               [12] 1112 	mov	a,r7
      0005D8 02r00r00         [24] 1113 	ljmp	__gptrput
      0005DB                       1114 00102$:
                                   1115 ;	../../src/stm8s_tim2.c:351: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_CEN);
      0005DB 90 53 00         [24] 1116 	mov	dptr,#0x5300
      0005DE 75 F0 00         [24] 1117 	mov	b,#0x00
      0005E1 12r00r00         [24] 1118 	lcall	__gptrget
      0005E4 FF               [12] 1119 	mov	r7,a
      0005E5 53 07 FE         [24] 1120 	anl	ar7,#0xfe
      0005E8 90 53 00         [24] 1121 	mov	dptr,#0x5300
      0005EB 75 F0 00         [24] 1122 	mov	b,#0x00
      0005EE EF               [12] 1123 	mov	a,r7
      0005EF 02r00r00         [24] 1124 	ljmp	__gptrput
                                   1125 ;------------------------------------------------------------
                                   1126 ;Allocation info for local variables in function 'TIM2_ITConfig'
                                   1127 ;------------------------------------------------------------
                                   1128 ;NewState                  Allocated with name '_TIM2_ITConfig_PARM_2'
                                   1129 ;TIM2_IT                   Allocated to registers r7 
                                   1130 ;------------------------------------------------------------
                                   1131 ;	../../src/stm8s_tim2.c:368: void TIM2_ITConfig(TIM2_IT_TypeDef TIM2_IT, FunctionalState NewState)
                                   1132 ;	-----------------------------------------
                                   1133 ;	 function TIM2_ITConfig
                                   1134 ;	-----------------------------------------
      0005F2                       1135 _TIM2_ITConfig:
                                   1136 ;	../../src/stm8s_tim2.c:371: assert_param(IS_TIM2_IT_OK(TIM2_IT));
      0005F2 E5 82            [12] 1137 	mov	a,dpl
      0005F4 FF               [12] 1138 	mov	r7,a
      0005F5 60 07            [24] 1139 	jz	00106$
      0005F7 EF               [12] 1140 	mov	a,r7
      0005F8 24 F0            [12] 1141 	add	a,#0xff - 0x0f
      0005FA 92*01            [24] 1142 	mov	_TIM2_ITConfig_sloc0_1_0,c
      0005FC 50 18            [24] 1143 	jnc	00107$
      0005FE                       1144 00106$:
      0005FE 75*00 73         [24] 1145 	mov	_assert_failed_PARM_2,#0x73
      000601 75*01 01         [24] 1146 	mov	(_assert_failed_PARM_2 + 1),#0x01
      000604 E4               [12] 1147 	clr	a
      000605 F5*02            [12] 1148 	mov	(_assert_failed_PARM_2 + 2),a
      000607 F5*03            [12] 1149 	mov	(_assert_failed_PARM_2 + 3),a
      000609 90r00r00         [24] 1150 	mov	dptr,#___str_0
      00060C 75 F0 80         [24] 1151 	mov	b,#0x80
      00060F C0 07            [24] 1152 	push	ar7
      000611 12r00r00         [24] 1153 	lcall	_assert_failed
      000614 D0 07            [24] 1154 	pop	ar7
      000616                       1155 00107$:
                                   1156 ;	../../src/stm8s_tim2.c:372: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000616 E5*14            [12] 1157 	mov	a,_TIM2_ITConfig_PARM_2
      000618 60 1F            [24] 1158 	jz	00112$
      00061A 74 01            [12] 1159 	mov	a,#0x01
      00061C B5*14 02         [24] 1160 	cjne	a,_TIM2_ITConfig_PARM_2,00131$
      00061F 80 18            [24] 1161 	sjmp	00112$
      000621                       1162 00131$:
      000621 75*00 74         [24] 1163 	mov	_assert_failed_PARM_2,#0x74
      000624 75*01 01         [24] 1164 	mov	(_assert_failed_PARM_2 + 1),#0x01
      000627 E4               [12] 1165 	clr	a
      000628 F5*02            [12] 1166 	mov	(_assert_failed_PARM_2 + 2),a
      00062A F5*03            [12] 1167 	mov	(_assert_failed_PARM_2 + 3),a
      00062C 90r00r00         [24] 1168 	mov	dptr,#___str_0
      00062F 75 F0 80         [24] 1169 	mov	b,#0x80
      000632 C0 07            [24] 1170 	push	ar7
      000634 12r00r00         [24] 1171 	lcall	_assert_failed
      000637 D0 07            [24] 1172 	pop	ar7
      000639                       1173 00112$:
                                   1174 ;	../../src/stm8s_tim2.c:374: if (NewState != DISABLE)
      000639 E5*14            [12] 1175 	mov	a,_TIM2_ITConfig_PARM_2
      00063B 60 17            [24] 1176 	jz	00102$
                                   1177 ;	../../src/stm8s_tim2.c:377: TIM2->IER |= (uint8_t)TIM2_IT;
      00063D 90 53 03         [24] 1178 	mov	dptr,#0x5303
      000640 75 F0 00         [24] 1179 	mov	b,#0x00
      000643 12r00r00         [24] 1180 	lcall	__gptrget
      000646 FE               [12] 1181 	mov	r6,a
      000647 EF               [12] 1182 	mov	a,r7
      000648 42 06            [12] 1183 	orl	ar6,a
      00064A 90 53 03         [24] 1184 	mov	dptr,#0x5303
      00064D 75 F0 00         [24] 1185 	mov	b,#0x00
      000650 EE               [12] 1186 	mov	a,r6
      000651 02r00r00         [24] 1187 	ljmp	__gptrput
      000654                       1188 00102$:
                                   1189 ;	../../src/stm8s_tim2.c:382: TIM2->IER &= (uint8_t)(~TIM2_IT);
      000654 90 53 03         [24] 1190 	mov	dptr,#0x5303
      000657 75 F0 00         [24] 1191 	mov	b,#0x00
      00065A 12r00r00         [24] 1192 	lcall	__gptrget
      00065D FE               [12] 1193 	mov	r6,a
      00065E EF               [12] 1194 	mov	a,r7
      00065F F4               [12] 1195 	cpl	a
      000660 52 06            [12] 1196 	anl	ar6,a
      000662 90 53 03         [24] 1197 	mov	dptr,#0x5303
      000665 75 F0 00         [24] 1198 	mov	b,#0x00
      000668 EE               [12] 1199 	mov	a,r6
      000669 02r00r00         [24] 1200 	ljmp	__gptrput
                                   1201 ;------------------------------------------------------------
                                   1202 ;Allocation info for local variables in function 'TIM2_UpdateDisableConfig'
                                   1203 ;------------------------------------------------------------
                                   1204 ;NewState                  Allocated to registers r7 
                                   1205 ;------------------------------------------------------------
                                   1206 ;	../../src/stm8s_tim2.c:392: void TIM2_UpdateDisableConfig(FunctionalState NewState)
                                   1207 ;	-----------------------------------------
                                   1208 ;	 function TIM2_UpdateDisableConfig
                                   1209 ;	-----------------------------------------
      00066C                       1210 _TIM2_UpdateDisableConfig:
                                   1211 ;	../../src/stm8s_tim2.c:395: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00066C E5 82            [12] 1212 	mov	a,dpl
      00066E FF               [12] 1213 	mov	r7,a
      00066F 60 1D            [24] 1214 	jz	00107$
      000671 BF 01 02         [24] 1215 	cjne	r7,#0x01,00121$
      000674 80 18            [24] 1216 	sjmp	00107$
      000676                       1217 00121$:
      000676 75*00 8B         [24] 1218 	mov	_assert_failed_PARM_2,#0x8b
      000679 75*01 01         [24] 1219 	mov	(_assert_failed_PARM_2 + 1),#0x01
      00067C E4               [12] 1220 	clr	a
      00067D F5*02            [12] 1221 	mov	(_assert_failed_PARM_2 + 2),a
      00067F F5*03            [12] 1222 	mov	(_assert_failed_PARM_2 + 3),a
      000681 90r00r00         [24] 1223 	mov	dptr,#___str_0
      000684 75 F0 80         [24] 1224 	mov	b,#0x80
      000687 C0 07            [24] 1225 	push	ar7
      000689 12r00r00         [24] 1226 	lcall	_assert_failed
      00068C D0 07            [24] 1227 	pop	ar7
      00068E                       1228 00107$:
                                   1229 ;	../../src/stm8s_tim2.c:398: if (NewState != DISABLE)
      00068E EF               [12] 1230 	mov	a,r7
      00068F 60 17            [24] 1231 	jz	00102$
                                   1232 ;	../../src/stm8s_tim2.c:400: TIM2->CR1 |= (uint8_t)TIM2_CR1_UDIS;
      000691 90 53 00         [24] 1233 	mov	dptr,#0x5300
      000694 75 F0 00         [24] 1234 	mov	b,#0x00
      000697 12r00r00         [24] 1235 	lcall	__gptrget
      00069A FF               [12] 1236 	mov	r7,a
      00069B 43 07 02         [24] 1237 	orl	ar7,#0x02
      00069E 90 53 00         [24] 1238 	mov	dptr,#0x5300
      0006A1 75 F0 00         [24] 1239 	mov	b,#0x00
      0006A4 EF               [12] 1240 	mov	a,r7
      0006A5 02r00r00         [24] 1241 	ljmp	__gptrput
      0006A8                       1242 00102$:
                                   1243 ;	../../src/stm8s_tim2.c:404: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_UDIS);
      0006A8 90 53 00         [24] 1244 	mov	dptr,#0x5300
      0006AB 75 F0 00         [24] 1245 	mov	b,#0x00
      0006AE 12r00r00         [24] 1246 	lcall	__gptrget
      0006B1 FF               [12] 1247 	mov	r7,a
      0006B2 53 07 FD         [24] 1248 	anl	ar7,#0xfd
      0006B5 90 53 00         [24] 1249 	mov	dptr,#0x5300
      0006B8 75 F0 00         [24] 1250 	mov	b,#0x00
      0006BB EF               [12] 1251 	mov	a,r7
      0006BC 02r00r00         [24] 1252 	ljmp	__gptrput
                                   1253 ;------------------------------------------------------------
                                   1254 ;Allocation info for local variables in function 'TIM2_UpdateRequestConfig'
                                   1255 ;------------------------------------------------------------
                                   1256 ;TIM2_UpdateSource         Allocated to registers r7 
                                   1257 ;------------------------------------------------------------
                                   1258 ;	../../src/stm8s_tim2.c:416: void TIM2_UpdateRequestConfig(TIM2_UpdateSource_TypeDef TIM2_UpdateSource)
                                   1259 ;	-----------------------------------------
                                   1260 ;	 function TIM2_UpdateRequestConfig
                                   1261 ;	-----------------------------------------
      0006BF                       1262 _TIM2_UpdateRequestConfig:
                                   1263 ;	../../src/stm8s_tim2.c:419: assert_param(IS_TIM2_UPDATE_SOURCE_OK(TIM2_UpdateSource));
      0006BF E5 82            [12] 1264 	mov	a,dpl
      0006C1 FF               [12] 1265 	mov	r7,a
      0006C2 60 1D            [24] 1266 	jz	00107$
      0006C4 BF 01 02         [24] 1267 	cjne	r7,#0x01,00121$
      0006C7 80 18            [24] 1268 	sjmp	00107$
      0006C9                       1269 00121$:
      0006C9 75*00 A3         [24] 1270 	mov	_assert_failed_PARM_2,#0xa3
      0006CC 75*01 01         [24] 1271 	mov	(_assert_failed_PARM_2 + 1),#0x01
      0006CF E4               [12] 1272 	clr	a
      0006D0 F5*02            [12] 1273 	mov	(_assert_failed_PARM_2 + 2),a
      0006D2 F5*03            [12] 1274 	mov	(_assert_failed_PARM_2 + 3),a
      0006D4 90r00r00         [24] 1275 	mov	dptr,#___str_0
      0006D7 75 F0 80         [24] 1276 	mov	b,#0x80
      0006DA C0 07            [24] 1277 	push	ar7
      0006DC 12r00r00         [24] 1278 	lcall	_assert_failed
      0006DF D0 07            [24] 1279 	pop	ar7
      0006E1                       1280 00107$:
                                   1281 ;	../../src/stm8s_tim2.c:422: if (TIM2_UpdateSource != TIM2_UPDATESOURCE_GLOBAL)
      0006E1 EF               [12] 1282 	mov	a,r7
      0006E2 60 17            [24] 1283 	jz	00102$
                                   1284 ;	../../src/stm8s_tim2.c:424: TIM2->CR1 |= (uint8_t)TIM2_CR1_URS;
      0006E4 90 53 00         [24] 1285 	mov	dptr,#0x5300
      0006E7 75 F0 00         [24] 1286 	mov	b,#0x00
      0006EA 12r00r00         [24] 1287 	lcall	__gptrget
      0006ED FF               [12] 1288 	mov	r7,a
      0006EE 43 07 04         [24] 1289 	orl	ar7,#0x04
      0006F1 90 53 00         [24] 1290 	mov	dptr,#0x5300
      0006F4 75 F0 00         [24] 1291 	mov	b,#0x00
      0006F7 EF               [12] 1292 	mov	a,r7
      0006F8 02r00r00         [24] 1293 	ljmp	__gptrput
      0006FB                       1294 00102$:
                                   1295 ;	../../src/stm8s_tim2.c:428: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_URS);
      0006FB 90 53 00         [24] 1296 	mov	dptr,#0x5300
      0006FE 75 F0 00         [24] 1297 	mov	b,#0x00
      000701 12r00r00         [24] 1298 	lcall	__gptrget
      000704 FF               [12] 1299 	mov	r7,a
      000705 53 07 FB         [24] 1300 	anl	ar7,#0xfb
      000708 90 53 00         [24] 1301 	mov	dptr,#0x5300
      00070B 75 F0 00         [24] 1302 	mov	b,#0x00
      00070E EF               [12] 1303 	mov	a,r7
      00070F 02r00r00         [24] 1304 	ljmp	__gptrput
                                   1305 ;------------------------------------------------------------
                                   1306 ;Allocation info for local variables in function 'TIM2_SelectOnePulseMode'
                                   1307 ;------------------------------------------------------------
                                   1308 ;TIM2_OPMode               Allocated to registers r7 
                                   1309 ;------------------------------------------------------------
                                   1310 ;	../../src/stm8s_tim2.c:440: void TIM2_SelectOnePulseMode(TIM2_OPMode_TypeDef TIM2_OPMode)
                                   1311 ;	-----------------------------------------
                                   1312 ;	 function TIM2_SelectOnePulseMode
                                   1313 ;	-----------------------------------------
      000712                       1314 _TIM2_SelectOnePulseMode:
      000712 AF 82            [24] 1315 	mov	r7,dpl
                                   1316 ;	../../src/stm8s_tim2.c:443: assert_param(IS_TIM2_OPM_MODE_OK(TIM2_OPMode));
      000714 BF 01 02         [24] 1317 	cjne	r7,#0x01,00120$
      000717 80 1B            [24] 1318 	sjmp	00107$
      000719                       1319 00120$:
      000719 EF               [12] 1320 	mov	a,r7
      00071A 60 18            [24] 1321 	jz	00107$
      00071C 75*00 BB         [24] 1322 	mov	_assert_failed_PARM_2,#0xbb
      00071F 75*01 01         [24] 1323 	mov	(_assert_failed_PARM_2 + 1),#0x01
      000722 E4               [12] 1324 	clr	a
      000723 F5*02            [12] 1325 	mov	(_assert_failed_PARM_2 + 2),a
      000725 F5*03            [12] 1326 	mov	(_assert_failed_PARM_2 + 3),a
      000727 90r00r00         [24] 1327 	mov	dptr,#___str_0
      00072A 75 F0 80         [24] 1328 	mov	b,#0x80
      00072D C0 07            [24] 1329 	push	ar7
      00072F 12r00r00         [24] 1330 	lcall	_assert_failed
      000732 D0 07            [24] 1331 	pop	ar7
      000734                       1332 00107$:
                                   1333 ;	../../src/stm8s_tim2.c:446: if (TIM2_OPMode != TIM2_OPMODE_REPETITIVE)
      000734 EF               [12] 1334 	mov	a,r7
      000735 60 17            [24] 1335 	jz	00102$
                                   1336 ;	../../src/stm8s_tim2.c:448: TIM2->CR1 |= (uint8_t)TIM2_CR1_OPM;
      000737 90 53 00         [24] 1337 	mov	dptr,#0x5300
      00073A 75 F0 00         [24] 1338 	mov	b,#0x00
      00073D 12r00r00         [24] 1339 	lcall	__gptrget
      000740 FF               [12] 1340 	mov	r7,a
      000741 43 07 08         [24] 1341 	orl	ar7,#0x08
      000744 90 53 00         [24] 1342 	mov	dptr,#0x5300
      000747 75 F0 00         [24] 1343 	mov	b,#0x00
      00074A EF               [12] 1344 	mov	a,r7
      00074B 02r00r00         [24] 1345 	ljmp	__gptrput
      00074E                       1346 00102$:
                                   1347 ;	../../src/stm8s_tim2.c:452: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_OPM);
      00074E 90 53 00         [24] 1348 	mov	dptr,#0x5300
      000751 75 F0 00         [24] 1349 	mov	b,#0x00
      000754 12r00r00         [24] 1350 	lcall	__gptrget
      000757 FF               [12] 1351 	mov	r7,a
      000758 53 07 F7         [24] 1352 	anl	ar7,#0xf7
      00075B 90 53 00         [24] 1353 	mov	dptr,#0x5300
      00075E 75 F0 00         [24] 1354 	mov	b,#0x00
      000761 EF               [12] 1355 	mov	a,r7
      000762 02r00r00         [24] 1356 	ljmp	__gptrput
                                   1357 ;------------------------------------------------------------
                                   1358 ;Allocation info for local variables in function 'TIM2_PrescalerConfig'
                                   1359 ;------------------------------------------------------------
                                   1360 ;TIM2_PSCReloadMode        Allocated with name '_TIM2_PrescalerConfig_PARM_2'
                                   1361 ;Prescaler                 Allocated to registers r7 
                                   1362 ;------------------------------------------------------------
                                   1363 ;	../../src/stm8s_tim2.c:484: void TIM2_PrescalerConfig(TIM2_Prescaler_TypeDef Prescaler,
                                   1364 ;	-----------------------------------------
                                   1365 ;	 function TIM2_PrescalerConfig
                                   1366 ;	-----------------------------------------
      000765                       1367 _TIM2_PrescalerConfig:
      000765 AF 82            [24] 1368 	mov	r7,dpl
                                   1369 ;	../../src/stm8s_tim2.c:488: assert_param(IS_TIM2_PRESCALER_RELOAD_OK(TIM2_PSCReloadMode));
      000767 E5*15            [12] 1370 	mov	a,_TIM2_PrescalerConfig_PARM_2
      000769 60 1F            [24] 1371 	jz	00104$
      00076B 74 01            [12] 1372 	mov	a,#0x01
      00076D B5*15 02         [24] 1373 	cjne	a,_TIM2_PrescalerConfig_PARM_2,00210$
      000770 80 18            [24] 1374 	sjmp	00104$
      000772                       1375 00210$:
      000772 75*00 E8         [24] 1376 	mov	_assert_failed_PARM_2,#0xe8
      000775 75*01 01         [24] 1377 	mov	(_assert_failed_PARM_2 + 1),#0x01
      000778 E4               [12] 1378 	clr	a
      000779 F5*02            [12] 1379 	mov	(_assert_failed_PARM_2 + 2),a
      00077B F5*03            [12] 1380 	mov	(_assert_failed_PARM_2 + 3),a
      00077D 90r00r00         [24] 1381 	mov	dptr,#___str_0
      000780 75 F0 80         [24] 1382 	mov	b,#0x80
      000783 C0 07            [24] 1383 	push	ar7
      000785 12r00r00         [24] 1384 	lcall	_assert_failed
      000788 D0 07            [24] 1385 	pop	ar7
      00078A                       1386 00104$:
                                   1387 ;	../../src/stm8s_tim2.c:489: assert_param(IS_TIM2_PRESCALER_OK(Prescaler));
      00078A EF               [12] 1388 	mov	a,r7
      00078B 60 63            [24] 1389 	jz	00109$
      00078D BF 01 02         [24] 1390 	cjne	r7,#0x01,00212$
      000790 80 5E            [24] 1391 	sjmp	00109$
      000792                       1392 00212$:
      000792 BF 02 02         [24] 1393 	cjne	r7,#0x02,00213$
      000795 80 59            [24] 1394 	sjmp	00109$
      000797                       1395 00213$:
      000797 BF 03 02         [24] 1396 	cjne	r7,#0x03,00214$
      00079A 80 54            [24] 1397 	sjmp	00109$
      00079C                       1398 00214$:
      00079C BF 04 02         [24] 1399 	cjne	r7,#0x04,00215$
      00079F 80 4F            [24] 1400 	sjmp	00109$
      0007A1                       1401 00215$:
      0007A1 BF 05 02         [24] 1402 	cjne	r7,#0x05,00216$
      0007A4 80 4A            [24] 1403 	sjmp	00109$
      0007A6                       1404 00216$:
      0007A6 BF 06 02         [24] 1405 	cjne	r7,#0x06,00217$
      0007A9 80 45            [24] 1406 	sjmp	00109$
      0007AB                       1407 00217$:
      0007AB BF 07 02         [24] 1408 	cjne	r7,#0x07,00218$
      0007AE 80 40            [24] 1409 	sjmp	00109$
      0007B0                       1410 00218$:
      0007B0 BF 08 02         [24] 1411 	cjne	r7,#0x08,00219$
      0007B3 80 3B            [24] 1412 	sjmp	00109$
      0007B5                       1413 00219$:
      0007B5 BF 09 02         [24] 1414 	cjne	r7,#0x09,00220$
      0007B8 80 36            [24] 1415 	sjmp	00109$
      0007BA                       1416 00220$:
      0007BA BF 0A 02         [24] 1417 	cjne	r7,#0x0a,00221$
      0007BD 80 31            [24] 1418 	sjmp	00109$
      0007BF                       1419 00221$:
      0007BF BF 0B 02         [24] 1420 	cjne	r7,#0x0b,00222$
      0007C2 80 2C            [24] 1421 	sjmp	00109$
      0007C4                       1422 00222$:
      0007C4 BF 0C 02         [24] 1423 	cjne	r7,#0x0c,00223$
      0007C7 80 27            [24] 1424 	sjmp	00109$
      0007C9                       1425 00223$:
      0007C9 BF 0D 02         [24] 1426 	cjne	r7,#0x0d,00224$
      0007CC 80 22            [24] 1427 	sjmp	00109$
      0007CE                       1428 00224$:
      0007CE BF 0E 02         [24] 1429 	cjne	r7,#0x0e,00225$
      0007D1 80 1D            [24] 1430 	sjmp	00109$
      0007D3                       1431 00225$:
      0007D3 BF 0F 02         [24] 1432 	cjne	r7,#0x0f,00226$
      0007D6 80 18            [24] 1433 	sjmp	00109$
      0007D8                       1434 00226$:
      0007D8 75*00 E9         [24] 1435 	mov	_assert_failed_PARM_2,#0xe9
      0007DB 75*01 01         [24] 1436 	mov	(_assert_failed_PARM_2 + 1),#0x01
      0007DE E4               [12] 1437 	clr	a
      0007DF F5*02            [12] 1438 	mov	(_assert_failed_PARM_2 + 2),a
      0007E1 F5*03            [12] 1439 	mov	(_assert_failed_PARM_2 + 3),a
      0007E3 90r00r00         [24] 1440 	mov	dptr,#___str_0
      0007E6 75 F0 80         [24] 1441 	mov	b,#0x80
      0007E9 C0 07            [24] 1442 	push	ar7
      0007EB 12r00r00         [24] 1443 	lcall	_assert_failed
      0007EE D0 07            [24] 1444 	pop	ar7
      0007F0                       1445 00109$:
                                   1446 ;	../../src/stm8s_tim2.c:492: TIM2->PSCR = (uint8_t)Prescaler;
      0007F0 90 53 0E         [24] 1447 	mov	dptr,#0x530e
      0007F3 75 F0 00         [24] 1448 	mov	b,#0x00
      0007F6 EF               [12] 1449 	mov	a,r7
      0007F7 12r00r00         [24] 1450 	lcall	__gptrput
                                   1451 ;	../../src/stm8s_tim2.c:495: TIM2->EGR = (uint8_t)TIM2_PSCReloadMode;
      0007FA 90 53 06         [24] 1452 	mov	dptr,#0x5306
      0007FD 75 F0 00         [24] 1453 	mov	b,#0x00
      000800 E5*15            [12] 1454 	mov	a,_TIM2_PrescalerConfig_PARM_2
      000802 02r00r00         [24] 1455 	ljmp	__gptrput
                                   1456 ;------------------------------------------------------------
                                   1457 ;Allocation info for local variables in function 'TIM2_ForcedOC1Config'
                                   1458 ;------------------------------------------------------------
                                   1459 ;TIM2_ForcedAction         Allocated to registers r7 
                                   1460 ;------------------------------------------------------------
                                   1461 ;	../../src/stm8s_tim2.c:507: void TIM2_ForcedOC1Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                   1462 ;	-----------------------------------------
                                   1463 ;	 function TIM2_ForcedOC1Config
                                   1464 ;	-----------------------------------------
      000805                       1465 _TIM2_ForcedOC1Config:
      000805 AF 82            [24] 1466 	mov	r7,dpl
                                   1467 ;	../../src/stm8s_tim2.c:510: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      000807 BF 50 02         [24] 1468 	cjne	r7,#0x50,00114$
      00080A 80 1D            [24] 1469 	sjmp	00104$
      00080C                       1470 00114$:
      00080C BF 40 02         [24] 1471 	cjne	r7,#0x40,00115$
      00080F 80 18            [24] 1472 	sjmp	00104$
      000811                       1473 00115$:
      000811 75*00 FE         [24] 1474 	mov	_assert_failed_PARM_2,#0xfe
      000814 75*01 01         [24] 1475 	mov	(_assert_failed_PARM_2 + 1),#0x01
      000817 E4               [12] 1476 	clr	a
      000818 F5*02            [12] 1477 	mov	(_assert_failed_PARM_2 + 2),a
      00081A F5*03            [12] 1478 	mov	(_assert_failed_PARM_2 + 3),a
      00081C 90r00r00         [24] 1479 	mov	dptr,#___str_0
      00081F 75 F0 80         [24] 1480 	mov	b,#0x80
      000822 C0 07            [24] 1481 	push	ar7
      000824 12r00r00         [24] 1482 	lcall	_assert_failed
      000827 D0 07            [24] 1483 	pop	ar7
      000829                       1484 00104$:
                                   1485 ;	../../src/stm8s_tim2.c:513: TIM2->CCMR1  =  (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM))
      000829 90 53 07         [24] 1486 	mov	dptr,#0x5307
      00082C 75 F0 00         [24] 1487 	mov	b,#0x00
      00082F 12r00r00         [24] 1488 	lcall	__gptrget
      000832 FE               [12] 1489 	mov	r6,a
      000833 74 8F            [12] 1490 	mov	a,#0x8f
      000835 5E               [12] 1491 	anl	a,r6
      000836 42 07            [12] 1492 	orl	ar7,a
      000838 90 53 07         [24] 1493 	mov	dptr,#0x5307
      00083B 75 F0 00         [24] 1494 	mov	b,#0x00
      00083E EF               [12] 1495 	mov	a,r7
      00083F 02r00r00         [24] 1496 	ljmp	__gptrput
                                   1497 ;------------------------------------------------------------
                                   1498 ;Allocation info for local variables in function 'TIM2_ForcedOC2Config'
                                   1499 ;------------------------------------------------------------
                                   1500 ;TIM2_ForcedAction         Allocated to registers r7 
                                   1501 ;------------------------------------------------------------
                                   1502 ;	../../src/stm8s_tim2.c:526: void TIM2_ForcedOC2Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                   1503 ;	-----------------------------------------
                                   1504 ;	 function TIM2_ForcedOC2Config
                                   1505 ;	-----------------------------------------
      000842                       1506 _TIM2_ForcedOC2Config:
      000842 AF 82            [24] 1507 	mov	r7,dpl
                                   1508 ;	../../src/stm8s_tim2.c:529: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      000844 BF 50 02         [24] 1509 	cjne	r7,#0x50,00114$
      000847 80 1D            [24] 1510 	sjmp	00104$
      000849                       1511 00114$:
      000849 BF 40 02         [24] 1512 	cjne	r7,#0x40,00115$
      00084C 80 18            [24] 1513 	sjmp	00104$
      00084E                       1514 00115$:
      00084E 75*00 11         [24] 1515 	mov	_assert_failed_PARM_2,#0x11
      000851 75*01 02         [24] 1516 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000854 E4               [12] 1517 	clr	a
      000855 F5*02            [12] 1518 	mov	(_assert_failed_PARM_2 + 2),a
      000857 F5*03            [12] 1519 	mov	(_assert_failed_PARM_2 + 3),a
      000859 90r00r00         [24] 1520 	mov	dptr,#___str_0
      00085C 75 F0 80         [24] 1521 	mov	b,#0x80
      00085F C0 07            [24] 1522 	push	ar7
      000861 12r00r00         [24] 1523 	lcall	_assert_failed
      000864 D0 07            [24] 1524 	pop	ar7
      000866                       1525 00104$:
                                   1526 ;	../../src/stm8s_tim2.c:532: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM))
      000866 90 53 08         [24] 1527 	mov	dptr,#0x5308
      000869 75 F0 00         [24] 1528 	mov	b,#0x00
      00086C 12r00r00         [24] 1529 	lcall	__gptrget
      00086F FE               [12] 1530 	mov	r6,a
      000870 74 8F            [12] 1531 	mov	a,#0x8f
      000872 5E               [12] 1532 	anl	a,r6
      000873 42 07            [12] 1533 	orl	ar7,a
      000875 90 53 08         [24] 1534 	mov	dptr,#0x5308
      000878 75 F0 00         [24] 1535 	mov	b,#0x00
      00087B EF               [12] 1536 	mov	a,r7
      00087C 02r00r00         [24] 1537 	ljmp	__gptrput
                                   1538 ;------------------------------------------------------------
                                   1539 ;Allocation info for local variables in function 'TIM2_ForcedOC3Config'
                                   1540 ;------------------------------------------------------------
                                   1541 ;TIM2_ForcedAction         Allocated to registers r7 
                                   1542 ;------------------------------------------------------------
                                   1543 ;	../../src/stm8s_tim2.c:545: void TIM2_ForcedOC3Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                   1544 ;	-----------------------------------------
                                   1545 ;	 function TIM2_ForcedOC3Config
                                   1546 ;	-----------------------------------------
      00087F                       1547 _TIM2_ForcedOC3Config:
      00087F AF 82            [24] 1548 	mov	r7,dpl
                                   1549 ;	../../src/stm8s_tim2.c:548: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      000881 BF 50 02         [24] 1550 	cjne	r7,#0x50,00114$
      000884 80 1D            [24] 1551 	sjmp	00104$
      000886                       1552 00114$:
      000886 BF 40 02         [24] 1553 	cjne	r7,#0x40,00115$
      000889 80 18            [24] 1554 	sjmp	00104$
      00088B                       1555 00115$:
      00088B 75*00 24         [24] 1556 	mov	_assert_failed_PARM_2,#0x24
      00088E 75*01 02         [24] 1557 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000891 E4               [12] 1558 	clr	a
      000892 F5*02            [12] 1559 	mov	(_assert_failed_PARM_2 + 2),a
      000894 F5*03            [12] 1560 	mov	(_assert_failed_PARM_2 + 3),a
      000896 90r00r00         [24] 1561 	mov	dptr,#___str_0
      000899 75 F0 80         [24] 1562 	mov	b,#0x80
      00089C C0 07            [24] 1563 	push	ar7
      00089E 12r00r00         [24] 1564 	lcall	_assert_failed
      0008A1 D0 07            [24] 1565 	pop	ar7
      0008A3                       1566 00104$:
                                   1567 ;	../../src/stm8s_tim2.c:551: TIM2->CCMR3  =  (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM))
      0008A3 90 53 09         [24] 1568 	mov	dptr,#0x5309
      0008A6 75 F0 00         [24] 1569 	mov	b,#0x00
      0008A9 12r00r00         [24] 1570 	lcall	__gptrget
      0008AC FE               [12] 1571 	mov	r6,a
      0008AD 74 8F            [12] 1572 	mov	a,#0x8f
      0008AF 5E               [12] 1573 	anl	a,r6
      0008B0 42 07            [12] 1574 	orl	ar7,a
      0008B2 90 53 09         [24] 1575 	mov	dptr,#0x5309
      0008B5 75 F0 00         [24] 1576 	mov	b,#0x00
      0008B8 EF               [12] 1577 	mov	a,r7
      0008B9 02r00r00         [24] 1578 	ljmp	__gptrput
                                   1579 ;------------------------------------------------------------
                                   1580 ;Allocation info for local variables in function 'TIM2_ARRPreloadConfig'
                                   1581 ;------------------------------------------------------------
                                   1582 ;NewState                  Allocated to registers r7 
                                   1583 ;------------------------------------------------------------
                                   1584 ;	../../src/stm8s_tim2.c:561: void TIM2_ARRPreloadConfig(FunctionalState NewState)
                                   1585 ;	-----------------------------------------
                                   1586 ;	 function TIM2_ARRPreloadConfig
                                   1587 ;	-----------------------------------------
      0008BC                       1588 _TIM2_ARRPreloadConfig:
                                   1589 ;	../../src/stm8s_tim2.c:564: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0008BC E5 82            [12] 1590 	mov	a,dpl
      0008BE FF               [12] 1591 	mov	r7,a
      0008BF 60 1D            [24] 1592 	jz	00107$
      0008C1 BF 01 02         [24] 1593 	cjne	r7,#0x01,00121$
      0008C4 80 18            [24] 1594 	sjmp	00107$
      0008C6                       1595 00121$:
      0008C6 75*00 34         [24] 1596 	mov	_assert_failed_PARM_2,#0x34
      0008C9 75*01 02         [24] 1597 	mov	(_assert_failed_PARM_2 + 1),#0x02
      0008CC E4               [12] 1598 	clr	a
      0008CD F5*02            [12] 1599 	mov	(_assert_failed_PARM_2 + 2),a
      0008CF F5*03            [12] 1600 	mov	(_assert_failed_PARM_2 + 3),a
      0008D1 90r00r00         [24] 1601 	mov	dptr,#___str_0
      0008D4 75 F0 80         [24] 1602 	mov	b,#0x80
      0008D7 C0 07            [24] 1603 	push	ar7
      0008D9 12r00r00         [24] 1604 	lcall	_assert_failed
      0008DC D0 07            [24] 1605 	pop	ar7
      0008DE                       1606 00107$:
                                   1607 ;	../../src/stm8s_tim2.c:567: if (NewState != DISABLE)
      0008DE EF               [12] 1608 	mov	a,r7
      0008DF 60 17            [24] 1609 	jz	00102$
                                   1610 ;	../../src/stm8s_tim2.c:569: TIM2->CR1 |= (uint8_t)TIM2_CR1_ARPE;
      0008E1 90 53 00         [24] 1611 	mov	dptr,#0x5300
      0008E4 75 F0 00         [24] 1612 	mov	b,#0x00
      0008E7 12r00r00         [24] 1613 	lcall	__gptrget
      0008EA FF               [12] 1614 	mov	r7,a
      0008EB 43 07 80         [24] 1615 	orl	ar7,#0x80
      0008EE 90 53 00         [24] 1616 	mov	dptr,#0x5300
      0008F1 75 F0 00         [24] 1617 	mov	b,#0x00
      0008F4 EF               [12] 1618 	mov	a,r7
      0008F5 02r00r00         [24] 1619 	ljmp	__gptrput
      0008F8                       1620 00102$:
                                   1621 ;	../../src/stm8s_tim2.c:573: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_ARPE);
      0008F8 90 53 00         [24] 1622 	mov	dptr,#0x5300
      0008FB 75 F0 00         [24] 1623 	mov	b,#0x00
      0008FE 12r00r00         [24] 1624 	lcall	__gptrget
      000901 FF               [12] 1625 	mov	r7,a
      000902 53 07 7F         [24] 1626 	anl	ar7,#0x7f
      000905 90 53 00         [24] 1627 	mov	dptr,#0x5300
      000908 75 F0 00         [24] 1628 	mov	b,#0x00
      00090B EF               [12] 1629 	mov	a,r7
      00090C 02r00r00         [24] 1630 	ljmp	__gptrput
                                   1631 ;------------------------------------------------------------
                                   1632 ;Allocation info for local variables in function 'TIM2_OC1PreloadConfig'
                                   1633 ;------------------------------------------------------------
                                   1634 ;NewState                  Allocated to registers r7 
                                   1635 ;------------------------------------------------------------
                                   1636 ;	../../src/stm8s_tim2.c:583: void TIM2_OC1PreloadConfig(FunctionalState NewState)
                                   1637 ;	-----------------------------------------
                                   1638 ;	 function TIM2_OC1PreloadConfig
                                   1639 ;	-----------------------------------------
      00090F                       1640 _TIM2_OC1PreloadConfig:
                                   1641 ;	../../src/stm8s_tim2.c:586: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00090F E5 82            [12] 1642 	mov	a,dpl
      000911 FF               [12] 1643 	mov	r7,a
      000912 60 1D            [24] 1644 	jz	00107$
      000914 BF 01 02         [24] 1645 	cjne	r7,#0x01,00121$
      000917 80 18            [24] 1646 	sjmp	00107$
      000919                       1647 00121$:
      000919 75*00 4A         [24] 1648 	mov	_assert_failed_PARM_2,#0x4a
      00091C 75*01 02         [24] 1649 	mov	(_assert_failed_PARM_2 + 1),#0x02
      00091F E4               [12] 1650 	clr	a
      000920 F5*02            [12] 1651 	mov	(_assert_failed_PARM_2 + 2),a
      000922 F5*03            [12] 1652 	mov	(_assert_failed_PARM_2 + 3),a
      000924 90r00r00         [24] 1653 	mov	dptr,#___str_0
      000927 75 F0 80         [24] 1654 	mov	b,#0x80
      00092A C0 07            [24] 1655 	push	ar7
      00092C 12r00r00         [24] 1656 	lcall	_assert_failed
      00092F D0 07            [24] 1657 	pop	ar7
      000931                       1658 00107$:
                                   1659 ;	../../src/stm8s_tim2.c:589: if (NewState != DISABLE)
      000931 EF               [12] 1660 	mov	a,r7
      000932 60 17            [24] 1661 	jz	00102$
                                   1662 ;	../../src/stm8s_tim2.c:591: TIM2->CCMR1 |= (uint8_t)TIM2_CCMR_OCxPE;
      000934 90 53 07         [24] 1663 	mov	dptr,#0x5307
      000937 75 F0 00         [24] 1664 	mov	b,#0x00
      00093A 12r00r00         [24] 1665 	lcall	__gptrget
      00093D FF               [12] 1666 	mov	r7,a
      00093E 43 07 08         [24] 1667 	orl	ar7,#0x08
      000941 90 53 07         [24] 1668 	mov	dptr,#0x5307
      000944 75 F0 00         [24] 1669 	mov	b,#0x00
      000947 EF               [12] 1670 	mov	a,r7
      000948 02r00r00         [24] 1671 	ljmp	__gptrput
      00094B                       1672 00102$:
                                   1673 ;	../../src/stm8s_tim2.c:595: TIM2->CCMR1 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      00094B 90 53 07         [24] 1674 	mov	dptr,#0x5307
      00094E 75 F0 00         [24] 1675 	mov	b,#0x00
      000951 12r00r00         [24] 1676 	lcall	__gptrget
      000954 FF               [12] 1677 	mov	r7,a
      000955 53 07 F7         [24] 1678 	anl	ar7,#0xf7
      000958 90 53 07         [24] 1679 	mov	dptr,#0x5307
      00095B 75 F0 00         [24] 1680 	mov	b,#0x00
      00095E EF               [12] 1681 	mov	a,r7
      00095F 02r00r00         [24] 1682 	ljmp	__gptrput
                                   1683 ;------------------------------------------------------------
                                   1684 ;Allocation info for local variables in function 'TIM2_OC2PreloadConfig'
                                   1685 ;------------------------------------------------------------
                                   1686 ;NewState                  Allocated to registers r7 
                                   1687 ;------------------------------------------------------------
                                   1688 ;	../../src/stm8s_tim2.c:605: void TIM2_OC2PreloadConfig(FunctionalState NewState)
                                   1689 ;	-----------------------------------------
                                   1690 ;	 function TIM2_OC2PreloadConfig
                                   1691 ;	-----------------------------------------
      000962                       1692 _TIM2_OC2PreloadConfig:
                                   1693 ;	../../src/stm8s_tim2.c:608: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000962 E5 82            [12] 1694 	mov	a,dpl
      000964 FF               [12] 1695 	mov	r7,a
      000965 60 1D            [24] 1696 	jz	00107$
      000967 BF 01 02         [24] 1697 	cjne	r7,#0x01,00121$
      00096A 80 18            [24] 1698 	sjmp	00107$
      00096C                       1699 00121$:
      00096C 75*00 60         [24] 1700 	mov	_assert_failed_PARM_2,#0x60
      00096F 75*01 02         [24] 1701 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000972 E4               [12] 1702 	clr	a
      000973 F5*02            [12] 1703 	mov	(_assert_failed_PARM_2 + 2),a
      000975 F5*03            [12] 1704 	mov	(_assert_failed_PARM_2 + 3),a
      000977 90r00r00         [24] 1705 	mov	dptr,#___str_0
      00097A 75 F0 80         [24] 1706 	mov	b,#0x80
      00097D C0 07            [24] 1707 	push	ar7
      00097F 12r00r00         [24] 1708 	lcall	_assert_failed
      000982 D0 07            [24] 1709 	pop	ar7
      000984                       1710 00107$:
                                   1711 ;	../../src/stm8s_tim2.c:611: if (NewState != DISABLE)
      000984 EF               [12] 1712 	mov	a,r7
      000985 60 17            [24] 1713 	jz	00102$
                                   1714 ;	../../src/stm8s_tim2.c:613: TIM2->CCMR2 |= (uint8_t)TIM2_CCMR_OCxPE;
      000987 90 53 08         [24] 1715 	mov	dptr,#0x5308
      00098A 75 F0 00         [24] 1716 	mov	b,#0x00
      00098D 12r00r00         [24] 1717 	lcall	__gptrget
      000990 FF               [12] 1718 	mov	r7,a
      000991 43 07 08         [24] 1719 	orl	ar7,#0x08
      000994 90 53 08         [24] 1720 	mov	dptr,#0x5308
      000997 75 F0 00         [24] 1721 	mov	b,#0x00
      00099A EF               [12] 1722 	mov	a,r7
      00099B 02r00r00         [24] 1723 	ljmp	__gptrput
      00099E                       1724 00102$:
                                   1725 ;	../../src/stm8s_tim2.c:617: TIM2->CCMR2 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      00099E 90 53 08         [24] 1726 	mov	dptr,#0x5308
      0009A1 75 F0 00         [24] 1727 	mov	b,#0x00
      0009A4 12r00r00         [24] 1728 	lcall	__gptrget
      0009A7 FF               [12] 1729 	mov	r7,a
      0009A8 53 07 F7         [24] 1730 	anl	ar7,#0xf7
      0009AB 90 53 08         [24] 1731 	mov	dptr,#0x5308
      0009AE 75 F0 00         [24] 1732 	mov	b,#0x00
      0009B1 EF               [12] 1733 	mov	a,r7
      0009B2 02r00r00         [24] 1734 	ljmp	__gptrput
                                   1735 ;------------------------------------------------------------
                                   1736 ;Allocation info for local variables in function 'TIM2_OC3PreloadConfig'
                                   1737 ;------------------------------------------------------------
                                   1738 ;NewState                  Allocated to registers r7 
                                   1739 ;------------------------------------------------------------
                                   1740 ;	../../src/stm8s_tim2.c:627: void TIM2_OC3PreloadConfig(FunctionalState NewState)
                                   1741 ;	-----------------------------------------
                                   1742 ;	 function TIM2_OC3PreloadConfig
                                   1743 ;	-----------------------------------------
      0009B5                       1744 _TIM2_OC3PreloadConfig:
                                   1745 ;	../../src/stm8s_tim2.c:630: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0009B5 E5 82            [12] 1746 	mov	a,dpl
      0009B7 FF               [12] 1747 	mov	r7,a
      0009B8 60 1D            [24] 1748 	jz	00107$
      0009BA BF 01 02         [24] 1749 	cjne	r7,#0x01,00121$
      0009BD 80 18            [24] 1750 	sjmp	00107$
      0009BF                       1751 00121$:
      0009BF 75*00 76         [24] 1752 	mov	_assert_failed_PARM_2,#0x76
      0009C2 75*01 02         [24] 1753 	mov	(_assert_failed_PARM_2 + 1),#0x02
      0009C5 E4               [12] 1754 	clr	a
      0009C6 F5*02            [12] 1755 	mov	(_assert_failed_PARM_2 + 2),a
      0009C8 F5*03            [12] 1756 	mov	(_assert_failed_PARM_2 + 3),a
      0009CA 90r00r00         [24] 1757 	mov	dptr,#___str_0
      0009CD 75 F0 80         [24] 1758 	mov	b,#0x80
      0009D0 C0 07            [24] 1759 	push	ar7
      0009D2 12r00r00         [24] 1760 	lcall	_assert_failed
      0009D5 D0 07            [24] 1761 	pop	ar7
      0009D7                       1762 00107$:
                                   1763 ;	../../src/stm8s_tim2.c:633: if (NewState != DISABLE)
      0009D7 EF               [12] 1764 	mov	a,r7
      0009D8 60 17            [24] 1765 	jz	00102$
                                   1766 ;	../../src/stm8s_tim2.c:635: TIM2->CCMR3 |= (uint8_t)TIM2_CCMR_OCxPE;
      0009DA 90 53 09         [24] 1767 	mov	dptr,#0x5309
      0009DD 75 F0 00         [24] 1768 	mov	b,#0x00
      0009E0 12r00r00         [24] 1769 	lcall	__gptrget
      0009E3 FF               [12] 1770 	mov	r7,a
      0009E4 43 07 08         [24] 1771 	orl	ar7,#0x08
      0009E7 90 53 09         [24] 1772 	mov	dptr,#0x5309
      0009EA 75 F0 00         [24] 1773 	mov	b,#0x00
      0009ED EF               [12] 1774 	mov	a,r7
      0009EE 02r00r00         [24] 1775 	ljmp	__gptrput
      0009F1                       1776 00102$:
                                   1777 ;	../../src/stm8s_tim2.c:639: TIM2->CCMR3 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      0009F1 90 53 09         [24] 1778 	mov	dptr,#0x5309
      0009F4 75 F0 00         [24] 1779 	mov	b,#0x00
      0009F7 12r00r00         [24] 1780 	lcall	__gptrget
      0009FA FF               [12] 1781 	mov	r7,a
      0009FB 53 07 F7         [24] 1782 	anl	ar7,#0xf7
      0009FE 90 53 09         [24] 1783 	mov	dptr,#0x5309
      000A01 75 F0 00         [24] 1784 	mov	b,#0x00
      000A04 EF               [12] 1785 	mov	a,r7
      000A05 02r00r00         [24] 1786 	ljmp	__gptrput
                                   1787 ;------------------------------------------------------------
                                   1788 ;Allocation info for local variables in function 'TIM2_GenerateEvent'
                                   1789 ;------------------------------------------------------------
                                   1790 ;TIM2_EventSource          Allocated to registers r7 
                                   1791 ;------------------------------------------------------------
                                   1792 ;	../../src/stm8s_tim2.c:653: void TIM2_GenerateEvent(TIM2_EventSource_TypeDef TIM2_EventSource)
                                   1793 ;	-----------------------------------------
                                   1794 ;	 function TIM2_GenerateEvent
                                   1795 ;	-----------------------------------------
      000A08                       1796 _TIM2_GenerateEvent:
                                   1797 ;	../../src/stm8s_tim2.c:656: assert_param(IS_TIM2_EVENT_SOURCE_OK(TIM2_EventSource));
      000A08 E5 82            [12] 1798 	mov	a,dpl
      000A0A FF               [12] 1799 	mov	r7,a
      000A0B 70 18            [24] 1800 	jnz	00104$
      000A0D 75*00 90         [24] 1801 	mov	_assert_failed_PARM_2,#0x90
      000A10 75*01 02         [24] 1802 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000A13 E4               [12] 1803 	clr	a
      000A14 F5*02            [12] 1804 	mov	(_assert_failed_PARM_2 + 2),a
      000A16 F5*03            [12] 1805 	mov	(_assert_failed_PARM_2 + 3),a
      000A18 90r00r00         [24] 1806 	mov	dptr,#___str_0
      000A1B 75 F0 80         [24] 1807 	mov	b,#0x80
      000A1E C0 07            [24] 1808 	push	ar7
      000A20 12r00r00         [24] 1809 	lcall	_assert_failed
      000A23 D0 07            [24] 1810 	pop	ar7
      000A25                       1811 00104$:
                                   1812 ;	../../src/stm8s_tim2.c:659: TIM2->EGR = (uint8_t)TIM2_EventSource;
      000A25 90 53 06         [24] 1813 	mov	dptr,#0x5306
      000A28 75 F0 00         [24] 1814 	mov	b,#0x00
      000A2B EF               [12] 1815 	mov	a,r7
      000A2C 02r00r00         [24] 1816 	ljmp	__gptrput
                                   1817 ;------------------------------------------------------------
                                   1818 ;Allocation info for local variables in function 'TIM2_OC1PolarityConfig'
                                   1819 ;------------------------------------------------------------
                                   1820 ;TIM2_OCPolarity           Allocated to registers r7 
                                   1821 ;------------------------------------------------------------
                                   1822 ;	../../src/stm8s_tim2.c:670: void TIM2_OC1PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1823 ;	-----------------------------------------
                                   1824 ;	 function TIM2_OC1PolarityConfig
                                   1825 ;	-----------------------------------------
      000A2F                       1826 _TIM2_OC1PolarityConfig:
                                   1827 ;	../../src/stm8s_tim2.c:673: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000A2F E5 82            [12] 1828 	mov	a,dpl
      000A31 FF               [12] 1829 	mov	r7,a
      000A32 60 1D            [24] 1830 	jz	00107$
      000A34 BF 22 02         [24] 1831 	cjne	r7,#0x22,00121$
      000A37 80 18            [24] 1832 	sjmp	00107$
      000A39                       1833 00121$:
      000A39 75*00 A1         [24] 1834 	mov	_assert_failed_PARM_2,#0xa1
      000A3C 75*01 02         [24] 1835 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000A3F E4               [12] 1836 	clr	a
      000A40 F5*02            [12] 1837 	mov	(_assert_failed_PARM_2 + 2),a
      000A42 F5*03            [12] 1838 	mov	(_assert_failed_PARM_2 + 3),a
      000A44 90r00r00         [24] 1839 	mov	dptr,#___str_0
      000A47 75 F0 80         [24] 1840 	mov	b,#0x80
      000A4A C0 07            [24] 1841 	push	ar7
      000A4C 12r00r00         [24] 1842 	lcall	_assert_failed
      000A4F D0 07            [24] 1843 	pop	ar7
      000A51                       1844 00107$:
                                   1845 ;	../../src/stm8s_tim2.c:676: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      000A51 EF               [12] 1846 	mov	a,r7
      000A52 60 17            [24] 1847 	jz	00102$
                                   1848 ;	../../src/stm8s_tim2.c:678: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1P;
      000A54 90 53 0A         [24] 1849 	mov	dptr,#0x530a
      000A57 75 F0 00         [24] 1850 	mov	b,#0x00
      000A5A 12r00r00         [24] 1851 	lcall	__gptrget
      000A5D FF               [12] 1852 	mov	r7,a
      000A5E 43 07 02         [24] 1853 	orl	ar7,#0x02
      000A61 90 53 0A         [24] 1854 	mov	dptr,#0x530a
      000A64 75 F0 00         [24] 1855 	mov	b,#0x00
      000A67 EF               [12] 1856 	mov	a,r7
      000A68 02r00r00         [24] 1857 	ljmp	__gptrput
      000A6B                       1858 00102$:
                                   1859 ;	../../src/stm8s_tim2.c:682: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1P);
      000A6B 90 53 0A         [24] 1860 	mov	dptr,#0x530a
      000A6E 75 F0 00         [24] 1861 	mov	b,#0x00
      000A71 12r00r00         [24] 1862 	lcall	__gptrget
      000A74 FF               [12] 1863 	mov	r7,a
      000A75 53 07 FD         [24] 1864 	anl	ar7,#0xfd
      000A78 90 53 0A         [24] 1865 	mov	dptr,#0x530a
      000A7B 75 F0 00         [24] 1866 	mov	b,#0x00
      000A7E EF               [12] 1867 	mov	a,r7
      000A7F 02r00r00         [24] 1868 	ljmp	__gptrput
                                   1869 ;------------------------------------------------------------
                                   1870 ;Allocation info for local variables in function 'TIM2_OC2PolarityConfig'
                                   1871 ;------------------------------------------------------------
                                   1872 ;TIM2_OCPolarity           Allocated to registers r7 
                                   1873 ;------------------------------------------------------------
                                   1874 ;	../../src/stm8s_tim2.c:694: void TIM2_OC2PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1875 ;	-----------------------------------------
                                   1876 ;	 function TIM2_OC2PolarityConfig
                                   1877 ;	-----------------------------------------
      000A82                       1878 _TIM2_OC2PolarityConfig:
                                   1879 ;	../../src/stm8s_tim2.c:697: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000A82 E5 82            [12] 1880 	mov	a,dpl
      000A84 FF               [12] 1881 	mov	r7,a
      000A85 60 1D            [24] 1882 	jz	00107$
      000A87 BF 22 02         [24] 1883 	cjne	r7,#0x22,00121$
      000A8A 80 18            [24] 1884 	sjmp	00107$
      000A8C                       1885 00121$:
      000A8C 75*00 B9         [24] 1886 	mov	_assert_failed_PARM_2,#0xb9
      000A8F 75*01 02         [24] 1887 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000A92 E4               [12] 1888 	clr	a
      000A93 F5*02            [12] 1889 	mov	(_assert_failed_PARM_2 + 2),a
      000A95 F5*03            [12] 1890 	mov	(_assert_failed_PARM_2 + 3),a
      000A97 90r00r00         [24] 1891 	mov	dptr,#___str_0
      000A9A 75 F0 80         [24] 1892 	mov	b,#0x80
      000A9D C0 07            [24] 1893 	push	ar7
      000A9F 12r00r00         [24] 1894 	lcall	_assert_failed
      000AA2 D0 07            [24] 1895 	pop	ar7
      000AA4                       1896 00107$:
                                   1897 ;	../../src/stm8s_tim2.c:700: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      000AA4 EF               [12] 1898 	mov	a,r7
      000AA5 60 17            [24] 1899 	jz	00102$
                                   1900 ;	../../src/stm8s_tim2.c:702: TIM2->CCER1 |= TIM2_CCER1_CC2P;
      000AA7 90 53 0A         [24] 1901 	mov	dptr,#0x530a
      000AAA 75 F0 00         [24] 1902 	mov	b,#0x00
      000AAD 12r00r00         [24] 1903 	lcall	__gptrget
      000AB0 FF               [12] 1904 	mov	r7,a
      000AB1 43 07 20         [24] 1905 	orl	ar7,#0x20
      000AB4 90 53 0A         [24] 1906 	mov	dptr,#0x530a
      000AB7 75 F0 00         [24] 1907 	mov	b,#0x00
      000ABA EF               [12] 1908 	mov	a,r7
      000ABB 02r00r00         [24] 1909 	ljmp	__gptrput
      000ABE                       1910 00102$:
                                   1911 ;	../../src/stm8s_tim2.c:706: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2P);
      000ABE 90 53 0A         [24] 1912 	mov	dptr,#0x530a
      000AC1 75 F0 00         [24] 1913 	mov	b,#0x00
      000AC4 12r00r00         [24] 1914 	lcall	__gptrget
      000AC7 FF               [12] 1915 	mov	r7,a
      000AC8 53 07 DF         [24] 1916 	anl	ar7,#0xdf
      000ACB 90 53 0A         [24] 1917 	mov	dptr,#0x530a
      000ACE 75 F0 00         [24] 1918 	mov	b,#0x00
      000AD1 EF               [12] 1919 	mov	a,r7
      000AD2 02r00r00         [24] 1920 	ljmp	__gptrput
                                   1921 ;------------------------------------------------------------
                                   1922 ;Allocation info for local variables in function 'TIM2_OC3PolarityConfig'
                                   1923 ;------------------------------------------------------------
                                   1924 ;TIM2_OCPolarity           Allocated to registers r7 
                                   1925 ;------------------------------------------------------------
                                   1926 ;	../../src/stm8s_tim2.c:718: void TIM2_OC3PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1927 ;	-----------------------------------------
                                   1928 ;	 function TIM2_OC3PolarityConfig
                                   1929 ;	-----------------------------------------
      000AD5                       1930 _TIM2_OC3PolarityConfig:
                                   1931 ;	../../src/stm8s_tim2.c:721: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      000AD5 E5 82            [12] 1932 	mov	a,dpl
      000AD7 FF               [12] 1933 	mov	r7,a
      000AD8 60 1D            [24] 1934 	jz	00107$
      000ADA BF 22 02         [24] 1935 	cjne	r7,#0x22,00121$
      000ADD 80 18            [24] 1936 	sjmp	00107$
      000ADF                       1937 00121$:
      000ADF 75*00 D1         [24] 1938 	mov	_assert_failed_PARM_2,#0xd1
      000AE2 75*01 02         [24] 1939 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000AE5 E4               [12] 1940 	clr	a
      000AE6 F5*02            [12] 1941 	mov	(_assert_failed_PARM_2 + 2),a
      000AE8 F5*03            [12] 1942 	mov	(_assert_failed_PARM_2 + 3),a
      000AEA 90r00r00         [24] 1943 	mov	dptr,#___str_0
      000AED 75 F0 80         [24] 1944 	mov	b,#0x80
      000AF0 C0 07            [24] 1945 	push	ar7
      000AF2 12r00r00         [24] 1946 	lcall	_assert_failed
      000AF5 D0 07            [24] 1947 	pop	ar7
      000AF7                       1948 00107$:
                                   1949 ;	../../src/stm8s_tim2.c:724: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      000AF7 EF               [12] 1950 	mov	a,r7
      000AF8 60 17            [24] 1951 	jz	00102$
                                   1952 ;	../../src/stm8s_tim2.c:726: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3P;
      000AFA 90 53 0B         [24] 1953 	mov	dptr,#0x530b
      000AFD 75 F0 00         [24] 1954 	mov	b,#0x00
      000B00 12r00r00         [24] 1955 	lcall	__gptrget
      000B03 FF               [12] 1956 	mov	r7,a
      000B04 43 07 02         [24] 1957 	orl	ar7,#0x02
      000B07 90 53 0B         [24] 1958 	mov	dptr,#0x530b
      000B0A 75 F0 00         [24] 1959 	mov	b,#0x00
      000B0D EF               [12] 1960 	mov	a,r7
      000B0E 02r00r00         [24] 1961 	ljmp	__gptrput
      000B11                       1962 00102$:
                                   1963 ;	../../src/stm8s_tim2.c:730: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3P);
      000B11 90 53 0B         [24] 1964 	mov	dptr,#0x530b
      000B14 75 F0 00         [24] 1965 	mov	b,#0x00
      000B17 12r00r00         [24] 1966 	lcall	__gptrget
      000B1A FF               [12] 1967 	mov	r7,a
      000B1B 53 07 FD         [24] 1968 	anl	ar7,#0xfd
      000B1E 90 53 0B         [24] 1969 	mov	dptr,#0x530b
      000B21 75 F0 00         [24] 1970 	mov	b,#0x00
      000B24 EF               [12] 1971 	mov	a,r7
      000B25 02r00r00         [24] 1972 	ljmp	__gptrput
                                   1973 ;------------------------------------------------------------
                                   1974 ;Allocation info for local variables in function 'TIM2_CCxCmd'
                                   1975 ;------------------------------------------------------------
                                   1976 ;NewState                  Allocated with name '_TIM2_CCxCmd_PARM_2'
                                   1977 ;TIM2_Channel              Allocated to registers r7 
                                   1978 ;------------------------------------------------------------
                                   1979 ;	../../src/stm8s_tim2.c:745: void TIM2_CCxCmd(TIM2_Channel_TypeDef TIM2_Channel, FunctionalState NewState)
                                   1980 ;	-----------------------------------------
                                   1981 ;	 function TIM2_CCxCmd
                                   1982 ;	-----------------------------------------
      000B28                       1983 _TIM2_CCxCmd:
                                   1984 ;	../../src/stm8s_tim2.c:748: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      000B28 E5 82            [12] 1985 	mov	a,dpl
      000B2A FF               [12] 1986 	mov	r7,a
      000B2B 60 22            [24] 1987 	jz	00119$
      000B2D BF 01 02         [24] 1988 	cjne	r7,#0x01,00162$
      000B30 80 1D            [24] 1989 	sjmp	00119$
      000B32                       1990 00162$:
      000B32 BF 02 02         [24] 1991 	cjne	r7,#0x02,00163$
      000B35 80 18            [24] 1992 	sjmp	00119$
      000B37                       1993 00163$:
      000B37 75*00 EC         [24] 1994 	mov	_assert_failed_PARM_2,#0xec
      000B3A 75*01 02         [24] 1995 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000B3D E4               [12] 1996 	clr	a
      000B3E F5*02            [12] 1997 	mov	(_assert_failed_PARM_2 + 2),a
      000B40 F5*03            [12] 1998 	mov	(_assert_failed_PARM_2 + 3),a
      000B42 90r00r00         [24] 1999 	mov	dptr,#___str_0
      000B45 75 F0 80         [24] 2000 	mov	b,#0x80
      000B48 C0 07            [24] 2001 	push	ar7
      000B4A 12r00r00         [24] 2002 	lcall	_assert_failed
      000B4D D0 07            [24] 2003 	pop	ar7
      000B4F                       2004 00119$:
                                   2005 ;	../../src/stm8s_tim2.c:749: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000B4F E5*16            [12] 2006 	mov	a,_TIM2_CCxCmd_PARM_2
      000B51 60 1F            [24] 2007 	jz	00127$
      000B53 74 01            [12] 2008 	mov	a,#0x01
      000B55 B5*16 02         [24] 2009 	cjne	a,_TIM2_CCxCmd_PARM_2,00165$
      000B58 80 18            [24] 2010 	sjmp	00127$
      000B5A                       2011 00165$:
      000B5A 75*00 ED         [24] 2012 	mov	_assert_failed_PARM_2,#0xed
      000B5D 75*01 02         [24] 2013 	mov	(_assert_failed_PARM_2 + 1),#0x02
      000B60 E4               [12] 2014 	clr	a
      000B61 F5*02            [12] 2015 	mov	(_assert_failed_PARM_2 + 2),a
      000B63 F5*03            [12] 2016 	mov	(_assert_failed_PARM_2 + 3),a
      000B65 90r00r00         [24] 2017 	mov	dptr,#___str_0
      000B68 75 F0 80         [24] 2018 	mov	b,#0x80
      000B6B C0 07            [24] 2019 	push	ar7
      000B6D 12r00r00         [24] 2020 	lcall	_assert_failed
      000B70 D0 07            [24] 2021 	pop	ar7
      000B72                       2022 00127$:
                                   2023 ;	../../src/stm8s_tim2.c:751: if (TIM2_Channel == TIM2_CHANNEL_1)
      000B72 EF               [12] 2024 	mov	a,r7
      000B73 70 32            [24] 2025 	jnz	00114$
                                   2026 ;	../../src/stm8s_tim2.c:754: if (NewState != DISABLE)
      000B75 E5*16            [12] 2027 	mov	a,_TIM2_CCxCmd_PARM_2
      000B77 60 17            [24] 2028 	jz	00102$
                                   2029 ;	../../src/stm8s_tim2.c:756: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000B79 90 53 0A         [24] 2030 	mov	dptr,#0x530a
      000B7C 75 F0 00         [24] 2031 	mov	b,#0x00
      000B7F 12r00r00         [24] 2032 	lcall	__gptrget
      000B82 FE               [12] 2033 	mov	r6,a
      000B83 43 06 01         [24] 2034 	orl	ar6,#0x01
      000B86 90 53 0A         [24] 2035 	mov	dptr,#0x530a
      000B89 75 F0 00         [24] 2036 	mov	b,#0x00
      000B8C EE               [12] 2037 	mov	a,r6
      000B8D 02r00r00         [24] 2038 	ljmp	__gptrput
      000B90                       2039 00102$:
                                   2040 ;	../../src/stm8s_tim2.c:760: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      000B90 90 53 0A         [24] 2041 	mov	dptr,#0x530a
      000B93 75 F0 00         [24] 2042 	mov	b,#0x00
      000B96 12r00r00         [24] 2043 	lcall	__gptrget
      000B99 FE               [12] 2044 	mov	r6,a
      000B9A 53 06 FE         [24] 2045 	anl	ar6,#0xfe
      000B9D 90 53 0A         [24] 2046 	mov	dptr,#0x530a
      000BA0 75 F0 00         [24] 2047 	mov	b,#0x00
      000BA3 EE               [12] 2048 	mov	a,r6
      000BA4 02r00r00         [24] 2049 	ljmp	__gptrput
      000BA7                       2050 00114$:
                                   2051 ;	../../src/stm8s_tim2.c:764: else if (TIM2_Channel == TIM2_CHANNEL_2)
      000BA7 BF 01 32         [24] 2052 	cjne	r7,#0x01,00111$
                                   2053 ;	../../src/stm8s_tim2.c:767: if (NewState != DISABLE)
      000BAA E5*16            [12] 2054 	mov	a,_TIM2_CCxCmd_PARM_2
      000BAC 60 17            [24] 2055 	jz	00105$
                                   2056 ;	../../src/stm8s_tim2.c:769: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC2E;
      000BAE 90 53 0A         [24] 2057 	mov	dptr,#0x530a
      000BB1 75 F0 00         [24] 2058 	mov	b,#0x00
      000BB4 12r00r00         [24] 2059 	lcall	__gptrget
      000BB7 FF               [12] 2060 	mov	r7,a
      000BB8 43 07 10         [24] 2061 	orl	ar7,#0x10
      000BBB 90 53 0A         [24] 2062 	mov	dptr,#0x530a
      000BBE 75 F0 00         [24] 2063 	mov	b,#0x00
      000BC1 EF               [12] 2064 	mov	a,r7
      000BC2 02r00r00         [24] 2065 	ljmp	__gptrput
      000BC5                       2066 00105$:
                                   2067 ;	../../src/stm8s_tim2.c:773: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000BC5 90 53 0A         [24] 2068 	mov	dptr,#0x530a
      000BC8 75 F0 00         [24] 2069 	mov	b,#0x00
      000BCB 12r00r00         [24] 2070 	lcall	__gptrget
      000BCE FF               [12] 2071 	mov	r7,a
      000BCF 53 07 EF         [24] 2072 	anl	ar7,#0xef
      000BD2 90 53 0A         [24] 2073 	mov	dptr,#0x530a
      000BD5 75 F0 00         [24] 2074 	mov	b,#0x00
      000BD8 EF               [12] 2075 	mov	a,r7
      000BD9 02r00r00         [24] 2076 	ljmp	__gptrput
      000BDC                       2077 00111$:
                                   2078 ;	../../src/stm8s_tim2.c:779: if (NewState != DISABLE)
      000BDC E5*16            [12] 2079 	mov	a,_TIM2_CCxCmd_PARM_2
      000BDE 60 17            [24] 2080 	jz	00108$
                                   2081 ;	../../src/stm8s_tim2.c:781: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3E;
      000BE0 90 53 0B         [24] 2082 	mov	dptr,#0x530b
      000BE3 75 F0 00         [24] 2083 	mov	b,#0x00
      000BE6 12r00r00         [24] 2084 	lcall	__gptrget
      000BE9 FF               [12] 2085 	mov	r7,a
      000BEA 43 07 01         [24] 2086 	orl	ar7,#0x01
      000BED 90 53 0B         [24] 2087 	mov	dptr,#0x530b
      000BF0 75 F0 00         [24] 2088 	mov	b,#0x00
      000BF3 EF               [12] 2089 	mov	a,r7
      000BF4 02r00r00         [24] 2090 	ljmp	__gptrput
      000BF7                       2091 00108$:
                                   2092 ;	../../src/stm8s_tim2.c:785: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3E);
      000BF7 90 53 0B         [24] 2093 	mov	dptr,#0x530b
      000BFA 75 F0 00         [24] 2094 	mov	b,#0x00
      000BFD 12r00r00         [24] 2095 	lcall	__gptrget
      000C00 FF               [12] 2096 	mov	r7,a
      000C01 53 07 FE         [24] 2097 	anl	ar7,#0xfe
      000C04 90 53 0B         [24] 2098 	mov	dptr,#0x530b
      000C07 75 F0 00         [24] 2099 	mov	b,#0x00
      000C0A EF               [12] 2100 	mov	a,r7
      000C0B 02r00r00         [24] 2101 	ljmp	__gptrput
                                   2102 ;------------------------------------------------------------
                                   2103 ;Allocation info for local variables in function 'TIM2_SelectOCxM'
                                   2104 ;------------------------------------------------------------
                                   2105 ;TIM2_OCMode               Allocated with name '_TIM2_SelectOCxM_PARM_2'
                                   2106 ;TIM2_Channel              Allocated to registers r7 
                                   2107 ;------------------------------------------------------------
                                   2108 ;	../../src/stm8s_tim2.c:810: void TIM2_SelectOCxM(TIM2_Channel_TypeDef TIM2_Channel, TIM2_OCMode_TypeDef TIM2_OCMode)
                                   2109 ;	-----------------------------------------
                                   2110 ;	 function TIM2_SelectOCxM
                                   2111 ;	-----------------------------------------
      000C0E                       2112 _TIM2_SelectOCxM:
                                   2113 ;	../../src/stm8s_tim2.c:813: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      000C0E E5 82            [12] 2114 	mov	a,dpl
      000C10 FF               [12] 2115 	mov	r7,a
      000C11 60 22            [24] 2116 	jz	00110$
      000C13 BF 01 02         [24] 2117 	cjne	r7,#0x01,00180$
      000C16 80 1D            [24] 2118 	sjmp	00110$
      000C18                       2119 00180$:
      000C18 BF 02 02         [24] 2120 	cjne	r7,#0x02,00181$
      000C1B 80 18            [24] 2121 	sjmp	00110$
      000C1D                       2122 00181$:
      000C1D 75*00 2D         [24] 2123 	mov	_assert_failed_PARM_2,#0x2d
      000C20 75*01 03         [24] 2124 	mov	(_assert_failed_PARM_2 + 1),#0x03
      000C23 E4               [12] 2125 	clr	a
      000C24 F5*02            [12] 2126 	mov	(_assert_failed_PARM_2 + 2),a
      000C26 F5*03            [12] 2127 	mov	(_assert_failed_PARM_2 + 3),a
      000C28 90r00r00         [24] 2128 	mov	dptr,#___str_0
      000C2B 75 F0 80         [24] 2129 	mov	b,#0x80
      000C2E C0 07            [24] 2130 	push	ar7
      000C30 12r00r00         [24] 2131 	lcall	_assert_failed
      000C33 D0 07            [24] 2132 	pop	ar7
      000C35                       2133 00110$:
                                   2134 ;	../../src/stm8s_tim2.c:814: assert_param(IS_TIM2_OCM_OK(TIM2_OCMode));
      000C35 E5*17            [12] 2135 	mov	a,_TIM2_SelectOCxM_PARM_2
      000C37 60 49            [24] 2136 	jz	00118$
      000C39 74 10            [12] 2137 	mov	a,#0x10
      000C3B B5*17 02         [24] 2138 	cjne	a,_TIM2_SelectOCxM_PARM_2,00183$
      000C3E 80 42            [24] 2139 	sjmp	00118$
      000C40                       2140 00183$:
      000C40 74 20            [12] 2141 	mov	a,#0x20
      000C42 B5*17 02         [24] 2142 	cjne	a,_TIM2_SelectOCxM_PARM_2,00184$
      000C45 80 3B            [24] 2143 	sjmp	00118$
      000C47                       2144 00184$:
      000C47 74 30            [12] 2145 	mov	a,#0x30
      000C49 B5*17 02         [24] 2146 	cjne	a,_TIM2_SelectOCxM_PARM_2,00185$
      000C4C 80 34            [24] 2147 	sjmp	00118$
      000C4E                       2148 00185$:
      000C4E 74 60            [12] 2149 	mov	a,#0x60
      000C50 B5*17 02         [24] 2150 	cjne	a,_TIM2_SelectOCxM_PARM_2,00186$
      000C53 80 2D            [24] 2151 	sjmp	00118$
      000C55                       2152 00186$:
      000C55 74 70            [12] 2153 	mov	a,#0x70
      000C57 B5*17 02         [24] 2154 	cjne	a,_TIM2_SelectOCxM_PARM_2,00187$
      000C5A 80 26            [24] 2155 	sjmp	00118$
      000C5C                       2156 00187$:
      000C5C 74 50            [12] 2157 	mov	a,#0x50
      000C5E B5*17 02         [24] 2158 	cjne	a,_TIM2_SelectOCxM_PARM_2,00188$
      000C61 80 1F            [24] 2159 	sjmp	00118$
      000C63                       2160 00188$:
      000C63 74 40            [12] 2161 	mov	a,#0x40
      000C65 B5*17 02         [24] 2162 	cjne	a,_TIM2_SelectOCxM_PARM_2,00189$
      000C68 80 18            [24] 2163 	sjmp	00118$
      000C6A                       2164 00189$:
      000C6A 75*00 2E         [24] 2165 	mov	_assert_failed_PARM_2,#0x2e
      000C6D 75*01 03         [24] 2166 	mov	(_assert_failed_PARM_2 + 1),#0x03
      000C70 E4               [12] 2167 	clr	a
      000C71 F5*02            [12] 2168 	mov	(_assert_failed_PARM_2 + 2),a
      000C73 F5*03            [12] 2169 	mov	(_assert_failed_PARM_2 + 3),a
      000C75 90r00r00         [24] 2170 	mov	dptr,#___str_0
      000C78 75 F0 80         [24] 2171 	mov	b,#0x80
      000C7B C0 07            [24] 2172 	push	ar7
      000C7D 12r00r00         [24] 2173 	lcall	_assert_failed
      000C80 D0 07            [24] 2174 	pop	ar7
      000C82                       2175 00118$:
                                   2176 ;	../../src/stm8s_tim2.c:816: if (TIM2_Channel == TIM2_CHANNEL_1)
      000C82 EF               [12] 2177 	mov	a,r7
                                   2178 ;	../../src/stm8s_tim2.c:819: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      000C83 70 30            [24] 2179 	jnz	00105$
      000C85 90 53 0A         [24] 2180 	mov	dptr,#0x530a
      000C88 F5 F0            [12] 2181 	mov	b,a
      000C8A 12r00r00         [24] 2182 	lcall	__gptrget
      000C8D FE               [12] 2183 	mov	r6,a
      000C8E 53 06 FE         [24] 2184 	anl	ar6,#0xfe
      000C91 90 53 0A         [24] 2185 	mov	dptr,#0x530a
      000C94 75 F0 00         [24] 2186 	mov	b,#0x00
      000C97 EE               [12] 2187 	mov	a,r6
      000C98 12r00r00         [24] 2188 	lcall	__gptrput
                                   2189 ;	../../src/stm8s_tim2.c:822: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM))
      000C9B 90 53 07         [24] 2190 	mov	dptr,#0x5307
      000C9E 75 F0 00         [24] 2191 	mov	b,#0x00
      000CA1 12r00r00         [24] 2192 	lcall	__gptrget
      000CA4 FE               [12] 2193 	mov	r6,a
      000CA5 74 8F            [12] 2194 	mov	a,#0x8f
      000CA7 5E               [12] 2195 	anl	a,r6
      000CA8 45*17            [12] 2196 	orl	a,_TIM2_SelectOCxM_PARM_2
      000CAA FE               [12] 2197 	mov	r6,a
      000CAB 90 53 07         [24] 2198 	mov	dptr,#0x5307
      000CAE 75 F0 00         [24] 2199 	mov	b,#0x00
      000CB1 EE               [12] 2200 	mov	a,r6
      000CB2 02r00r00         [24] 2201 	ljmp	__gptrput
      000CB5                       2202 00105$:
                                   2203 ;	../../src/stm8s_tim2.c:825: else if (TIM2_Channel == TIM2_CHANNEL_2)
      000CB5 BF 01 31         [24] 2204 	cjne	r7,#0x01,00102$
                                   2205 ;	../../src/stm8s_tim2.c:828: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000CB8 90 53 0A         [24] 2206 	mov	dptr,#0x530a
      000CBB 75 F0 00         [24] 2207 	mov	b,#0x00
      000CBE 12r00r00         [24] 2208 	lcall	__gptrget
      000CC1 FF               [12] 2209 	mov	r7,a
      000CC2 53 07 EF         [24] 2210 	anl	ar7,#0xef
      000CC5 90 53 0A         [24] 2211 	mov	dptr,#0x530a
      000CC8 75 F0 00         [24] 2212 	mov	b,#0x00
      000CCB EF               [12] 2213 	mov	a,r7
      000CCC 12r00r00         [24] 2214 	lcall	__gptrput
                                   2215 ;	../../src/stm8s_tim2.c:831: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM))
      000CCF 90 53 08         [24] 2216 	mov	dptr,#0x5308
      000CD2 75 F0 00         [24] 2217 	mov	b,#0x00
      000CD5 12r00r00         [24] 2218 	lcall	__gptrget
      000CD8 FF               [12] 2219 	mov	r7,a
      000CD9 74 8F            [12] 2220 	mov	a,#0x8f
      000CDB 5F               [12] 2221 	anl	a,r7
      000CDC 45*17            [12] 2222 	orl	a,_TIM2_SelectOCxM_PARM_2
      000CDE FF               [12] 2223 	mov	r7,a
      000CDF 90 53 08         [24] 2224 	mov	dptr,#0x5308
      000CE2 75 F0 00         [24] 2225 	mov	b,#0x00
      000CE5 EF               [12] 2226 	mov	a,r7
      000CE6 02r00r00         [24] 2227 	ljmp	__gptrput
      000CE9                       2228 00102$:
                                   2229 ;	../../src/stm8s_tim2.c:837: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3E);
      000CE9 90 53 0B         [24] 2230 	mov	dptr,#0x530b
      000CEC 75 F0 00         [24] 2231 	mov	b,#0x00
      000CEF 12r00r00         [24] 2232 	lcall	__gptrget
      000CF2 FF               [12] 2233 	mov	r7,a
      000CF3 53 07 FE         [24] 2234 	anl	ar7,#0xfe
      000CF6 90 53 0B         [24] 2235 	mov	dptr,#0x530b
      000CF9 75 F0 00         [24] 2236 	mov	b,#0x00
      000CFC EF               [12] 2237 	mov	a,r7
      000CFD 12r00r00         [24] 2238 	lcall	__gptrput
                                   2239 ;	../../src/stm8s_tim2.c:840: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM))
      000D00 90 53 09         [24] 2240 	mov	dptr,#0x5309
      000D03 75 F0 00         [24] 2241 	mov	b,#0x00
      000D06 12r00r00         [24] 2242 	lcall	__gptrget
      000D09 FF               [12] 2243 	mov	r7,a
      000D0A 74 8F            [12] 2244 	mov	a,#0x8f
      000D0C 5F               [12] 2245 	anl	a,r7
      000D0D 45*17            [12] 2246 	orl	a,_TIM2_SelectOCxM_PARM_2
      000D0F FF               [12] 2247 	mov	r7,a
      000D10 90 53 09         [24] 2248 	mov	dptr,#0x5309
      000D13 75 F0 00         [24] 2249 	mov	b,#0x00
      000D16 EF               [12] 2250 	mov	a,r7
      000D17 02r00r00         [24] 2251 	ljmp	__gptrput
                                   2252 ;------------------------------------------------------------
                                   2253 ;Allocation info for local variables in function 'TIM2_SetCounter'
                                   2254 ;------------------------------------------------------------
                                   2255 ;Counter                   Allocated to registers r6 r7 
                                   2256 ;------------------------------------------------------------
                                   2257 ;	../../src/stm8s_tim2.c:851: void TIM2_SetCounter(uint16_t Counter)
                                   2258 ;	-----------------------------------------
                                   2259 ;	 function TIM2_SetCounter
                                   2260 ;	-----------------------------------------
      000D1A                       2261 _TIM2_SetCounter:
      000D1A AE 82            [24] 2262 	mov	r6,dpl
      000D1C AF 83            [24] 2263 	mov	r7,dph
                                   2264 ;	../../src/stm8s_tim2.c:854: TIM2->CNTRH = (uint8_t)(Counter >> 8);
      000D1E 8F 05            [24] 2265 	mov	ar5,r7
      000D20 90 53 0C         [24] 2266 	mov	dptr,#0x530c
      000D23 75 F0 00         [24] 2267 	mov	b,#0x00
      000D26 ED               [12] 2268 	mov	a,r5
      000D27 12r00r00         [24] 2269 	lcall	__gptrput
                                   2270 ;	../../src/stm8s_tim2.c:855: TIM2->CNTRL = (uint8_t)(Counter);
      000D2A 90 53 0D         [24] 2271 	mov	dptr,#0x530d
      000D2D 75 F0 00         [24] 2272 	mov	b,#0x00
      000D30 EE               [12] 2273 	mov	a,r6
      000D31 02r00r00         [24] 2274 	ljmp	__gptrput
                                   2275 ;------------------------------------------------------------
                                   2276 ;Allocation info for local variables in function 'TIM2_SetAutoreload'
                                   2277 ;------------------------------------------------------------
                                   2278 ;Autoreload                Allocated to registers r6 r7 
                                   2279 ;------------------------------------------------------------
                                   2280 ;	../../src/stm8s_tim2.c:864: void TIM2_SetAutoreload(uint16_t Autoreload)
                                   2281 ;	-----------------------------------------
                                   2282 ;	 function TIM2_SetAutoreload
                                   2283 ;	-----------------------------------------
      000D34                       2284 _TIM2_SetAutoreload:
      000D34 AE 82            [24] 2285 	mov	r6,dpl
      000D36 AF 83            [24] 2286 	mov	r7,dph
                                   2287 ;	../../src/stm8s_tim2.c:867: TIM2->ARRH = (uint8_t)(Autoreload >> 8);
      000D38 8F 05            [24] 2288 	mov	ar5,r7
      000D3A 90 53 0F         [24] 2289 	mov	dptr,#0x530f
      000D3D 75 F0 00         [24] 2290 	mov	b,#0x00
      000D40 ED               [12] 2291 	mov	a,r5
      000D41 12r00r00         [24] 2292 	lcall	__gptrput
                                   2293 ;	../../src/stm8s_tim2.c:868: TIM2->ARRL = (uint8_t)(Autoreload);
      000D44 90 53 10         [24] 2294 	mov	dptr,#0x5310
      000D47 75 F0 00         [24] 2295 	mov	b,#0x00
      000D4A EE               [12] 2296 	mov	a,r6
      000D4B 02r00r00         [24] 2297 	ljmp	__gptrput
                                   2298 ;------------------------------------------------------------
                                   2299 ;Allocation info for local variables in function 'TIM2_SetCompare1'
                                   2300 ;------------------------------------------------------------
                                   2301 ;Compare1                  Allocated to registers r6 r7 
                                   2302 ;------------------------------------------------------------
                                   2303 ;	../../src/stm8s_tim2.c:877: void TIM2_SetCompare1(uint16_t Compare1)
                                   2304 ;	-----------------------------------------
                                   2305 ;	 function TIM2_SetCompare1
                                   2306 ;	-----------------------------------------
      000D4E                       2307 _TIM2_SetCompare1:
      000D4E AE 82            [24] 2308 	mov	r6,dpl
      000D50 AF 83            [24] 2309 	mov	r7,dph
                                   2310 ;	../../src/stm8s_tim2.c:880: TIM2->CCR1H = (uint8_t)(Compare1 >> 8);
      000D52 8F 05            [24] 2311 	mov	ar5,r7
      000D54 90 53 11         [24] 2312 	mov	dptr,#0x5311
      000D57 75 F0 00         [24] 2313 	mov	b,#0x00
      000D5A ED               [12] 2314 	mov	a,r5
      000D5B 12r00r00         [24] 2315 	lcall	__gptrput
                                   2316 ;	../../src/stm8s_tim2.c:881: TIM2->CCR1L = (uint8_t)(Compare1);
      000D5E 90 53 12         [24] 2317 	mov	dptr,#0x5312
      000D61 75 F0 00         [24] 2318 	mov	b,#0x00
      000D64 EE               [12] 2319 	mov	a,r6
      000D65 02r00r00         [24] 2320 	ljmp	__gptrput
                                   2321 ;------------------------------------------------------------
                                   2322 ;Allocation info for local variables in function 'TIM2_SetCompare2'
                                   2323 ;------------------------------------------------------------
                                   2324 ;Compare2                  Allocated to registers r6 r7 
                                   2325 ;------------------------------------------------------------
                                   2326 ;	../../src/stm8s_tim2.c:890: void TIM2_SetCompare2(uint16_t Compare2)
                                   2327 ;	-----------------------------------------
                                   2328 ;	 function TIM2_SetCompare2
                                   2329 ;	-----------------------------------------
      000D68                       2330 _TIM2_SetCompare2:
      000D68 AE 82            [24] 2331 	mov	r6,dpl
      000D6A AF 83            [24] 2332 	mov	r7,dph
                                   2333 ;	../../src/stm8s_tim2.c:893: TIM2->CCR2H = (uint8_t)(Compare2 >> 8);
      000D6C 8F 05            [24] 2334 	mov	ar5,r7
      000D6E 90 53 13         [24] 2335 	mov	dptr,#0x5313
      000D71 75 F0 00         [24] 2336 	mov	b,#0x00
      000D74 ED               [12] 2337 	mov	a,r5
      000D75 12r00r00         [24] 2338 	lcall	__gptrput
                                   2339 ;	../../src/stm8s_tim2.c:894: TIM2->CCR2L = (uint8_t)(Compare2);
      000D78 90 53 14         [24] 2340 	mov	dptr,#0x5314
      000D7B 75 F0 00         [24] 2341 	mov	b,#0x00
      000D7E EE               [12] 2342 	mov	a,r6
      000D7F 02r00r00         [24] 2343 	ljmp	__gptrput
                                   2344 ;------------------------------------------------------------
                                   2345 ;Allocation info for local variables in function 'TIM2_SetCompare3'
                                   2346 ;------------------------------------------------------------
                                   2347 ;Compare3                  Allocated to registers r6 r7 
                                   2348 ;------------------------------------------------------------
                                   2349 ;	../../src/stm8s_tim2.c:903: void TIM2_SetCompare3(uint16_t Compare3)
                                   2350 ;	-----------------------------------------
                                   2351 ;	 function TIM2_SetCompare3
                                   2352 ;	-----------------------------------------
      000D82                       2353 _TIM2_SetCompare3:
      000D82 AE 82            [24] 2354 	mov	r6,dpl
      000D84 AF 83            [24] 2355 	mov	r7,dph
                                   2356 ;	../../src/stm8s_tim2.c:906: TIM2->CCR3H = (uint8_t)(Compare3 >> 8);
      000D86 8F 05            [24] 2357 	mov	ar5,r7
      000D88 90 53 15         [24] 2358 	mov	dptr,#0x5315
      000D8B 75 F0 00         [24] 2359 	mov	b,#0x00
      000D8E ED               [12] 2360 	mov	a,r5
      000D8F 12r00r00         [24] 2361 	lcall	__gptrput
                                   2362 ;	../../src/stm8s_tim2.c:907: TIM2->CCR3L = (uint8_t)(Compare3);
      000D92 90 53 16         [24] 2363 	mov	dptr,#0x5316
      000D95 75 F0 00         [24] 2364 	mov	b,#0x00
      000D98 EE               [12] 2365 	mov	a,r6
      000D99 02r00r00         [24] 2366 	ljmp	__gptrput
                                   2367 ;------------------------------------------------------------
                                   2368 ;Allocation info for local variables in function 'TIM2_SetIC1Prescaler'
                                   2369 ;------------------------------------------------------------
                                   2370 ;TIM2_IC1Prescaler         Allocated to registers r7 
                                   2371 ;------------------------------------------------------------
                                   2372 ;	../../src/stm8s_tim2.c:920: void TIM2_SetIC1Prescaler(TIM2_ICPSC_TypeDef TIM2_IC1Prescaler)
                                   2373 ;	-----------------------------------------
                                   2374 ;	 function TIM2_SetIC1Prescaler
                                   2375 ;	-----------------------------------------
      000D9C                       2376 _TIM2_SetIC1Prescaler:
                                   2377 ;	../../src/stm8s_tim2.c:923: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC1Prescaler));
      000D9C E5 82            [12] 2378 	mov	a,dpl
      000D9E FF               [12] 2379 	mov	r7,a
      000D9F 60 27            [24] 2380 	jz	00104$
      000DA1 BF 04 02         [24] 2381 	cjne	r7,#0x04,00127$
      000DA4 80 22            [24] 2382 	sjmp	00104$
      000DA6                       2383 00127$:
      000DA6 BF 08 02         [24] 2384 	cjne	r7,#0x08,00128$
      000DA9 80 1D            [24] 2385 	sjmp	00104$
      000DAB                       2386 00128$:
      000DAB BF 0C 02         [24] 2387 	cjne	r7,#0x0c,00129$
      000DAE 80 18            [24] 2388 	sjmp	00104$
      000DB0                       2389 00129$:
      000DB0 75*00 9B         [24] 2390 	mov	_assert_failed_PARM_2,#0x9b
      000DB3 75*01 03         [24] 2391 	mov	(_assert_failed_PARM_2 + 1),#0x03
      000DB6 E4               [12] 2392 	clr	a
      000DB7 F5*02            [12] 2393 	mov	(_assert_failed_PARM_2 + 2),a
      000DB9 F5*03            [12] 2394 	mov	(_assert_failed_PARM_2 + 3),a
      000DBB 90r00r00         [24] 2395 	mov	dptr,#___str_0
      000DBE 75 F0 80         [24] 2396 	mov	b,#0x80
      000DC1 C0 07            [24] 2397 	push	ar7
      000DC3 12r00r00         [24] 2398 	lcall	_assert_failed
      000DC6 D0 07            [24] 2399 	pop	ar7
      000DC8                       2400 00104$:
                                   2401 ;	../../src/stm8s_tim2.c:926: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      000DC8 90 53 07         [24] 2402 	mov	dptr,#0x5307
      000DCB 75 F0 00         [24] 2403 	mov	b,#0x00
      000DCE 12r00r00         [24] 2404 	lcall	__gptrget
      000DD1 FE               [12] 2405 	mov	r6,a
      000DD2 74 F3            [12] 2406 	mov	a,#0xf3
      000DD4 5E               [12] 2407 	anl	a,r6
      000DD5 42 07            [12] 2408 	orl	ar7,a
      000DD7 90 53 07         [24] 2409 	mov	dptr,#0x5307
      000DDA 75 F0 00         [24] 2410 	mov	b,#0x00
      000DDD EF               [12] 2411 	mov	a,r7
      000DDE 02r00r00         [24] 2412 	ljmp	__gptrput
                                   2413 ;------------------------------------------------------------
                                   2414 ;Allocation info for local variables in function 'TIM2_SetIC2Prescaler'
                                   2415 ;------------------------------------------------------------
                                   2416 ;TIM2_IC2Prescaler         Allocated to registers r7 
                                   2417 ;------------------------------------------------------------
                                   2418 ;	../../src/stm8s_tim2.c:940: void TIM2_SetIC2Prescaler(TIM2_ICPSC_TypeDef TIM2_IC2Prescaler)
                                   2419 ;	-----------------------------------------
                                   2420 ;	 function TIM2_SetIC2Prescaler
                                   2421 ;	-----------------------------------------
      000DE1                       2422 _TIM2_SetIC2Prescaler:
                                   2423 ;	../../src/stm8s_tim2.c:943: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC2Prescaler));
      000DE1 E5 82            [12] 2424 	mov	a,dpl
      000DE3 FF               [12] 2425 	mov	r7,a
      000DE4 60 27            [24] 2426 	jz	00104$
      000DE6 BF 04 02         [24] 2427 	cjne	r7,#0x04,00127$
      000DE9 80 22            [24] 2428 	sjmp	00104$
      000DEB                       2429 00127$:
      000DEB BF 08 02         [24] 2430 	cjne	r7,#0x08,00128$
      000DEE 80 1D            [24] 2431 	sjmp	00104$
      000DF0                       2432 00128$:
      000DF0 BF 0C 02         [24] 2433 	cjne	r7,#0x0c,00129$
      000DF3 80 18            [24] 2434 	sjmp	00104$
      000DF5                       2435 00129$:
      000DF5 75*00 AF         [24] 2436 	mov	_assert_failed_PARM_2,#0xaf
      000DF8 75*01 03         [24] 2437 	mov	(_assert_failed_PARM_2 + 1),#0x03
      000DFB E4               [12] 2438 	clr	a
      000DFC F5*02            [12] 2439 	mov	(_assert_failed_PARM_2 + 2),a
      000DFE F5*03            [12] 2440 	mov	(_assert_failed_PARM_2 + 3),a
      000E00 90r00r00         [24] 2441 	mov	dptr,#___str_0
      000E03 75 F0 80         [24] 2442 	mov	b,#0x80
      000E06 C0 07            [24] 2443 	push	ar7
      000E08 12r00r00         [24] 2444 	lcall	_assert_failed
      000E0B D0 07            [24] 2445 	pop	ar7
      000E0D                       2446 00104$:
                                   2447 ;	../../src/stm8s_tim2.c:946: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      000E0D 90 53 08         [24] 2448 	mov	dptr,#0x5308
      000E10 75 F0 00         [24] 2449 	mov	b,#0x00
      000E13 12r00r00         [24] 2450 	lcall	__gptrget
      000E16 FE               [12] 2451 	mov	r6,a
      000E17 74 F3            [12] 2452 	mov	a,#0xf3
      000E19 5E               [12] 2453 	anl	a,r6
      000E1A 42 07            [12] 2454 	orl	ar7,a
      000E1C 90 53 08         [24] 2455 	mov	dptr,#0x5308
      000E1F 75 F0 00         [24] 2456 	mov	b,#0x00
      000E22 EF               [12] 2457 	mov	a,r7
      000E23 02r00r00         [24] 2458 	ljmp	__gptrput
                                   2459 ;------------------------------------------------------------
                                   2460 ;Allocation info for local variables in function 'TIM2_SetIC3Prescaler'
                                   2461 ;------------------------------------------------------------
                                   2462 ;TIM2_IC3Prescaler         Allocated to registers r7 
                                   2463 ;------------------------------------------------------------
                                   2464 ;	../../src/stm8s_tim2.c:960: void TIM2_SetIC3Prescaler(TIM2_ICPSC_TypeDef TIM2_IC3Prescaler)
                                   2465 ;	-----------------------------------------
                                   2466 ;	 function TIM2_SetIC3Prescaler
                                   2467 ;	-----------------------------------------
      000E26                       2468 _TIM2_SetIC3Prescaler:
                                   2469 ;	../../src/stm8s_tim2.c:964: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC3Prescaler));
      000E26 E5 82            [12] 2470 	mov	a,dpl
      000E28 FF               [12] 2471 	mov	r7,a
      000E29 60 27            [24] 2472 	jz	00104$
      000E2B BF 04 02         [24] 2473 	cjne	r7,#0x04,00127$
      000E2E 80 22            [24] 2474 	sjmp	00104$
      000E30                       2475 00127$:
      000E30 BF 08 02         [24] 2476 	cjne	r7,#0x08,00128$
      000E33 80 1D            [24] 2477 	sjmp	00104$
      000E35                       2478 00128$:
      000E35 BF 0C 02         [24] 2479 	cjne	r7,#0x0c,00129$
      000E38 80 18            [24] 2480 	sjmp	00104$
      000E3A                       2481 00129$:
      000E3A 75*00 C4         [24] 2482 	mov	_assert_failed_PARM_2,#0xc4
      000E3D 75*01 03         [24] 2483 	mov	(_assert_failed_PARM_2 + 1),#0x03
      000E40 E4               [12] 2484 	clr	a
      000E41 F5*02            [12] 2485 	mov	(_assert_failed_PARM_2 + 2),a
      000E43 F5*03            [12] 2486 	mov	(_assert_failed_PARM_2 + 3),a
      000E45 90r00r00         [24] 2487 	mov	dptr,#___str_0
      000E48 75 F0 80         [24] 2488 	mov	b,#0x80
      000E4B C0 07            [24] 2489 	push	ar7
      000E4D 12r00r00         [24] 2490 	lcall	_assert_failed
      000E50 D0 07            [24] 2491 	pop	ar7
      000E52                       2492 00104$:
                                   2493 ;	../../src/stm8s_tim2.c:966: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      000E52 90 53 09         [24] 2494 	mov	dptr,#0x5309
      000E55 75 F0 00         [24] 2495 	mov	b,#0x00
      000E58 12r00r00         [24] 2496 	lcall	__gptrget
      000E5B FE               [12] 2497 	mov	r6,a
      000E5C 74 F3            [12] 2498 	mov	a,#0xf3
      000E5E 5E               [12] 2499 	anl	a,r6
      000E5F 42 07            [12] 2500 	orl	ar7,a
      000E61 90 53 09         [24] 2501 	mov	dptr,#0x5309
      000E64 75 F0 00         [24] 2502 	mov	b,#0x00
      000E67 EF               [12] 2503 	mov	a,r7
      000E68 02r00r00         [24] 2504 	ljmp	__gptrput
                                   2505 ;------------------------------------------------------------
                                   2506 ;Allocation info for local variables in function 'TIM2_GetCapture1'
                                   2507 ;------------------------------------------------------------
                                   2508 ;tmpccr1                   Allocated to registers r6 r5 
                                   2509 ;tmpccr1l                  Allocated to registers r6 
                                   2510 ;tmpccr1h                  Allocated to registers r7 
                                   2511 ;------------------------------------------------------------
                                   2512 ;	../../src/stm8s_tim2.c:975: uint16_t TIM2_GetCapture1(void)
                                   2513 ;	-----------------------------------------
                                   2514 ;	 function TIM2_GetCapture1
                                   2515 ;	-----------------------------------------
      000E6B                       2516 _TIM2_GetCapture1:
                                   2517 ;	../../src/stm8s_tim2.c:981: tmpccr1h = TIM2->CCR1H;
      000E6B 90 53 11         [24] 2518 	mov	dptr,#0x5311
      000E6E 75 F0 00         [24] 2519 	mov	b,#0x00
      000E71 12r00r00         [24] 2520 	lcall	__gptrget
      000E74 FF               [12] 2521 	mov	r7,a
                                   2522 ;	../../src/stm8s_tim2.c:982: tmpccr1l = TIM2->CCR1L;
      000E75 90 53 12         [24] 2523 	mov	dptr,#0x5312
      000E78 75 F0 00         [24] 2524 	mov	b,#0x00
      000E7B 12r00r00         [24] 2525 	lcall	__gptrget
      000E7E FE               [12] 2526 	mov	r6,a
                                   2527 ;	../../src/stm8s_tim2.c:984: tmpccr1 = (uint16_t)(tmpccr1l);
      000E7F 7D 00            [12] 2528 	mov	r5,#0x00
                                   2529 ;	../../src/stm8s_tim2.c:985: tmpccr1 |= (uint16_t)((uint16_t)tmpccr1h << 8);
      000E81 8F 04            [24] 2530 	mov	ar4,r7
      000E83 E4               [12] 2531 	clr	a
      000E84 42 06            [12] 2532 	orl	ar6,a
      000E86 EC               [12] 2533 	mov	a,r4
      000E87 42 05            [12] 2534 	orl	ar5,a
                                   2535 ;	../../src/stm8s_tim2.c:987: return (uint16_t)tmpccr1;
      000E89 8E 82            [24] 2536 	mov	dpl,r6
      000E8B 8D 83            [24] 2537 	mov	dph,r5
      000E8D 22               [24] 2538 	ret
                                   2539 ;------------------------------------------------------------
                                   2540 ;Allocation info for local variables in function 'TIM2_GetCapture2'
                                   2541 ;------------------------------------------------------------
                                   2542 ;tmpccr2                   Allocated to registers r6 r5 
                                   2543 ;tmpccr2l                  Allocated to registers r6 
                                   2544 ;tmpccr2h                  Allocated to registers r7 
                                   2545 ;------------------------------------------------------------
                                   2546 ;	../../src/stm8s_tim2.c:995: uint16_t TIM2_GetCapture2(void)
                                   2547 ;	-----------------------------------------
                                   2548 ;	 function TIM2_GetCapture2
                                   2549 ;	-----------------------------------------
      000E8E                       2550 _TIM2_GetCapture2:
                                   2551 ;	../../src/stm8s_tim2.c:1001: tmpccr2h = TIM2->CCR2H;
      000E8E 90 53 13         [24] 2552 	mov	dptr,#0x5313
      000E91 75 F0 00         [24] 2553 	mov	b,#0x00
      000E94 12r00r00         [24] 2554 	lcall	__gptrget
      000E97 FF               [12] 2555 	mov	r7,a
                                   2556 ;	../../src/stm8s_tim2.c:1002: tmpccr2l = TIM2->CCR2L;
      000E98 90 53 14         [24] 2557 	mov	dptr,#0x5314
      000E9B 75 F0 00         [24] 2558 	mov	b,#0x00
      000E9E 12r00r00         [24] 2559 	lcall	__gptrget
      000EA1 FE               [12] 2560 	mov	r6,a
                                   2561 ;	../../src/stm8s_tim2.c:1004: tmpccr2 = (uint16_t)(tmpccr2l);
      000EA2 7D 00            [12] 2562 	mov	r5,#0x00
                                   2563 ;	../../src/stm8s_tim2.c:1005: tmpccr2 |= (uint16_t)((uint16_t)tmpccr2h << 8);
      000EA4 8F 04            [24] 2564 	mov	ar4,r7
      000EA6 E4               [12] 2565 	clr	a
      000EA7 42 06            [12] 2566 	orl	ar6,a
      000EA9 EC               [12] 2567 	mov	a,r4
      000EAA 42 05            [12] 2568 	orl	ar5,a
                                   2569 ;	../../src/stm8s_tim2.c:1007: return (uint16_t)tmpccr2;
      000EAC 8E 82            [24] 2570 	mov	dpl,r6
      000EAE 8D 83            [24] 2571 	mov	dph,r5
      000EB0 22               [24] 2572 	ret
                                   2573 ;------------------------------------------------------------
                                   2574 ;Allocation info for local variables in function 'TIM2_GetCapture3'
                                   2575 ;------------------------------------------------------------
                                   2576 ;tmpccr3                   Allocated to registers r6 r5 
                                   2577 ;tmpccr3l                  Allocated to registers r6 
                                   2578 ;tmpccr3h                  Allocated to registers r7 
                                   2579 ;------------------------------------------------------------
                                   2580 ;	../../src/stm8s_tim2.c:1015: uint16_t TIM2_GetCapture3(void)
                                   2581 ;	-----------------------------------------
                                   2582 ;	 function TIM2_GetCapture3
                                   2583 ;	-----------------------------------------
      000EB1                       2584 _TIM2_GetCapture3:
                                   2585 ;	../../src/stm8s_tim2.c:1021: tmpccr3h = TIM2->CCR3H;
      000EB1 90 53 15         [24] 2586 	mov	dptr,#0x5315
      000EB4 75 F0 00         [24] 2587 	mov	b,#0x00
      000EB7 12r00r00         [24] 2588 	lcall	__gptrget
      000EBA FF               [12] 2589 	mov	r7,a
                                   2590 ;	../../src/stm8s_tim2.c:1022: tmpccr3l = TIM2->CCR3L;
      000EBB 90 53 16         [24] 2591 	mov	dptr,#0x5316
      000EBE 75 F0 00         [24] 2592 	mov	b,#0x00
      000EC1 12r00r00         [24] 2593 	lcall	__gptrget
      000EC4 FE               [12] 2594 	mov	r6,a
                                   2595 ;	../../src/stm8s_tim2.c:1024: tmpccr3 = (uint16_t)(tmpccr3l);
      000EC5 7D 00            [12] 2596 	mov	r5,#0x00
                                   2597 ;	../../src/stm8s_tim2.c:1025: tmpccr3 |= (uint16_t)((uint16_t)tmpccr3h << 8);
      000EC7 8F 04            [24] 2598 	mov	ar4,r7
      000EC9 E4               [12] 2599 	clr	a
      000ECA 42 06            [12] 2600 	orl	ar6,a
      000ECC EC               [12] 2601 	mov	a,r4
      000ECD 42 05            [12] 2602 	orl	ar5,a
                                   2603 ;	../../src/stm8s_tim2.c:1027: return (uint16_t)tmpccr3;
      000ECF 8E 82            [24] 2604 	mov	dpl,r6
      000ED1 8D 83            [24] 2605 	mov	dph,r5
      000ED3 22               [24] 2606 	ret
                                   2607 ;------------------------------------------------------------
                                   2608 ;Allocation info for local variables in function 'TIM2_GetCounter'
                                   2609 ;------------------------------------------------------------
                                   2610 ;tmpcntr                   Allocated to registers r7 r6 
                                   2611 ;------------------------------------------------------------
                                   2612 ;	../../src/stm8s_tim2.c:1035: uint16_t TIM2_GetCounter(void)
                                   2613 ;	-----------------------------------------
                                   2614 ;	 function TIM2_GetCounter
                                   2615 ;	-----------------------------------------
      000ED4                       2616 _TIM2_GetCounter:
                                   2617 ;	../../src/stm8s_tim2.c:1039: tmpcntr =  ((uint16_t)TIM2->CNTRH << 8);
      000ED4 90 53 0C         [24] 2618 	mov	dptr,#0x530c
      000ED7 75 F0 00         [24] 2619 	mov	b,#0x00
      000EDA 12r00r00         [24] 2620 	lcall	__gptrget
      000EDD FE               [12] 2621 	mov	r6,a
      000EDE 7F 00            [12] 2622 	mov	r7,#0x00
                                   2623 ;	../../src/stm8s_tim2.c:1041: return (uint16_t)( tmpcntr| (uint16_t)(TIM2->CNTRL));
      000EE0 90 53 0D         [24] 2624 	mov	dptr,#0x530d
      000EE3 75 F0 00         [24] 2625 	mov	b,#0x00
      000EE6 12r00r00         [24] 2626 	lcall	__gptrget
      000EE9 7C 00            [12] 2627 	mov	r4,#0x00
      000EEB 4F               [12] 2628 	orl	a,r7
      000EEC F5 82            [12] 2629 	mov	dpl,a
      000EEE EC               [12] 2630 	mov	a,r4
      000EEF 4E               [12] 2631 	orl	a,r6
      000EF0 F5 83            [12] 2632 	mov	dph,a
      000EF2 22               [24] 2633 	ret
                                   2634 ;------------------------------------------------------------
                                   2635 ;Allocation info for local variables in function 'TIM2_GetPrescaler'
                                   2636 ;------------------------------------------------------------
                                   2637 ;	../../src/stm8s_tim2.c:1049: TIM2_Prescaler_TypeDef TIM2_GetPrescaler(void)
                                   2638 ;	-----------------------------------------
                                   2639 ;	 function TIM2_GetPrescaler
                                   2640 ;	-----------------------------------------
      000EF3                       2641 _TIM2_GetPrescaler:
                                   2642 ;	../../src/stm8s_tim2.c:1052: return (TIM2_Prescaler_TypeDef)(TIM2->PSCR);
      000EF3 90 53 0E         [24] 2643 	mov	dptr,#0x530e
      000EF6 75 F0 00         [24] 2644 	mov	b,#0x00
      000EF9 12r00r00         [24] 2645 	lcall	__gptrget
      000EFC F5 82            [12] 2646 	mov	dpl,a
      000EFE 22               [24] 2647 	ret
                                   2648 ;------------------------------------------------------------
                                   2649 ;Allocation info for local variables in function 'TIM2_GetFlagStatus'
                                   2650 ;------------------------------------------------------------
                                   2651 ;TIM2_FLAG                 Allocated to registers r6 r7 
                                   2652 ;bitstatus                 Allocated to registers r7 
                                   2653 ;tim2_flag_l               Allocated to registers r5 
                                   2654 ;tim2_flag_h               Allocated to registers r6 
                                   2655 ;------------------------------------------------------------
                                   2656 ;	../../src/stm8s_tim2.c:1068: FlagStatus TIM2_GetFlagStatus(TIM2_FLAG_TypeDef TIM2_FLAG)
                                   2657 ;	-----------------------------------------
                                   2658 ;	 function TIM2_GetFlagStatus
                                   2659 ;	-----------------------------------------
      000EFF                       2660 _TIM2_GetFlagStatus:
      000EFF AE 82            [24] 2661 	mov	r6,dpl
      000F01 AF 83            [24] 2662 	mov	r7,dph
                                   2663 ;	../../src/stm8s_tim2.c:1074: assert_param(IS_TIM2_GET_FLAG_OK(TIM2_FLAG));
      000F03 BE 01 05         [24] 2664 	cjne	r6,#0x01,00150$
      000F06 BF 00 02         [24] 2665 	cjne	r7,#0x00,00150$
      000F09 80 4C            [24] 2666 	sjmp	00107$
      000F0B                       2667 00150$:
      000F0B BE 02 05         [24] 2668 	cjne	r6,#0x02,00151$
      000F0E BF 00 02         [24] 2669 	cjne	r7,#0x00,00151$
      000F11 80 44            [24] 2670 	sjmp	00107$
      000F13                       2671 00151$:
      000F13 BE 04 05         [24] 2672 	cjne	r6,#0x04,00152$
      000F16 BF 00 02         [24] 2673 	cjne	r7,#0x00,00152$
      000F19 80 3C            [24] 2674 	sjmp	00107$
      000F1B                       2675 00152$:
      000F1B BE 08 05         [24] 2676 	cjne	r6,#0x08,00153$
      000F1E BF 00 02         [24] 2677 	cjne	r7,#0x00,00153$
      000F21 80 34            [24] 2678 	sjmp	00107$
      000F23                       2679 00153$:
      000F23 BE 00 05         [24] 2680 	cjne	r6,#0x00,00154$
      000F26 BF 02 02         [24] 2681 	cjne	r7,#0x02,00154$
      000F29 80 2C            [24] 2682 	sjmp	00107$
      000F2B                       2683 00154$:
      000F2B BE 00 05         [24] 2684 	cjne	r6,#0x00,00155$
      000F2E BF 04 02         [24] 2685 	cjne	r7,#0x04,00155$
      000F31 80 24            [24] 2686 	sjmp	00107$
      000F33                       2687 00155$:
      000F33 BE 00 05         [24] 2688 	cjne	r6,#0x00,00156$
      000F36 BF 08 02         [24] 2689 	cjne	r7,#0x08,00156$
      000F39 80 1C            [24] 2690 	sjmp	00107$
      000F3B                       2691 00156$:
      000F3B 75*00 32         [24] 2692 	mov	_assert_failed_PARM_2,#0x32
      000F3E 75*01 04         [24] 2693 	mov	(_assert_failed_PARM_2 + 1),#0x04
      000F41 E4               [12] 2694 	clr	a
      000F42 F5*02            [12] 2695 	mov	(_assert_failed_PARM_2 + 2),a
      000F44 F5*03            [12] 2696 	mov	(_assert_failed_PARM_2 + 3),a
      000F46 90r00r00         [24] 2697 	mov	dptr,#___str_0
      000F49 75 F0 80         [24] 2698 	mov	b,#0x80
      000F4C C0 07            [24] 2699 	push	ar7
      000F4E C0 06            [24] 2700 	push	ar6
      000F50 12r00r00         [24] 2701 	lcall	_assert_failed
      000F53 D0 06            [24] 2702 	pop	ar6
      000F55 D0 07            [24] 2703 	pop	ar7
      000F57                       2704 00107$:
                                   2705 ;	../../src/stm8s_tim2.c:1076: tim2_flag_l = (uint8_t)(TIM2->SR1 & (uint8_t)TIM2_FLAG);
      000F57 90 53 04         [24] 2706 	mov	dptr,#0x5304
      000F5A 75 F0 00         [24] 2707 	mov	b,#0x00
      000F5D 12r00r00         [24] 2708 	lcall	__gptrget
      000F60 FD               [12] 2709 	mov	r5,a
      000F61 8E 04            [24] 2710 	mov	ar4,r6
      000F63 EC               [12] 2711 	mov	a,r4
      000F64 52 05            [12] 2712 	anl	ar5,a
                                   2713 ;	../../src/stm8s_tim2.c:1077: tim2_flag_h = (uint8_t)((uint16_t)TIM2_FLAG >> 8);
      000F66 8F 06            [24] 2714 	mov	ar6,r7
                                   2715 ;	../../src/stm8s_tim2.c:1079: if ((tim2_flag_l | (uint8_t)(TIM2->SR2 & tim2_flag_h)) != (uint8_t)RESET )
      000F68 90 53 05         [24] 2716 	mov	dptr,#0x5305
      000F6B 75 F0 00         [24] 2717 	mov	b,#0x00
      000F6E 12r00r00         [24] 2718 	lcall	__gptrget
      000F71 FF               [12] 2719 	mov	r7,a
      000F72 EE               [12] 2720 	mov	a,r6
      000F73 5F               [12] 2721 	anl	a,r7
      000F74 4D               [12] 2722 	orl	a,r5
      000F75 60 04            [24] 2723 	jz	00102$
                                   2724 ;	../../src/stm8s_tim2.c:1081: bitstatus = SET;
      000F77 7F 01            [12] 2725 	mov	r7,#0x01
      000F79 80 02            [24] 2726 	sjmp	00103$
      000F7B                       2727 00102$:
                                   2728 ;	../../src/stm8s_tim2.c:1085: bitstatus = RESET;
      000F7B 7F 00            [12] 2729 	mov	r7,#0x00
      000F7D                       2730 00103$:
                                   2731 ;	../../src/stm8s_tim2.c:1087: return (FlagStatus)bitstatus;
      000F7D 8F 82            [24] 2732 	mov	dpl,r7
      000F7F 22               [24] 2733 	ret
                                   2734 ;------------------------------------------------------------
                                   2735 ;Allocation info for local variables in function 'TIM2_ClearFlag'
                                   2736 ;------------------------------------------------------------
                                   2737 ;TIM2_FLAG                 Allocated to registers r6 r7 
                                   2738 ;------------------------------------------------------------
                                   2739 ;	../../src/stm8s_tim2.c:1103: void TIM2_ClearFlag(TIM2_FLAG_TypeDef TIM2_FLAG)
                                   2740 ;	-----------------------------------------
                                   2741 ;	 function TIM2_ClearFlag
                                   2742 ;	-----------------------------------------
      000F80                       2743 _TIM2_ClearFlag:
      000F80 AE 82            [24] 2744 	mov	r6,dpl
      000F82 AF 83            [24] 2745 	mov	r7,dph
                                   2746 ;	../../src/stm8s_tim2.c:1106: assert_param(IS_TIM2_CLEAR_FLAG_OK(TIM2_FLAG));
      000F84 74 F0            [12] 2747 	mov	a,#0xf0
      000F86 5E               [12] 2748 	anl	a,r6
      000F87 FC               [12] 2749 	mov	r4,a
      000F88 74 F1            [12] 2750 	mov	a,#0xf1
      000F8A 5F               [12] 2751 	anl	a,r7
      000F8B FD               [12] 2752 	mov	r5,a
      000F8C 4C               [12] 2753 	orl	a,r4
      000F8D 70 04            [24] 2754 	jnz	00103$
      000F8F EE               [12] 2755 	mov	a,r6
      000F90 4F               [12] 2756 	orl	a,r7
      000F91 70 1C            [24] 2757 	jnz	00104$
      000F93                       2758 00103$:
      000F93 75*00 52         [24] 2759 	mov	_assert_failed_PARM_2,#0x52
      000F96 75*01 04         [24] 2760 	mov	(_assert_failed_PARM_2 + 1),#0x04
      000F99 E4               [12] 2761 	clr	a
      000F9A F5*02            [12] 2762 	mov	(_assert_failed_PARM_2 + 2),a
      000F9C F5*03            [12] 2763 	mov	(_assert_failed_PARM_2 + 3),a
      000F9E 90r00r00         [24] 2764 	mov	dptr,#___str_0
      000FA1 75 F0 80         [24] 2765 	mov	b,#0x80
      000FA4 C0 07            [24] 2766 	push	ar7
      000FA6 C0 06            [24] 2767 	push	ar6
      000FA8 12r00r00         [24] 2768 	lcall	_assert_failed
      000FAB D0 06            [24] 2769 	pop	ar6
      000FAD D0 07            [24] 2770 	pop	ar7
      000FAF                       2771 00104$:
                                   2772 ;	../../src/stm8s_tim2.c:1109: TIM2->SR1 = (uint8_t)(~((uint8_t)(TIM2_FLAG)));
      000FAF 8E 05            [24] 2773 	mov	ar5,r6
      000FB1 ED               [12] 2774 	mov	a,r5
      000FB2 F4               [12] 2775 	cpl	a
      000FB3 FD               [12] 2776 	mov	r5,a
      000FB4 90 53 04         [24] 2777 	mov	dptr,#0x5304
      000FB7 75 F0 00         [24] 2778 	mov	b,#0x00
      000FBA ED               [12] 2779 	mov	a,r5
      000FBB 12r00r00         [24] 2780 	lcall	__gptrput
                                   2781 ;	../../src/stm8s_tim2.c:1111: TIM2->SR2 = (uint8_t)(~((uint8_t)(TIM2_FLAG >> 8))); // [Roshan, 2015-Nov-09]
      000FBE 8F 06            [24] 2782 	mov	ar6,r7
      000FC0 EE               [12] 2783 	mov	a,r6
      000FC1 F4               [12] 2784 	cpl	a
      000FC2 FE               [12] 2785 	mov	r6,a
      000FC3 90 53 05         [24] 2786 	mov	dptr,#0x5305
      000FC6 75 F0 00         [24] 2787 	mov	b,#0x00
      000FC9 EE               [12] 2788 	mov	a,r6
      000FCA 02r00r00         [24] 2789 	ljmp	__gptrput
                                   2790 ;------------------------------------------------------------
                                   2791 ;Allocation info for local variables in function 'TIM2_GetITStatus'
                                   2792 ;------------------------------------------------------------
                                   2793 ;TIM2_IT                   Allocated to registers r7 
                                   2794 ;bitstatus                 Allocated to registers r7 
                                   2795 ;TIM2_itStatus             Allocated to registers r6 
                                   2796 ;TIM2_itEnable             Allocated to registers r7 
                                   2797 ;------------------------------------------------------------
                                   2798 ;	../../src/stm8s_tim2.c:1124: ITStatus TIM2_GetITStatus(TIM2_IT_TypeDef TIM2_IT)
                                   2799 ;	-----------------------------------------
                                   2800 ;	 function TIM2_GetITStatus
                                   2801 ;	-----------------------------------------
      000FCD                       2802 _TIM2_GetITStatus:
      000FCD AF 82            [24] 2803 	mov	r7,dpl
                                   2804 ;	../../src/stm8s_tim2.c:1130: assert_param(IS_TIM2_GET_IT_OK(TIM2_IT));
      000FCF BF 01 02         [24] 2805 	cjne	r7,#0x01,00136$
      000FD2 80 27            [24] 2806 	sjmp	00108$
      000FD4                       2807 00136$:
      000FD4 BF 02 02         [24] 2808 	cjne	r7,#0x02,00137$
      000FD7 80 22            [24] 2809 	sjmp	00108$
      000FD9                       2810 00137$:
      000FD9 BF 04 02         [24] 2811 	cjne	r7,#0x04,00138$
      000FDC 80 1D            [24] 2812 	sjmp	00108$
      000FDE                       2813 00138$:
      000FDE BF 08 02         [24] 2814 	cjne	r7,#0x08,00139$
      000FE1 80 18            [24] 2815 	sjmp	00108$
      000FE3                       2816 00139$:
      000FE3 75*00 6A         [24] 2817 	mov	_assert_failed_PARM_2,#0x6a
      000FE6 75*01 04         [24] 2818 	mov	(_assert_failed_PARM_2 + 1),#0x04
      000FE9 E4               [12] 2819 	clr	a
      000FEA F5*02            [12] 2820 	mov	(_assert_failed_PARM_2 + 2),a
      000FEC F5*03            [12] 2821 	mov	(_assert_failed_PARM_2 + 3),a
      000FEE 90r00r00         [24] 2822 	mov	dptr,#___str_0
      000FF1 75 F0 80         [24] 2823 	mov	b,#0x80
      000FF4 C0 07            [24] 2824 	push	ar7
      000FF6 12r00r00         [24] 2825 	lcall	_assert_failed
      000FF9 D0 07            [24] 2826 	pop	ar7
      000FFB                       2827 00108$:
                                   2828 ;	../../src/stm8s_tim2.c:1132: TIM2_itStatus = (uint8_t)(TIM2->SR1 & TIM2_IT);
      000FFB 90 53 04         [24] 2829 	mov	dptr,#0x5304
      000FFE 75 F0 00         [24] 2830 	mov	b,#0x00
      001001 12r00r00         [24] 2831 	lcall	__gptrget
      001004 FE               [12] 2832 	mov	r6,a
      001005 EF               [12] 2833 	mov	a,r7
      001006 52 06            [12] 2834 	anl	ar6,a
                                   2835 ;	../../src/stm8s_tim2.c:1134: TIM2_itEnable = (uint8_t)(TIM2->IER & TIM2_IT);
      001008 90 53 03         [24] 2836 	mov	dptr,#0x5303
      00100B 75 F0 00         [24] 2837 	mov	b,#0x00
      00100E 12r00r00         [24] 2838 	lcall	__gptrget
      001011 FD               [12] 2839 	mov	r5,a
      001012 52 07            [12] 2840 	anl	ar7,a
                                   2841 ;	../../src/stm8s_tim2.c:1136: if ((TIM2_itStatus != (uint8_t)RESET ) && (TIM2_itEnable != (uint8_t)RESET ))
      001014 EE               [12] 2842 	mov	a,r6
      001015 60 07            [24] 2843 	jz	00102$
      001017 EF               [12] 2844 	mov	a,r7
      001018 60 04            [24] 2845 	jz	00102$
                                   2846 ;	../../src/stm8s_tim2.c:1138: bitstatus = SET;
      00101A 7F 01            [12] 2847 	mov	r7,#0x01
      00101C 80 02            [24] 2848 	sjmp	00103$
      00101E                       2849 00102$:
                                   2850 ;	../../src/stm8s_tim2.c:1142: bitstatus = RESET;
      00101E 7F 00            [12] 2851 	mov	r7,#0x00
      001020                       2852 00103$:
                                   2853 ;	../../src/stm8s_tim2.c:1144: return (ITStatus)(bitstatus);
      001020 8F 82            [24] 2854 	mov	dpl,r7
      001022 22               [24] 2855 	ret
                                   2856 ;------------------------------------------------------------
                                   2857 ;Allocation info for local variables in function 'TIM2_ClearITPendingBit'
                                   2858 ;------------------------------------------------------------
                                   2859 ;TIM2_IT                   Allocated to registers r7 
                                   2860 ;------------------------------------------------------------
                                   2861 ;	../../src/stm8s_tim2.c:1157: void TIM2_ClearITPendingBit(TIM2_IT_TypeDef TIM2_IT)
                                   2862 ;	-----------------------------------------
                                   2863 ;	 function TIM2_ClearITPendingBit
                                   2864 ;	-----------------------------------------
      001023                       2865 _TIM2_ClearITPendingBit:
                                   2866 ;	../../src/stm8s_tim2.c:1160: assert_param(IS_TIM2_IT_OK(TIM2_IT));
      001023 E5 82            [12] 2867 	mov	a,dpl
      001025 FF               [12] 2868 	mov	r7,a
      001026 60 07            [24] 2869 	jz	00103$
      001028 EF               [12] 2870 	mov	a,r7
      001029 24 F0            [12] 2871 	add	a,#0xff - 0x0f
      00102B 92*02            [24] 2872 	mov	_TIM2_ClearITPendingBit_sloc0_1_0,c
      00102D 50 18            [24] 2873 	jnc	00104$
      00102F                       2874 00103$:
      00102F 75*00 88         [24] 2875 	mov	_assert_failed_PARM_2,#0x88
      001032 75*01 04         [24] 2876 	mov	(_assert_failed_PARM_2 + 1),#0x04
      001035 E4               [12] 2877 	clr	a
      001036 F5*02            [12] 2878 	mov	(_assert_failed_PARM_2 + 2),a
      001038 F5*03            [12] 2879 	mov	(_assert_failed_PARM_2 + 3),a
      00103A 90r00r00         [24] 2880 	mov	dptr,#___str_0
      00103D 75 F0 80         [24] 2881 	mov	b,#0x80
      001040 C0 07            [24] 2882 	push	ar7
      001042 12r00r00         [24] 2883 	lcall	_assert_failed
      001045 D0 07            [24] 2884 	pop	ar7
      001047                       2885 00104$:
                                   2886 ;	../../src/stm8s_tim2.c:1163: TIM2->SR1 = (uint8_t)(~TIM2_IT);
      001047 EF               [12] 2887 	mov	a,r7
      001048 F4               [12] 2888 	cpl	a
      001049 FF               [12] 2889 	mov	r7,a
      00104A 90 53 04         [24] 2890 	mov	dptr,#0x5304
      00104D 75 F0 00         [24] 2891 	mov	b,#0x00
      001050 EF               [12] 2892 	mov	a,r7
      001051 02r00r00         [24] 2893 	ljmp	__gptrput
                                   2894 ;------------------------------------------------------------
                                   2895 ;Allocation info for local variables in function 'TI1_Config'
                                   2896 ;------------------------------------------------------------
                                   2897 ;TIM2_ICSelection          Allocated with name '_TI1_Config_PARM_2'
                                   2898 ;TIM2_ICFilter             Allocated with name '_TI1_Config_PARM_3'
                                   2899 ;TIM2_ICPolarity           Allocated to registers r7 
                                   2900 ;------------------------------------------------------------
                                   2901 ;	../../src/stm8s_tim2.c:1182: static void TI1_Config(uint8_t TIM2_ICPolarity,
                                   2902 ;	-----------------------------------------
                                   2903 ;	 function TI1_Config
                                   2904 ;	-----------------------------------------
      001054                       2905 _TI1_Config:
      001054 AF 82            [24] 2906 	mov	r7,dpl
                                   2907 ;	../../src/stm8s_tim2.c:1187: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      001056 90 53 0A         [24] 2908 	mov	dptr,#0x530a
      001059 75 F0 00         [24] 2909 	mov	b,#0x00
      00105C 12r00r00         [24] 2910 	lcall	__gptrget
      00105F FE               [12] 2911 	mov	r6,a
      001060 53 06 FE         [24] 2912 	anl	ar6,#0xfe
      001063 90 53 0A         [24] 2913 	mov	dptr,#0x530a
      001066 75 F0 00         [24] 2914 	mov	b,#0x00
      001069 EE               [12] 2915 	mov	a,r6
      00106A 12r00r00         [24] 2916 	lcall	__gptrput
                                   2917 ;	../../src/stm8s_tim2.c:1190: TIM2->CCMR1  = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~(uint8_t)( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF )))
      00106D 90 53 07         [24] 2918 	mov	dptr,#0x5307
      001070 75 F0 00         [24] 2919 	mov	b,#0x00
      001073 12r00r00         [24] 2920 	lcall	__gptrget
      001076 FE               [12] 2921 	mov	r6,a
      001077 53 06 0C         [24] 2922 	anl	ar6,#0x0c
                                   2923 ;	../../src/stm8s_tim2.c:1191: | (uint8_t)(((TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      00107A E5*01            [12] 2924 	mov	a,_TI1_Config_PARM_3
      00107C C4               [12] 2925 	swap	a
      00107D 54 F0            [12] 2926 	anl	a,#0xf0
      00107F FD               [12] 2927 	mov	r5,a
      001080 45*00            [12] 2928 	orl	a,_TI1_Config_PARM_2
      001082 42 06            [12] 2929 	orl	ar6,a
      001084 90 53 07         [24] 2930 	mov	dptr,#0x5307
      001087 75 F0 00         [24] 2931 	mov	b,#0x00
      00108A EE               [12] 2932 	mov	a,r6
      00108B 12r00r00         [24] 2933 	lcall	__gptrput
                                   2934 ;	../../src/stm8s_tim2.c:1194: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      00108E EF               [12] 2935 	mov	a,r7
      00108F 60 19            [24] 2936 	jz	00102$
                                   2937 ;	../../src/stm8s_tim2.c:1196: TIM2->CCER1 |= TIM2_CCER1_CC1P;
      001091 90 53 0A         [24] 2938 	mov	dptr,#0x530a
      001094 75 F0 00         [24] 2939 	mov	b,#0x00
      001097 12r00r00         [24] 2940 	lcall	__gptrget
      00109A FF               [12] 2941 	mov	r7,a
      00109B 43 07 02         [24] 2942 	orl	ar7,#0x02
      00109E 90 53 0A         [24] 2943 	mov	dptr,#0x530a
      0010A1 75 F0 00         [24] 2944 	mov	b,#0x00
      0010A4 EF               [12] 2945 	mov	a,r7
      0010A5 12r00r00         [24] 2946 	lcall	__gptrput
      0010A8 80 17            [24] 2947 	sjmp	00103$
      0010AA                       2948 00102$:
                                   2949 ;	../../src/stm8s_tim2.c:1200: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1P);
      0010AA 90 53 0A         [24] 2950 	mov	dptr,#0x530a
      0010AD 75 F0 00         [24] 2951 	mov	b,#0x00
      0010B0 12r00r00         [24] 2952 	lcall	__gptrget
      0010B3 FF               [12] 2953 	mov	r7,a
      0010B4 53 07 FD         [24] 2954 	anl	ar7,#0xfd
      0010B7 90 53 0A         [24] 2955 	mov	dptr,#0x530a
      0010BA 75 F0 00         [24] 2956 	mov	b,#0x00
      0010BD EF               [12] 2957 	mov	a,r7
      0010BE 12r00r00         [24] 2958 	lcall	__gptrput
      0010C1                       2959 00103$:
                                   2960 ;	../../src/stm8s_tim2.c:1203: TIM2->CCER1 |= TIM2_CCER1_CC1E;
      0010C1 90 53 0A         [24] 2961 	mov	dptr,#0x530a
      0010C4 75 F0 00         [24] 2962 	mov	b,#0x00
      0010C7 12r00r00         [24] 2963 	lcall	__gptrget
      0010CA FF               [12] 2964 	mov	r7,a
      0010CB 43 07 01         [24] 2965 	orl	ar7,#0x01
      0010CE 90 53 0A         [24] 2966 	mov	dptr,#0x530a
      0010D1 75 F0 00         [24] 2967 	mov	b,#0x00
      0010D4 EF               [12] 2968 	mov	a,r7
      0010D5 02r00r00         [24] 2969 	ljmp	__gptrput
                                   2970 ;------------------------------------------------------------
                                   2971 ;Allocation info for local variables in function 'TI2_Config'
                                   2972 ;------------------------------------------------------------
                                   2973 ;TIM2_ICSelection          Allocated with name '_TI2_Config_PARM_2'
                                   2974 ;TIM2_ICFilter             Allocated with name '_TI2_Config_PARM_3'
                                   2975 ;TIM2_ICPolarity           Allocated to registers r7 
                                   2976 ;------------------------------------------------------------
                                   2977 ;	../../src/stm8s_tim2.c:1222: static void TI2_Config(uint8_t TIM2_ICPolarity,
                                   2978 ;	-----------------------------------------
                                   2979 ;	 function TI2_Config
                                   2980 ;	-----------------------------------------
      0010D8                       2981 _TI2_Config:
      0010D8 AF 82            [24] 2982 	mov	r7,dpl
                                   2983 ;	../../src/stm8s_tim2.c:1227: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      0010DA 90 53 0A         [24] 2984 	mov	dptr,#0x530a
      0010DD 75 F0 00         [24] 2985 	mov	b,#0x00
      0010E0 12r00r00         [24] 2986 	lcall	__gptrget
      0010E3 FE               [12] 2987 	mov	r6,a
      0010E4 53 06 EF         [24] 2988 	anl	ar6,#0xef
      0010E7 90 53 0A         [24] 2989 	mov	dptr,#0x530a
      0010EA 75 F0 00         [24] 2990 	mov	b,#0x00
      0010ED EE               [12] 2991 	mov	a,r6
      0010EE 12r00r00         [24] 2992 	lcall	__gptrput
                                   2993 ;	../../src/stm8s_tim2.c:1230: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~(uint8_t)( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF )))
      0010F1 90 53 08         [24] 2994 	mov	dptr,#0x5308
      0010F4 75 F0 00         [24] 2995 	mov	b,#0x00
      0010F7 12r00r00         [24] 2996 	lcall	__gptrget
      0010FA FE               [12] 2997 	mov	r6,a
      0010FB 53 06 0C         [24] 2998 	anl	ar6,#0x0c
                                   2999 ;	../../src/stm8s_tim2.c:1231: | (uint8_t)(( (TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      0010FE E5*01            [12] 3000 	mov	a,_TI2_Config_PARM_3
      001100 C4               [12] 3001 	swap	a
      001101 54 F0            [12] 3002 	anl	a,#0xf0
      001103 FD               [12] 3003 	mov	r5,a
      001104 45*00            [12] 3004 	orl	a,_TI2_Config_PARM_2
      001106 42 06            [12] 3005 	orl	ar6,a
      001108 90 53 08         [24] 3006 	mov	dptr,#0x5308
      00110B 75 F0 00         [24] 3007 	mov	b,#0x00
      00110E EE               [12] 3008 	mov	a,r6
      00110F 12r00r00         [24] 3009 	lcall	__gptrput
                                   3010 ;	../../src/stm8s_tim2.c:1235: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      001112 EF               [12] 3011 	mov	a,r7
      001113 60 19            [24] 3012 	jz	00102$
                                   3013 ;	../../src/stm8s_tim2.c:1237: TIM2->CCER1 |= TIM2_CCER1_CC2P;
      001115 90 53 0A         [24] 3014 	mov	dptr,#0x530a
      001118 75 F0 00         [24] 3015 	mov	b,#0x00
      00111B 12r00r00         [24] 3016 	lcall	__gptrget
      00111E FF               [12] 3017 	mov	r7,a
      00111F 43 07 20         [24] 3018 	orl	ar7,#0x20
      001122 90 53 0A         [24] 3019 	mov	dptr,#0x530a
      001125 75 F0 00         [24] 3020 	mov	b,#0x00
      001128 EF               [12] 3021 	mov	a,r7
      001129 12r00r00         [24] 3022 	lcall	__gptrput
      00112C 80 17            [24] 3023 	sjmp	00103$
      00112E                       3024 00102$:
                                   3025 ;	../../src/stm8s_tim2.c:1241: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2P);
      00112E 90 53 0A         [24] 3026 	mov	dptr,#0x530a
      001131 75 F0 00         [24] 3027 	mov	b,#0x00
      001134 12r00r00         [24] 3028 	lcall	__gptrget
      001137 FF               [12] 3029 	mov	r7,a
      001138 53 07 DF         [24] 3030 	anl	ar7,#0xdf
      00113B 90 53 0A         [24] 3031 	mov	dptr,#0x530a
      00113E 75 F0 00         [24] 3032 	mov	b,#0x00
      001141 EF               [12] 3033 	mov	a,r7
      001142 12r00r00         [24] 3034 	lcall	__gptrput
      001145                       3035 00103$:
                                   3036 ;	../../src/stm8s_tim2.c:1245: TIM2->CCER1 |= TIM2_CCER1_CC2E;
      001145 90 53 0A         [24] 3037 	mov	dptr,#0x530a
      001148 75 F0 00         [24] 3038 	mov	b,#0x00
      00114B 12r00r00         [24] 3039 	lcall	__gptrget
      00114E FF               [12] 3040 	mov	r7,a
      00114F 43 07 10         [24] 3041 	orl	ar7,#0x10
      001152 90 53 0A         [24] 3042 	mov	dptr,#0x530a
      001155 75 F0 00         [24] 3043 	mov	b,#0x00
      001158 EF               [12] 3044 	mov	a,r7
      001159 02r00r00         [24] 3045 	ljmp	__gptrput
                                   3046 ;------------------------------------------------------------
                                   3047 ;Allocation info for local variables in function 'TI3_Config'
                                   3048 ;------------------------------------------------------------
                                   3049 ;TIM2_ICSelection          Allocated with name '_TI3_Config_PARM_2'
                                   3050 ;TIM2_ICFilter             Allocated with name '_TI3_Config_PARM_3'
                                   3051 ;TIM2_ICPolarity           Allocated to registers r7 
                                   3052 ;------------------------------------------------------------
                                   3053 ;	../../src/stm8s_tim2.c:1262: static void TI3_Config(uint8_t TIM2_ICPolarity, uint8_t TIM2_ICSelection,
                                   3054 ;	-----------------------------------------
                                   3055 ;	 function TI3_Config
                                   3056 ;	-----------------------------------------
      00115C                       3057 _TI3_Config:
      00115C AF 82            [24] 3058 	mov	r7,dpl
                                   3059 ;	../../src/stm8s_tim2.c:1266: TIM2->CCER2 &=  (uint8_t)(~TIM2_CCER2_CC3E);
      00115E 90 53 0B         [24] 3060 	mov	dptr,#0x530b
      001161 75 F0 00         [24] 3061 	mov	b,#0x00
      001164 12r00r00         [24] 3062 	lcall	__gptrget
      001167 FE               [12] 3063 	mov	r6,a
      001168 53 06 FE         [24] 3064 	anl	ar6,#0xfe
      00116B 90 53 0B         [24] 3065 	mov	dptr,#0x530b
      00116E 75 F0 00         [24] 3066 	mov	b,#0x00
      001171 EE               [12] 3067 	mov	a,r6
      001172 12r00r00         [24] 3068 	lcall	__gptrput
                                   3069 ;	../../src/stm8s_tim2.c:1269: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF)))
      001175 90 53 09         [24] 3070 	mov	dptr,#0x5309
      001178 75 F0 00         [24] 3071 	mov	b,#0x00
      00117B 12r00r00         [24] 3072 	lcall	__gptrget
      00117E FE               [12] 3073 	mov	r6,a
      00117F 53 06 0C         [24] 3074 	anl	ar6,#0x0c
                                   3075 ;	../../src/stm8s_tim2.c:1270: | (uint8_t)(( (TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      001182 E5*01            [12] 3076 	mov	a,_TI3_Config_PARM_3
      001184 C4               [12] 3077 	swap	a
      001185 54 F0            [12] 3078 	anl	a,#0xf0
      001187 FD               [12] 3079 	mov	r5,a
      001188 45*00            [12] 3080 	orl	a,_TI3_Config_PARM_2
      00118A 42 06            [12] 3081 	orl	ar6,a
      00118C 90 53 09         [24] 3082 	mov	dptr,#0x5309
      00118F 75 F0 00         [24] 3083 	mov	b,#0x00
      001192 EE               [12] 3084 	mov	a,r6
      001193 12r00r00         [24] 3085 	lcall	__gptrput
                                   3086 ;	../../src/stm8s_tim2.c:1274: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      001196 EF               [12] 3087 	mov	a,r7
      001197 60 19            [24] 3088 	jz	00102$
                                   3089 ;	../../src/stm8s_tim2.c:1276: TIM2->CCER2 |= TIM2_CCER2_CC3P;
      001199 90 53 0B         [24] 3090 	mov	dptr,#0x530b
      00119C 75 F0 00         [24] 3091 	mov	b,#0x00
      00119F 12r00r00         [24] 3092 	lcall	__gptrget
      0011A2 FF               [12] 3093 	mov	r7,a
      0011A3 43 07 02         [24] 3094 	orl	ar7,#0x02
      0011A6 90 53 0B         [24] 3095 	mov	dptr,#0x530b
      0011A9 75 F0 00         [24] 3096 	mov	b,#0x00
      0011AC EF               [12] 3097 	mov	a,r7
      0011AD 12r00r00         [24] 3098 	lcall	__gptrput
      0011B0 80 17            [24] 3099 	sjmp	00103$
      0011B2                       3100 00102$:
                                   3101 ;	../../src/stm8s_tim2.c:1280: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3P);
      0011B2 90 53 0B         [24] 3102 	mov	dptr,#0x530b
      0011B5 75 F0 00         [24] 3103 	mov	b,#0x00
      0011B8 12r00r00         [24] 3104 	lcall	__gptrget
      0011BB FF               [12] 3105 	mov	r7,a
      0011BC 53 07 FD         [24] 3106 	anl	ar7,#0xfd
      0011BF 90 53 0B         [24] 3107 	mov	dptr,#0x530b
      0011C2 75 F0 00         [24] 3108 	mov	b,#0x00
      0011C5 EF               [12] 3109 	mov	a,r7
      0011C6 12r00r00         [24] 3110 	lcall	__gptrput
      0011C9                       3111 00103$:
                                   3112 ;	../../src/stm8s_tim2.c:1283: TIM2->CCER2 |= TIM2_CCER2_CC3E;
      0011C9 90 53 0B         [24] 3113 	mov	dptr,#0x530b
      0011CC 75 F0 00         [24] 3114 	mov	b,#0x00
      0011CF 12r00r00         [24] 3115 	lcall	__gptrget
      0011D2 FF               [12] 3116 	mov	r7,a
      0011D3 43 07 01         [24] 3117 	orl	ar7,#0x01
      0011D6 90 53 0B         [24] 3118 	mov	dptr,#0x530b
      0011D9 75 F0 00         [24] 3119 	mov	b,#0x00
      0011DC EF               [12] 3120 	mov	a,r7
      0011DD 02r00r00         [24] 3121 	ljmp	__gptrput
                                   3122 	.area CSEG    (CODE)
                                   3123 	.area CONST   (CODE)
      000000                       3124 ___str_0:
      000000 2E 2E 2F 2E 2E 2F 73  3125 	.ascii "../../src/stm8s_tim2.c"
             72 63 2F 73 74 6D 38
             73 5F 74 69 6D 32 2E
             63
      000016 00                    3126 	.db 0x00
                                   3127 	.area XINIT   (CODE)
                                   3128 	.area CABS    (ABS,CODE)
